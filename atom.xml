<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>徐berber的施工小站</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-12-04T06:18:22.232Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>徐云飞</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JavaScript垃圾回收机制</title>
    <link href="http://example.com/2022/12/04/JavaScript%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6/"/>
    <id>http://example.com/2022/12/04/JavaScript%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6/</id>
    <published>2022-12-04T06:18:22.232Z</published>
    <updated>2022-12-04T06:18:22.232Z</updated>
    
    <content type="html"><![CDATA[<p>针对JavaScript垃圾回收机制的深入学习</p><span id="more"></span><h1 id="前置知识"><a href="#前置知识" class="headerlink" title="前置知识"></a>前置知识</h1><h2 id="堆栈"><a href="#堆栈" class="headerlink" title="堆栈"></a>堆栈</h2><h3 id="栈"><a href="#栈" class="headerlink" title="栈"></a>栈</h3><p><strong>什么是栈</strong><br>栈其实是一种数据结构，有着<code>先进后出，后进先出</code>的特性，用生活中的事物来理解最形象的就是<strong>汉诺塔</strong>了。我们在栈中存储的数据就像汉诺塔的盘子一样，最先放进去在最下面，最后放入的盘子在最上面。我们想拿数据的时候，也需要从塔顶开始拿，也就是最后放入的开始，上面的拿完才能拿下面的。</p><blockquote><p>下图可以看做有三个栈<br><img src="https://img-blog.csdnimg.cn/da0dc0d079ae408bb63682c7d7e04d07.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA55m957q45LiA5qC3,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p></blockquote><p>简而言之，我们可以将栈理解为一个具有<code>先进后出，后进先出</code>特点的<strong>存储空间</strong>，对于JavaScript来说，它会把<strong>基本数据类型</strong>放入栈内存储。</p><h3 id="堆"><a href="#堆" class="headerlink" title="堆"></a>堆</h3><p><strong>什么是堆</strong><br>当我们创建一个<strong>对象</strong>的时候，实际上会在堆空间开辟一个空间，我们声明的变量保存的其实是堆空间的地址<br><img src="https://img-blog.csdnimg.cn/37367e516a004f2780c2098d1b378443.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA55m957q45LiA5qC3,size_20,color_FFFFFF,t_70,g_se,x_16" alt="堆和栈"><br>简而言之，堆空间是存放<strong>复杂数据类型</strong>的存储空间，我们通过变量存储的其实是这些数据在堆空间内的地址。</p><p>当我们将一个本来存有地址的变量设置为null时，本质上是将该变量与堆空间的联系斩断，但堆空间内仍存有之前的复杂数据类型。只有当垃圾回收机制执行时，才会将这些没有人引用的复杂数据类型销毁，释放出堆空间。</p><h2 id="执行上下文与作用域链"><a href="#执行上下文与作用域链" class="headerlink" title="执行上下文与作用域链"></a>执行上下文与作用域链</h2><h3 id="执行上下文"><a href="#执行上下文" class="headerlink" title="执行上下文"></a>执行上下文</h3><p>在JavaScript中有三种上下文</p><ul><li><p>全局执行上下文：Global Code<br>JavaScript代码开始运行的默认环境</p></li><li><p>函数执行上下文：Function Code<br>存在无数个，只有在函数被调用的时候才会被创建，每次调用函数都会创建一个新的执行上下文。</p></li><li><p>Eval 函数执行上下文： 使用eval()执行代码，因为很少用所以本次不做讨论。</p></li></ul><p>在JavaScript代码执行的过程中，默认进入的总是全局执行上下文，JavaScript会把其存入<strong>上下文栈</strong>中去，每当遇到定义的函数被执行，便会创建一个<strong>新的执行上下文</strong>，并将其存入<strong>上下文栈</strong>中去。</p><p>当一个函数执行完毕后，上下文栈会将其弹出，将上下文环境交还给上个函数。</p><h3 id="作用域链"><a href="#作用域链" class="headerlink" title="作用域链"></a>作用域链</h3><p><strong>上下文栈</strong>会根据栈内的顺序形成一条作用域链，用来控制变量的访问。处于上层作用域链的函数内部无法访问下层作用域链的变量。</p><p>下层作用域链中的函数可以访问上层作用域链的对象，若上层也没有，则再向上查找，直到全局作用域也没有，则返回null。</p><h1 id="一、JavaScript中怎么被定义为垃圾"><a href="#一、JavaScript中怎么被定义为垃圾" class="headerlink" title="一、JavaScript中怎么被定义为垃圾"></a>一、JavaScript中怎么被定义为垃圾</h1><h2 id="使用局部变量"><a href="#使用局部变量" class="headerlink" title="使用局部变量"></a>使用局部变量</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">makeTrash</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="keyword">var</span> a = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 在makeTrash执行时，会创建a这个变量。</span></span><br><span class="line"><span class="comment">// 此时栈空间会为其分配一块区域供其存储。</span></span><br><span class="line"><span class="title function_">makeTrash</span>();</span><br><span class="line"><span class="comment">// 函数执行完后，由于不再需要变量a，所以此时的a便成为了垃圾</span></span><br><span class="line"><span class="comment">// 栈空间将会释放之前为a分配的空间。</span></span><br><span class="line"><span class="comment">// 至此，垃圾回收完毕</span></span><br></pre></td></tr></table></figure><h2 id="使用对象"><a href="#使用对象" class="headerlink" title="使用对象"></a>使用对象</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 此时的obj指向堆内存中创建的一块空间</span></span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line"><span class="attr">name</span>:<span class="string">&#x27;ZhangSan&#x27;</span>,</span><br><span class="line"><span class="attr">age</span>:<span class="string">&#x27;18&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">obj = <span class="literal">null</span></span><br><span class="line"><span class="comment">// 当我们对其赋值为null的时候，obj与堆内存中的空间的关系被斩断。</span></span><br><span class="line"><span class="comment">// 由于堆内存中的空间没有人引用，所以这块空间就成了JavaScript中所谓的的垃圾</span></span><br></pre></td></tr></table></figure><h2 id="概括"><a href="#概括" class="headerlink" title="概括"></a>概括</h2><p>凡是未被引用的变量或对象，都会被视为垃圾。</p><blockquote><p><strong>可能成为垃圾的特例</strong><br><strong>全局变量</strong><br>由于全局对象window的销毁一般发生在页面卸载时，所以对于全局变量是否为垃圾很难进行判断，所以要尽量少用全局变量，或在用完设置为null。<br><strong>闭包</strong><br>在闭包中，由于返回的函数对于变量持有引用，垃圾回收机制也无法对外层函数中被引用的变量进行回收，所以需要手动把接收闭包返回值的对象设置为null。</p></blockquote><h1 id="二、两种回收策略"><a href="#二、两种回收策略" class="headerlink" title="二、两种回收策略"></a>二、两种回收策略</h1><p>JavaScript中垃圾回收机制的策略分为两种</p><ul><li>标记清理</li><li>引用计数</li></ul><h2 id="标记清理"><a href="#标记清理" class="headerlink" title="标记清理"></a>标记清理</h2><p>当变量进入上下文时，会对其添加上 <strong>存在于上下文</strong> 的标记。当变量退出上下文时，对<strong>退出上下文</strong>的变量添加上<strong>退出上下文的标记</strong></p><blockquote><p>例如在一个函数中声明一个变量，该变量就会被标记为存在于上下文中。当函数执行完毕，上下文栈弹出该函数的上下文，其内变量添加 退出上下文的标记。</p></blockquote><p>此种策略的垃圾回收机制在运行的时候，会对所有<strong>已存在于内存的变量</strong>进行标记。</p><p>之后垃圾回收机制会清除<strong>上下文中所有变量</strong>的标记，<strong>包括其引用的变量的标记</strong>也会在此被清除。</p><p>最后仍然被标记的变量，即为要回收的垃圾。因为没有地方引用他们。</p><h2 id="引用计数"><a href="#引用计数" class="headerlink" title="引用计数"></a>引用计数</h2><p>该种策略会对每个值记录它被引用的次数。声明变量并给他赋一个引用值时，这个值的引用数为1。如果同一个值又被赋给另一个变量，则引用次数+1。</p><p>类似的，如果保存对该值引用的变量被其他值给覆盖了，那么引用数-1。</p><p>当一个值的引用数为0时，就说明没有办法在访问到这个值了。此时被判断为垃圾，在下次垃圾回收机制执行时会释放引用值为0的值所占用的内存。</p><h2 id="概括-1"><a href="#概括-1" class="headerlink" title="概括"></a>概括</h2><p>本质上都是找到未被引用的值，从而在垃圾回收执行时释放其空间。</p><h1 id="三、什么时候执行垃圾回收"><a href="#三、什么时候执行垃圾回收" class="headerlink" title="三、什么时候执行垃圾回收"></a>三、什么时候执行垃圾回收</h1><p>不同浏览器的引擎执行垃圾回收的时机也不一样。</p><p>根据网上查阅的资料来看，对于大部分浏览器的引擎来说，我们无法人为的去控制什么时候进行垃圾回收，因为js并没有暴露出相关的接口供我们调用。</p><p>我们在MDN中可以看到一些相关的说明</p><blockquote><p><strong>不再需要内存时释放</strong><br>大多数内存管理问题发生在这个阶段。此阶段最困难的方面是确定何时不再需要分配的内存。 低级语言要求开发人员手动确定程序中哪个点不再需要分配的内存并释放它。 一些高级语言，例如 JavaScript，使用一种称为垃圾收集 (GC) 的自动内存管理形式。垃圾收集器的目的是监控内存分配并确定何时不再需要分配的内存块并回收它。这个自动过程是一个近似值，因为确定是否仍然需要特定内存的一般问题是不可判定的。</p></blockquote><p>在拥有了两种垃圾回收策略后，执行的周期性不再是问题，因为我们能够将垃圾明确出来，只需要等下次回收即可。</p><blockquote><p><strong>周期不再是问题</strong> </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">f</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="keyword">var</span> x = &#123;&#125;;</span><br><span class="line"><span class="keyword">var</span> y = &#123;&#125;;</span><br><span class="line">x.<span class="property">a</span> = y;        <span class="comment">// x references y</span></span><br><span class="line">y.<span class="property">a</span> = x;        <span class="comment">// y references x</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="string">&#x27;azerty&#x27;</span>;</span><br><span class="line">&gt;&#125;</span><br><span class="line">&gt;<span class="title function_">f</span>();</span><br></pre></td></tr></table></figure><p>在上面的示例中，函数调用返回后，这两个对象不再被可从全局对象访问的任何资源引用。因此，垃圾收集器将发现它们无法访问并回收分配的内存。</p></blockquote><h2 id="关于Chrome-V8引擎的GC"><a href="#关于Chrome-V8引擎的GC" class="headerlink" title="关于Chrome V8引擎的GC"></a>关于Chrome V8引擎的GC</h2><h3 id="分代回收"><a href="#分代回收" class="headerlink" title="分代回收"></a>分代回收</h3><p>绝大多数对象的生存期很短，只有某些对象的生存期较长。为利用这一特点，V8将堆进行了分区：</p><ul><li><strong>新生区</strong>：大多数对象被分配在这里。新生区是一个很小的区域，垃圾回收在这个区域非常频繁，与其他区域相独立。</li><li><strong>老生指针区</strong>：这里包含大多数可能存在指向其他对象的指针的对象。大多数在新生区存活一段时间之后的对象都会被挪到这里。</li><li><strong>老生数据区</strong>：这里存放只包含原始数据的对象（这些对象没有指向其他对象的指针）。字符串、封箱的数字以及未封箱的双精度数字数组，在新生区存活一段时间后会被移动到这里。</li><li><strong>大对象区</strong>：这里存放体积超越其他区大小的对象。每个对象有自己mmap产生的内存。垃圾回收器从不移动大对象。</li><li><strong>代码区</strong>：代码对象，也就是包含JIT之后指令的对象，会被分配到这里。这是唯一拥有执行权限的内存区（不过如果代码对象因过大而放在大对象区，则该大对象所对应的内存也是可执行的。译注：但是大对象内存区本身不是可执行的内存区）。</li><li><strong>Cell区</strong>、<strong>属性Cell区</strong>、<strong>Map区</strong>：这些区域存放Cell、属性Cell和Map，每个区域因为都是存放相同大小的元素，因此内存结构很简单。</li></ul><h4 id="回收的执行周期"><a href="#回收的执行周期" class="headerlink" title="回收的执行周期"></a>回收的执行周期</h4><p>对象起初会被分配在<strong>新生区</strong>（通常很小，只有1-8 MB，具体根据行为来进行启发）。在新生区的内存分配非常容易：我们只需保有一个指向内存区的指针，不断根据新对象的大小对其进行递增即可。当该指针达到了新生区的末尾，就会有一次清理（小周期），清理掉新生区中不活跃的死对象。</p><p>对于活跃超过2个小周期的对象，则需将其移动至<strong>老生区</strong>。老生区在<code>标记－清除或标记－紧缩（大周期）</code>的过程中进行回收。大周期进行的并不频繁。一次大周期通常是在移动足够多的对象至老生区后才会发生。至于足够多到底是多少，则根据老生区自身的大小和程序的动向来定。</p><h5 id="Scavenge算法"><a href="#Scavenge算法" class="headerlink" title="Scavenge算法"></a>Scavenge算法</h5><p>V8采用了Scavenge算法，是按照Cheney的算法实现的。</p><p><strong>算法的大致流程为</strong>：将<strong>新生区</strong>划分为**入区(from-space)<strong>和</strong>出区(to-space)**。绝大多是内存分配是在出区进行，而当出区被填满时，我们会交换出区和入区，然后将入区中活跃的对象复制至出区或老生区当中。在这时我们会对活跃对象进行紧缩，以便提升Cache的内存局部性，保持内存分配的简洁快速。<br><img src="https://img-blog.csdnimg.cn/103d89585a3a47b59fc10bf7a1e84348.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA55m957q45LiA5qC3,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"><br>上图描述了在新生区中，如何回收的垃圾b。</p><p>而当一个变量在两次从<strong>入区(from-space)</strong> 移动到 <strong>出区(to-space)</strong> 时。他就会被提升到老生区的内存空间中</p><p><strong>注意</strong>，在上面的回收过程中，为了避免有<strong>老生区</strong>的变量指向新生区，但在新生区的清理周期中被引用的变量被错误回收，V8引擎做了额外的处理：<strong>写屏障</strong></p><h6 id="写屏障"><a href="#写屏障" class="headerlink" title="写屏障"></a>写屏障</h6><p>肯定不可能通过遍历老生区去查找到底哪个变量引用了新生区的变量，耗时太大。所以通过在写缓冲区中创建一个列表去记录所有老生区对象指向新生区的情况，这样就可以避免上述错误回收。该记录行为总是发生在写操作的时候，每个写操作都会经历这么一关。</p><h5 id="老生区"><a href="#老生区" class="headerlink" title="老生区"></a>老生区</h5><p>在老生区中，用到的是上文我们说过的<strong>标记清理法</strong>结合<strong>标记紧缩法</strong>去回收。</p><h6 id="标记清理法是如何标记的"><a href="#标记清理法是如何标记的" class="headerlink" title="标记清理法是如何标记的"></a>标记清理法是如何标记的</h6><p>V8 使用每个对象的两个 mark-bits 和一个标记工作表来实现标记。两个 mark-bits 编码三种颜色：白色（00），灰色（10）和黑色（11）。</p><p>如果一个对象的状态为白，那么它尚未被垃圾回收器发现，同时最开始所有对象都是白色<br>如果一个对象的状态为灰，那么它已被垃圾回收器发现，但它的邻接对象仍未全部处理完毕<br>如果一个对象的状态为黑，则它不仅被垃圾回收器发现，而且其所有邻接对象也都处理完毕</p><p>算法的核心实际是<strong>深度优先搜索</strong>，从根（Root）可达的对象会被染为灰色，并放入标记用的一个单独分配的双端队列。标记阶段的每次循环，GC会将一个对象从双端队列中取出，染为黑色，然后将它的邻居对象染为灰色，并把邻居对象放入双端队列。这一过程在双端队列为空且所有对象都变黑时结束。</p><p>特别大的对象，如长数组，可能会在处理时分片，以防溢出双端队列。如果双端队列溢出了，则对象仍然会被染为灰色，但不会再被放入队列（这样他们的邻接对象就没有机会再染色了）。因此当双端队列为空时，GC仍然需要扫描一次，确保所有的灰对象都成为了黑对象。对于未被染黑的灰对象，GC会将其再次放入队列，再度处理。</p><p>标记算法结束时，所有的<strong>活跃对象都被染为了黑色</strong>，而<strong>所有的死对象则仍是白的</strong>。</p><blockquote><p>对于深度优先和广度优先可以看看算法图解，画的挺形象的。</p></blockquote><p><strong>标记紧缩法</strong></p><p>在使用完标记清理法后，确实能够将垃圾清理掉，但是清理后的空间是不连续的。而一些数据的存储要求的是连续的空间，所以这时候就需要用标记紧缩法去整理碎片空间。</p><p>达到这种效果<img src="https://img-blog.csdnimg.cn/c382cb1e27034743adcfa7daf90b6001.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA55m957q45LiA5qC3,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p><h3 id="增量标记法"><a href="#增量标记法" class="headerlink" title="增量标记法"></a>增量标记法</h3><p>当一个<strong>堆很大而且有很多活跃对象时</strong>，<strong>标记-清除和标记-紧缩算法会执行的很慢</strong>，又因为垃圾回收机制在执行时会阻塞js代码(JS是单线程的)，所以在2012年年中，谷歌引入了增量标记和惰性清理两项技术。</p><p>增量标记允许堆的标记发生在几次5-10毫秒（移动设备）的小停顿中。增量标记在堆的大小达到一定的阈值时启用。启用后每当一定量的内存分配后，脚本就会停顿一次用来执行标记，同样是黑白灰三色，也同样是深度优先搜索。</p><h4 id="写屏障-1"><a href="#写屏障-1" class="headerlink" title="写屏障"></a>写屏障</h4><p>和上文提到过的写屏障类似，为了避免出现黑色指向白色这种情况出现，我们通过写屏障记录黑色指向白色的指针，一旦发现这种指针，就会将黑色对象重新染色为灰色对象，重新放回到双端队列中。当算法将该对象取出时，其包含的指针会被重新扫描，这样活跃的白对象就不会漏掉。</p><h4 id="惰性清理"><a href="#惰性清理" class="headerlink" title="惰性清理"></a>惰性清理</h4><p>因为所有对象已被处理，因此非死即活。谁是垃圾已经很明确了，所以不用着急释放空间，延迟一下清理也可以。</p><p>效果类似下图所示</p><p>上面的是完整的GC执行，下方的是增量标记法与惰性清理的执行。当清理完后，即可随时开始再一次的标记。<br><img src="https://img-blog.csdnimg.cn/b461d48fc25a4ede814d08a71e9ecad6.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA55m957q45LiA5qC3,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"><br>这样就能减少明显的停顿</p><h3 id="并发标记与并行标记"><a href="#并发标记与并行标记" class="headerlink" title="并发标记与并行标记"></a>并发标记与并行标记</h3><p>并发标记支持在主线程进行GC的时候启动多个worker thread一起执行GC。应用程序在整个并发标记阶段暂停，它是 stop-the-world 标记的多线程版本。</p><p>并行标记则是在主线程还在运行时即可启动多个worker thread执行GC，应用程序可以继续运行。</p><blockquote><p>具体细节可参考<br><a href="https://juejin.cn/post/6844903619804790792#comment">引擎V8推出“并发标记”，可节省60%-70%的GC时间</a></p></blockquote><h1 id="四、内存问题"><a href="#四、内存问题" class="headerlink" title="四、内存问题"></a>四、内存问题</h1><h2 id="内存泄漏"><a href="#内存泄漏" class="headerlink" title="内存泄漏"></a>内存泄漏</h2><p><strong>什么是内存泄漏？</strong></p><p>内存泄漏指的是在执行垃圾回收的时候， 由于一些原因导致本应释放掉的空间没有被释放掉。</p><h2 id="常见的内存泄漏"><a href="#常见的内存泄漏" class="headerlink" title="常见的内存泄漏"></a>常见的内存泄漏</h2><h3 id="循环引用"><a href="#循环引用" class="headerlink" title="循环引用"></a>循环引用</h3><p>在浏览器早起采用<strong>引用计数法</strong>的时候，如果两个变量相互引用，则其引用数始终为1，而垃圾回收只会对引用数为0的变量进行回收，这时就导致了内存泄漏。这也是为什么现在大都采用的<strong>标记清理法</strong></p><h3 id="没有被销毁的全局变量和计时器"><a href="#没有被销毁的全局变量和计时器" class="headerlink" title="没有被销毁的全局变量和计时器"></a>没有被销毁的全局变量和计时器</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>)&#123;</span><br><span class="line">bar = <span class="string">&#x27;bar&#x27;</span>; <span class="comment">// 声明了全局变量</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fn</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> timer = <span class="title function_">getStart</span>();</span><br><span class="line"><span class="title function_">getStart</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> temp = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;temp&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span>(temp) &#123;</span><br><span class="line">        temp.<span class="property">innerHTML</span> = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(temp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;, <span class="number">5000</span>); <span class="comment">// 每5秒调用一次</span></span><br></pre></td></tr></table></figure><p>此时若不手动置为null&#x2F;调用clearInterval，则该变量和计时器将会一直存在，造成内存泄漏。直到window对象被销毁。</p><h3 id="闭包"><a href="#闭包" class="headerlink" title="闭包"></a>闭包</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> closure = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="keyword">var</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="keyword">return</span> count++</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> fn = <span class="title function_">closure</span>(); </span><br></pre></td></tr></table></figure><p>由于被返回的函数一直持有其外层函数<code>closure</code>的变量<code>count</code>导致<code>count</code>无法被回收，造成内存泄漏。所以能少用闭包就少用，或者用完及时置为null。</p><h2 id="内存溢出"><a href="#内存溢出" class="headerlink" title="内存溢出"></a>内存溢出</h2><p>内存溢出是一种程序运行的错误。指的是当程序运行需要的内存超过了剩余内存的时候，就会抛出内存溢出的错误。</p><p>内存泄漏积累过多时，就会导致内存溢出。</p><h2 id="频繁的垃圾回收"><a href="#频繁的垃圾回收" class="headerlink" title="频繁的垃圾回收"></a>频繁的垃圾回收</h2><p>通过上文我们可以知道，早期的垃圾回收是单线程的，执行时会引起主线程的停顿。过于频繁的垃圾回收会造成程序的卡顿。</p><p>后来加入的<strong>并行标记</strong>和<strong>并发标记</strong>都是为了解决这个主线程卡顿的问题，但是否被现在的主流浏览器采用还是不太清楚。</p><h1 id="五、Es6-WeakMap"><a href="#五、Es6-WeakMap" class="headerlink" title="五、Es6 WeakMap"></a>五、Es6 WeakMap</h1><p>为了解决内存泄漏这个问题，ES6添加了<code>WeakMap</code>和<code>WeakSet</code>两个数据结构。他们对于值的引用都是不计入垃圾回收机制的，所以名字里才会有一个Weak，表示弱引用。</p><p>基本上，如果你要往对象上添加数据，又不想干扰垃圾回收机制，就可以使用 WeakMap。</p><hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><ul><li><a href="http://newhtml.net/v8-garbage-collection/">【译】V8 之旅： 垃圾回收器</a>（想了解细节方面的可以看看）<ul><li><a href="http://www.jayconrod.com/posts/55/a-tour-of-v8-garbage-collection">原文</a>（翻译的看起来可能会有些不易理解，建议结合起来看）</li></ul></li><li><a href="https://juejin.cn/post/6897554152147451917">javascript垃圾回收机制</a></li><li><a href="https://blog.csdn.net/a546598185/article/details/107625888">JavaScript执行机制之垃圾回收</a></li><li><a href="https://juejin.cn/post/6844903619804790792#comment">引擎V8推出“并发标记”，可节省60%-70%的GC时间</a></li><li><a href="https://juejin.cn/post/6844904143317024775#heading-3">JavaScript 内存管理以及垃圾回收机制（引用计数、标记清除）</a></li><li><a href="https://juejin.cn/post/6844904036932534279">图解 JavaScript 垃圾回收 — 现代 JavaScript 教程</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Memory_Management#garbage_collection">MDN</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;针对JavaScript垃圾回收机制的深入学习&lt;/p&gt;</summary>
    
    
    
    <category term="前端" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="JavaScript" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF/JavaScript/"/>
    
    
    <category term="垃圾回收" scheme="http://example.com/tags/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/"/>
    
  </entry>
  
  <entry>
    <title>generator与async/await</title>
    <link href="http://example.com/2022/12/04/generator%E4%B8%8Easync%E3%80%81await/"/>
    <id>http://example.com/2022/12/04/generator%E4%B8%8Easync%E3%80%81await/</id>
    <published>2022-12-04T06:18:22.232Z</published>
    <updated>2022-12-04T06:18:22.232Z</updated>
    
    <content type="html"><![CDATA[<p>之前就一直在困惑，await 后面包的那一大群代码到底是怎么个处理，闲下来了，这就学习一波</p><p>async和await是generator和Promise的语法糖，本质上是是将 Generator 函数和自动执行器，包装在一个函数里。</p><span id="more"></span><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params">args</span>) &#123;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 等同于</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params">args</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="title function_">spawn</span>(<span class="keyword">function</span>* () &#123;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>spawn</code>函数的实现，是Thunk函数的一种体现</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">spawn</span>(<span class="params">genF</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="keyword">function</span>(<span class="params">trdolve, reject</span>)&#123;</span><br><span class="line"><span class="keyword">const</span> gen = <span class="title function_">genF</span>();</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">step</span>(<span class="params">nextF</span>)&#123;</span><br><span class="line"><span class="keyword">let</span> next;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">next = <span class="title function_">nextF</span>();</span><br><span class="line">&#125;<span class="keyword">catch</span>(e)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="title function_">reject</span>(e);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">if</span>(next.<span class="property">done</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="title function_">resolve</span>(next.<span class="property">value</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="title class_">Promise</span>.<span class="title function_">resolve</span>(next.<span class="property">value</span>).<span class="title function_">then</span>(<span class="keyword">function</span>(<span class="params">v</span>)&#123;</span><br><span class="line"><span class="title function_">step</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123; <span class="keyword">return</span> gen.<span class="title function_">next</span>(v); &#125;);</span><br><span class="line">&#125;,<span class="keyword">function</span>(<span class="params">e</span>)&#123;</span><br><span class="line"><span class="title function_">step</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123; <span class="keyword">return</span> gen.<span class="keyword">throw</span>(e); &#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">step</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123; <span class="keyword">return</span> gen.<span class="title function_">next</span>(<span class="literal">undefined</span>); &#125;);</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Thunk函数"><a href="#Thunk函数" class="headerlink" title="Thunk函数"></a>Thunk函数</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> x = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">f</span>(<span class="params">m</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> m*<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">f</span>(x+<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 等同于</span></span><br><span class="line"><span class="keyword">let</span> thunk = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="keyword">return</span> x+<span class="number">5</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">f</span>(<span class="params">thunk</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="title function_">thunk</span>() * <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译器的“传名调用”实现，往往是将参数放到一个临时函数之中，再将这个临时函数传入函数体。这个临时函数就叫做 Thunk 函数</p><p>Thunk函数的一大亮点就是其自动流程管理，也是Generator函数自动执行器的实现原理。</p><p>通过thunk函数，我们能够<strong>自动化交付控制权</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">run</span>(<span class="params">fn</span>)&#123;</span><br><span class="line"><span class="keyword">let</span> gen = <span class="title function_">fn</span>();</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">next</span>(<span class="params">err, data</span>)&#123;</span><br><span class="line"><span class="keyword">let</span> result = gen.<span class="title function_">next</span>(data);</span><br><span class="line"><span class="keyword">if</span>(result.<span class="property">done</span>) <span class="keyword">return</span>;</span><br><span class="line">result.<span class="title function_">value</span>(next);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">next</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span>* <span class="title function_">g</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="title function_">run</span>(g);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>我们都知道generator函数本身的执行需要通过next方法配合yield操作指针来放行任务，将控制权交接。但async和await并未出现相关的操作，只需要我们声明async函数和await的代码即可，函数会按顺序依次执行。</p><p>这本质上是通过thunk函数的自动执行的特点和Promise的状态实现的。<br>通过thunk函数，我们可以不用手动调用next，而是<strong>通过判断上一次next的执行结果是否结束(done是否为true)来继续执行或跳出</strong></p><p><strong>在Promise的Pending状态发生改变后，如果是 resolve，则通过Promise的then方法，生成一个新的Peomise对象，链式、递归的去执行下一个next方法，然后等待下一个Promise的状态改变，继续执行next，直到发现done为true为止</strong>。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;之前就一直在困惑，await 后面包的那一大群代码到底是怎么个处理，闲下来了，这就学习一波&lt;/p&gt;
&lt;p&gt;async和await是generator和Promise的语法糖，本质上是是将 Generator 函数和自动执行器，包装在一个函数里。&lt;/p&gt;</summary>
    
    
    
    <category term="前端" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="JavaScript" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="http://example.com/tags/JavaScript/"/>
    
    <category term="ES6" scheme="http://example.com/tags/ES6/"/>
    
  </entry>
  
  <entry>
    <title>hbuilder 启动微信开发者工具失败问题汇总</title>
    <link href="http://example.com/2022/12/04/hbuilder%E5%90%AF%E5%8A%A8%E5%BE%AE%E4%BF%A1%E5%BC%80%E5%8F%91%E8%80%85%E5%B7%A5%E5%85%B7%E5%A4%B1%E8%B4%A5%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/"/>
    <id>http://example.com/2022/12/04/hbuilder%E5%90%AF%E5%8A%A8%E5%BE%AE%E4%BF%A1%E5%BC%80%E5%8F%91%E8%80%85%E5%B7%A5%E5%85%B7%E5%A4%B1%E8%B4%A5%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/</id>
    <published>2022-12-04T06:18:22.232Z</published>
    <updated>2022-12-04T06:18:22.232Z</updated>
    
    <content type="html"><![CDATA[<p>费劲呐，之前电脑坏过一次，再加上多少时间没用过 hbuilder 了…，出了点问题，启动微信开发者工具总是不行，记录下解决的方法</p><span id="more"></span>><h1 id="检查步骤"><a href="#检查步骤" class="headerlink" title="检查步骤"></a>检查步骤</h1><h2 id="微信开发者工具安装位置"><a href="#微信开发者工具安装位置" class="headerlink" title="微信开发者工具安装位置"></a>微信开发者工具安装位置</h2><p>打开hbuilder中的Settings.json</p><blockquote><p>运行&#x3D;&gt;运行到小程序模拟器&#x3D;&gt;运行设置</p></blockquote><p>找到 <strong>微信开发者工具路径</strong>，检查配置是否有误<br><img src="https://img-blog.csdnimg.cn/002b6ccfa7c54beea827225c1926784f.png" alt="在这里插入图片描述"></p><h2 id="检查微信开发者工具端口号配置"><a href="#检查微信开发者工具端口号配置" class="headerlink" title="检查微信开发者工具端口号配置"></a>检查微信开发者工具端口号配置</h2><p>打开微信开发者工具，在<strong>安全</strong>选项里开启<strong>服务端口</strong><br><img src="https://img-blog.csdnimg.cn/f6128755b86a4ef89b1804fc53128678.png" alt="在这里插入图片描述"></p><h2 id="重点检查是否配置-appId"><a href="#重点检查是否配置-appId" class="headerlink" title="重点检查是否配置 appId"></a>重点检查是否配置 appId</h2><p>如果上面的两步都没有问题，那么应该就是appid的问题了。<br>首先要搞清楚的是</p><ol><li><p>DCloud的AppId和微信开发者工具的AppId是不一样的。微信开发者工具的AppId在manifest.json内微信小程序里面<br><img src="https://img-blog.csdnimg.cn/48eb2ceeb84045c083ac1079582a5808.png" alt="在这里插入图片描述"></p></li><li><p>微信开发者工具的appId需要在<a href="https://mp.weixin.qq.com/">微信公众平台</a>获取。</p></li><li><p>如果使用游客登录微信开发者工具，而在hbuilder的 manifest.json&#x3D;&gt;微信小程序 写了appId的话，是无法正常打开微信开发者工具的。</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">10:26:33.467 正在启动微信开发者工具...</span><br><span class="line">10:26:35.496 [微信小程序开发者工具] [error] Error: Fail to open IDE</span><br><span class="line">10:26:35.496 [微信小程序开发者工具]</span><br><span class="line">10:26:35.499 [微信小程序开发者工具] - initialize</span><br><span class="line">10:26:35.500 [微信小程序开发者工具]</span><br><span class="line">10:26:35.502 [微信小程序开发者工具] √ IDE server has started, listening on http://127.0.0.1:25007</span><br><span class="line">10:26:35.503 [微信小程序开发者工具] - open IDE</span><br><span class="line">10:26:35.506 [微信小程序开发者工具]</span><br><span class="line">10:26:35.506 [微信小程序开发者工具] × open IDE</span><br></pre></td></tr></table></figure><p>针对上面的问题，有两种方法解决</p></li><li><p>一个是在微信开发者平台上申请appId并更改项目中的appId</p></li><li><p>删除项目中微信小程序的appId，这样就能够在hbuilder中启动游客身份的微信开发者工具</p></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;费劲呐，之前电脑坏过一次，再加上多少时间没用过 hbuilder 了…，出了点问题，启动微信开发者工具总是不行，记录下解决的方法&lt;/p&gt;</summary>
    
    
    
    <category term="问题解决方案" scheme="http://example.com/categories/%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    
    
    <category term="Hbuilder" scheme="http://example.com/tags/Hbuilder/"/>
    
  </entry>
  
  <entry>
    <title>从开源框架el-admin中学习状态模式</title>
    <link href="http://example.com/2022/12/04/%E4%BB%8E%E5%BC%80%E6%BA%90%E6%A1%86%E6%9E%B6el-admin%E4%B8%AD%E5%AD%A6%E4%B9%A0%E7%8A%B6%E6%80%81%E6%A8%A1%E5%BC%8F/"/>
    <id>http://example.com/2022/12/04/%E4%BB%8E%E5%BC%80%E6%BA%90%E6%A1%86%E6%9E%B6el-admin%E4%B8%AD%E5%AD%A6%E4%B9%A0%E7%8A%B6%E6%80%81%E6%A8%A1%E5%BC%8F/</id>
    <published>2022-12-04T06:18:22.232Z</published>
    <updated>2022-12-04T06:18:22.232Z</updated>
    
    <content type="html"><![CDATA[<p>最近在写项目时，想起之前看到开源框架eladmin里面表单有一个特性，就是全局只有一份代码，一个表单组件（类似表单的外框把，只有title和button等，输入控件不在其内），但是有很多不同的展示效果，例如新建，编辑，提交中等。不管哪个模块都共用的是同一个表单。这样无疑有助于后期的维护，了解后发现是用到了<strong>状态模式</strong>。这次简单记录下eladmin是如何使用状态模式的，因为本次项目也涉及到了类似的场景，看看能不能用上。</p><span id="more"></span><h1 id="状态模式的定义与特点"><a href="#状态模式的定义与特点" class="headerlink" title="状态模式的定义与特点"></a>状态模式的定义与特点</h1><p>状态（State）模式的定义：对有状态的对象，把复杂的“判断逻辑”提取到不同的状态对象中，允许状态对象在其内部状态发生改变时改变其行为。</p><p><strong>State抽象状态角色</strong></p><ul><li>接口或抽象类，负责对象状态定义，并且封装环境角色以实现状态切换。</li></ul><p><strong>ConcreteState具体状态角色</strong></p><ul><li>具体状态主要有两个职责:一是处理本状态下的事情，二是从本状态如何过渡到其他状态。</li></ul><p><strong>Context环境角色</strong></p><ul><li>定义客户端需要的接口，并且负责具体状态的切换。</li></ul><blockquote><p>eladmin框架混入及封装用的比较多，导致我也不能很具体的判断出来具体的角色指的是谁，如果有知道的还请留言告诉我，谢谢。</p></blockquote><p>在eladmin中，框架对<strong>数据的新增</strong>和<strong>表单的编辑、删除</strong>都通过状态模式去处理了部分逻辑判断。框架并不是针对某个具体的组件进行的状态处理，而是针对的<strong>整个过程进行</strong>的状态处理。<strong>不同组件通过该过程的不同状态，也会有不同的表现形式</strong>，例如<strong>按钮的loading显示、表单的标题与显示、方法处理的逻辑等</strong>。</p><p>下面主要以新增数据为例，具体介绍下eladmin中状态模式的实现。</p><h2 id="数据新增"><a href="#数据新增" class="headerlink" title="数据新增"></a>数据新增</h2><p><strong>在eladmin中的状态定义</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src/compents/Crud/crud.js</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * CRUD状态</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="variable constant_">CRUD</span>.<span class="property">STATUS</span> = &#123;</span><br><span class="line">  <span class="attr">NORMAL</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="attr">PREPARED</span>: <span class="number">1</span>,</span><br><span class="line">  <span class="attr">PROCESSING</span>: <span class="number">2</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>关键组件</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src/compents/Crud/CRUD.operation.vue</span></span><br><span class="line">&lt;template&gt;</span><br><span class="line">...</span><br><span class="line">      &lt;el-button</span><br><span class="line">        v-<span class="keyword">if</span>=<span class="string">&quot;crud.optShow.add&quot;</span></span><br><span class="line">        v-permission=<span class="string">&quot;permission.add&quot;</span></span><br><span class="line">        <span class="keyword">class</span>=<span class="string">&quot;filter-item&quot;</span></span><br><span class="line">        size=<span class="string">&quot;mini&quot;</span></span><br><span class="line">        type=<span class="string">&quot;primary&quot;</span></span><br><span class="line">        icon=<span class="string">&quot;el-icon-plus&quot;</span></span><br><span class="line">        @click=<span class="string">&quot;crud.toAdd&quot;</span></span><br><span class="line">      &gt;</span><br><span class="line">        新增</span><br><span class="line">      &lt;/el-button&gt;</span><br><span class="line">    ...</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="comment">// 该处通过混入的方式将crud的方法引进来</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> <span class="variable constant_">CRUD</span>, &#123; crud &#125; <span class="keyword">from</span> <span class="string">&#x27;@/compents/Crud//crud.js&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">mixins</span>: [<span class="title function_">crud</span>()],</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>这里主要混入的是一些<strong>逻辑处理的方法</strong>、<strong>CRUD状态定义</strong>和一些关键的<strong>data数据</strong><br>混入后的<strong>关键属性</strong>有下面这些</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src/compents/Crud/CRUD.operation.vue</span></span><br><span class="line">&lt;template&gt;</span><br><span class="line">...</span><br><span class="line">      &lt;el-button</span><br><span class="line">        v-<span class="keyword">if</span>=<span class="string">&quot;crud.optShow.add&quot;</span></span><br><span class="line">        v-permission=<span class="string">&quot;permission.add&quot;</span></span><br><span class="line">        <span class="keyword">class</span>=<span class="string">&quot;filter-item&quot;</span></span><br><span class="line">        size=<span class="string">&quot;mini&quot;</span></span><br><span class="line">        type=<span class="string">&quot;primary&quot;</span></span><br><span class="line">        icon=<span class="string">&quot;el-icon-plus&quot;</span></span><br><span class="line">        @click=<span class="string">&quot;crud.toAdd&quot;</span></span><br><span class="line">      &gt;</span><br><span class="line">        新增</span><br><span class="line">      &lt;/el-button&gt;</span><br><span class="line">    ...</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">   <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// 通过混入进来的</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// ... 省略多余的属性</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">     <span class="attr">status</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">add</span>: <span class="variable constant_">CRUD</span>.<span class="property">STATUS</span>.<span class="property">NORMAL</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">edit</span>: <span class="variable constant_">CRUD</span>.<span class="property">STATUS</span>.<span class="property">NORMAL</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// 添加或编辑状态</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// 表单、按钮loading等组件的状态都是根据这里判断的</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">get</span> <span class="title function_">cu</span>() &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">add</span> === <span class="variable constant_">CRUD</span>.<span class="property">STATUS</span>.<span class="property">NORMAL</span> &amp;&amp; <span class="variable language_">this</span>.<span class="property">edit</span> === <span class="variable constant_">CRUD</span>.<span class="property">STATUS</span>.<span class="property">NORMAL</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="keyword">return</span> <span class="variable constant_">CRUD</span>.<span class="property">STATUS</span>.<span class="property">NORMAL</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">add</span> === <span class="variable constant_">CRUD</span>.<span class="property">STATUS</span>.<span class="property">PREPARED</span> || <span class="variable language_">this</span>.<span class="property">edit</span> === <span class="variable constant_">CRUD</span>.<span class="property">STATUS</span>.<span class="property">PREPARED</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="keyword">return</span> <span class="variable constant_">CRUD</span>.<span class="property">STATUS</span>.<span class="property">PREPARED</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">add</span> === <span class="variable constant_">CRUD</span>.<span class="property">STATUS</span>.<span class="property">PROCESSING</span> || <span class="variable language_">this</span>.<span class="property">edit</span> === <span class="variable constant_">CRUD</span>.<span class="property">STATUS</span>.<span class="property">PROCESSING</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="keyword">return</span> <span class="variable constant_">CRUD</span>.<span class="property">STATUS</span>.<span class="property">PROCESSING</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;wrong crud\&#x27;s cu status&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// 标题，控制表单Dialog组件标题在不同状态下的显示</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">get</span> <span class="title function_">title</span>() &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">add</span> &gt; <span class="variable constant_">CRUD</span>.<span class="property">STATUS</span>.<span class="property">NORMAL</span> ? <span class="string">`新增<span class="subst">$&#123;crud.title&#125;</span>`</span> : <span class="variable language_">this</span>.<span class="property">edit</span> &gt; <span class="variable constant_">CRUD</span>.<span class="property">STATUS</span>.<span class="property">NORMAL</span> ? <span class="string">`编辑<span class="subst">$&#123;crud.title&#125;</span>`</span> : crud.<span class="property">title</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">methods</span>:&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">   <span class="comment">// ... 省略多余的方法</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">   <span class="comment">/**</span></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"><span class="language-xml">* 启动添加</span></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"><span class="language-xml">*/</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">toAdd</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// 重置表单数据</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      crud.<span class="title function_">resetForm</span>()</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// 对自定义钩子进行处理，如果设置了就执行</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">if</span> (!(<span class="title function_">callVmHook</span>(crud, <span class="variable constant_">CRUD</span>.<span class="property">HOOK</span>.<span class="property">beforeToAdd</span>, crud.<span class="property">form</span>) &amp;&amp; <span class="title function_">callVmHook</span>(crud, <span class="variable constant_">CRUD</span>.<span class="property">HOOK</span>.<span class="property">beforeToCU</span>, crud.<span class="property">form</span>))) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">return</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// 更改add的状态，从NORMAL变为PREPARED</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      crud.<span class="property">status</span>.<span class="property">add</span> = <span class="variable constant_">CRUD</span>.<span class="property">STATUS</span>.<span class="property">PREPARED</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// 此时会弹出来el-dialog。该弹框通过:visible.sync=&quot;crud.status.cu &gt; 0&quot;控制显示</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// 对自定义钩子进行处理，如果设置了就执行</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="title function_">callVmHook</span>(crud, <span class="variable constant_">CRUD</span>.<span class="property">HOOK</span>.<span class="property">afterToAdd</span>, crud.<span class="property">form</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="title function_">callVmHook</span>(crud, <span class="variable constant_">CRUD</span>.<span class="property">HOOK</span>.<span class="property">afterToCU</span>, crud.<span class="property">form</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">/**</span></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"><span class="language-xml">     * 提交新增/编辑</span></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"><span class="language-xml">     */</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">submitCU</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">if</span> (!<span class="title function_">callVmHook</span>(crud, <span class="variable constant_">CRUD</span>.<span class="property">HOOK</span>.<span class="property">beforeValidateCU</span>)) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">return</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// 找到当前根据status显示的form组件，并进行校验</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      crud.<span class="title function_">findVM</span>(<span class="string">&#x27;form&#x27;</span>).<span class="property">$refs</span>[<span class="string">&#x27;form&#x27;</span>].<span class="title function_">validate</span>(<span class="function"><span class="params">valid</span> =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">if</span> (!valid) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="keyword">return</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">// 是否执行钩子</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">if</span> (!<span class="title function_">callVmHook</span>(crud, <span class="variable constant_">CRUD</span>.<span class="property">HOOK</span>.<span class="property">afterValidateCU</span>)) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="keyword">return</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">// 根据状态去判断具体的执行方法</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">if</span> (crud.<span class="property">status</span>.<span class="property">add</span> === <span class="variable constant_">CRUD</span>.<span class="property">STATUS</span>.<span class="property">PREPARED</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          crud.<span class="title function_">doAdd</span>()</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (crud.<span class="property">status</span>.<span class="property">edit</span> === <span class="variable constant_">CRUD</span>.<span class="property">STATUS</span>.<span class="property">PREPARED</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          crud.<span class="title function_">doEdit</span>()</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">/**</span></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"><span class="language-xml">     * 执行添加</span></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"><span class="language-xml">     */</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">doAdd</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// 自定义钩子</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">if</span> (!<span class="title function_">callVmHook</span>(crud, <span class="variable constant_">CRUD</span>.<span class="property">HOOK</span>.<span class="property">beforeSubmit</span>)) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">return</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// 更改整个添加过程的状态为PROCESSING</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      crud.<span class="property">status</span>.<span class="property">add</span> = <span class="variable constant_">CRUD</span>.<span class="property">STATUS</span>.<span class="property">PROCESSING</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// 调取添加接口(此处eladmin做了一定处理，通过crudMethod和其属性即可调取自己定义的接口地址)</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      crud.<span class="property">crudMethod</span>.<span class="title function_">add</span>(crud.<span class="property">form</span>).<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// 成功后将状态更改为初始状态 = 关闭表单，停止loading</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        crud.<span class="property">status</span>.<span class="property">add</span> = <span class="variable constant_">CRUD</span>.<span class="property">STATUS</span>.<span class="property">NORMAL</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        crud.<span class="title function_">resetForm</span>()</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        crud.<span class="title function_">addSuccessNotify</span>()</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title function_">callVmHook</span>(crud, <span class="variable constant_">CRUD</span>.<span class="property">HOOK</span>.<span class="property">afterSubmit</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        crud.<span class="title function_">toQuery</span>()</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;).<span class="title function_">catch</span>(<span class="function">() =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">// 出错后就更改为PREPARED状态(新增的第二个状态，此时表单仍然存在)</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        crud.<span class="property">status</span>.<span class="property">add</span> = <span class="variable constant_">CRUD</span>.<span class="property">STATUS</span>.<span class="property">PREPARED</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title function_">callVmHook</span>(crud, <span class="variable constant_">CRUD</span>.<span class="property">HOOK</span>.<span class="property">afterAddError</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>简单来说，eladmin通过状态模式针对整个添加的流程做了如下规定：</p><p><strong>NORMAL阶段</strong></p><ul><li>表单控件不显示</li><li>按钮loading为false</li></ul><p><strong>点击新增，进入PREPARED阶段</strong></p><ul><li>表单显示，获取该阶段表单对应的标题</li></ul><p><strong>点击确定，进入PROCESSING阶段</strong></p><ul><li>显示loading</li><li>发出请求<ul><li>如果成功，重新设置为<strong>NORMAL</strong>阶段</li><li>如果失败，则回到<strong>PREPARED</strong>阶段</li></ul></li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>整个过程涉及到的组件有很多，只不过表单和按钮是最显眼的，并且按钮有很多个。<br>框架通过状态模式将很多按钮的判断逻辑抽离了出来，减少了不少工作量。<br>通过状态的判断去控制了各个组件自己的表现形式，在后期维护时也更加容易。</p><p>后面有人接手的话也只需要关注关键方法的逻辑。<br>而不是散落在各个组件中的小按钮和表单样式的逻辑了(假如不使用该模式)。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;最近在写项目时，想起之前看到开源框架eladmin里面表单有一个特性，就是全局只有一份代码，一个表单组件（类似表单的外框把，只有title和button等，输入控件不在其内），但是有很多不同的展示效果，例如新建，编辑，提交中等。不管哪个模块都共用的是同一个表单。这样无疑有助于后期的维护，了解后发现是用到了&lt;strong&gt;状态模式&lt;/strong&gt;。这次简单记录下eladmin是如何使用状态模式的，因为本次项目也涉及到了类似的场景，看看能不能用上。&lt;/p&gt;</summary>
    
    
    
    <category term="设计模式" scheme="http://example.com/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
    <category term="常用的设计模式" scheme="http://example.com/tags/%E5%B8%B8%E7%94%A8%E7%9A%84%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>关于国际化</title>
    <link href="http://example.com/2022/12/04/%E5%85%B3%E4%BA%8E%E5%9B%BD%E9%99%85%E5%8C%96/"/>
    <id>http://example.com/2022/12/04/%E5%85%B3%E4%BA%8E%E5%9B%BD%E9%99%85%E5%8C%96/</id>
    <published>2022-12-04T06:18:22.232Z</published>
    <updated>2022-12-04T06:18:22.232Z</updated>
    
    <content type="html"><![CDATA[<p>针对导航栏添加了一部分国际化的内容，针对后期可能添加的需要国际化的模块做一份记录</p><span id="more"></span><h1 id="选择指定语言"><a href="#选择指定语言" class="headerlink" title="选择指定语言"></a>选择指定语言</h1><p>在 icarus 中，语言默认是英语，在<code>&lt;root&gt;/_config.yml</code>中的 <code>language</code> 选项中可以看到 当前为 <code>en</code>。我们需要先将其修改为期望的语言，这里我修改的是 <code>zh-CN</code> 即简体中文。</p><p>修改完后，能看到大部分地方都变成了中文，但是导航栏仍是英文。这是因为该主题并为对导航栏做国际化处理，<strong>导航栏是交由我们在 <code>&lt;root&gt;/_config.icarus.yml</code> 中去配置的，可以直接以汉字作为key值</strong>。</p><p>但总归是有点不舒服吧，所以想把这些东西也简单国际化一下，顺便看看是哪部分在起作用。</p><blockquote><p>如果不想学jsx语法的可以直接以汉字为key值，因为涉及到部分源码的更改</p></blockquote><h1 id="在选中的语言中完善国际化配置"><a href="#在选中的语言中完善国际化配置" class="headerlink" title="在选中的语言中完善国际化配置"></a>在选中的语言中完善国际化配置</h1><p>国际化相关的文件存放在 <code>&lt;root&gt;/themes/icarus/languages</code> 里面，在 <code>zh-CN.yml</code> 添加 <code>menu</code> 选项（名字自定，见名知意即可）</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">    <span class="attr">Home:</span></span><br><span class="line">        <span class="attr">one:</span> <span class="string">&#x27;首页&#x27;</span></span><br><span class="line">        <span class="attr">other:</span> <span class="string">&#x27;首页&#x27;</span></span><br><span class="line">    <span class="attr">Archives:</span></span><br><span class="line">        <span class="attr">one:</span> <span class="string">&#x27;归档&#x27;</span></span><br><span class="line">        <span class="attr">other:</span> <span class="string">&#x27;归档&#x27;</span></span><br><span class="line">    <span class="attr">Categories:</span></span><br><span class="line">        <span class="attr">one:</span> <span class="string">&#x27;分类&#x27;</span></span><br><span class="line">        <span class="attr">other:</span> <span class="string">&#x27;分类&#x27;</span></span><br><span class="line">    <span class="attr">Tags:</span></span><br><span class="line">        <span class="attr">one:</span> <span class="string">&#x27;标签&#x27;</span></span><br><span class="line">        <span class="attr">other:</span> <span class="string">&#x27;标签&#x27;</span></span><br><span class="line">    <span class="attr">About:</span></span><br><span class="line">        <span class="attr">one:</span> <span class="string">&#x27;关于&#x27;</span></span><br><span class="line">        <span class="attr">other:</span> <span class="string">&#x27;关于&#x27;</span></span><br></pre></td></tr></table></figure><p>有其他想放上去的需要国际化的部分直接写即可，但是要记得在控制 <code>menu</code> 显示的地方加上对应的选项，此处针对 <code>menu</code> 国际化，并不控制显示与否</p><blockquote><p>对于 <code>other</code> 还不是很明白，参考了下面原有的 <code>common</code></p></blockquote><p>这样，针对导航栏国际化的配置文件就补充ok了。</p><h1 id="源码更改"><a href="#源码更改" class="headerlink" title="源码更改"></a>源码更改</h1><p>打开<code>&lt;root&gt;/themes/icarus/layout/common/navbar.jsx</code></p><p><code>ctrl+f</code> 找到 <code>Object.keys(navbar.menu)</code> 这部分，因为主题未针对其做国际化处理，所以我们完善menu对象。<br>对遍历做如下处理</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Object</span>.<span class="title function_">keys</span>(navbar.<span class="property">menu</span>).<span class="title function_">forEach</span>(<span class="function"><span class="params">name</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> url = <span class="title function_">url_for</span>(navbar.<span class="property">menu</span>[name]);</span><br><span class="line">    <span class="keyword">const</span> active = <span class="title function_">isSameLink</span>(url, pageUrl);</span><br><span class="line">    <span class="comment">// __ 方法用于一般使用，_p 方法用于复数字符串使用</span></span><br><span class="line">    <span class="comment">// 此处是通过辅助函数获取翻译后的字符串</span></span><br><span class="line">    <span class="keyword">const</span> title = <span class="title function_">_p</span>(<span class="string">`menu.<span class="subst">$&#123;name&#125;</span>`</span>)</span><br><span class="line">    menu[name] = &#123; title, url, active &#125;;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>在Dom处修改显示</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> &#123;<span class="title class_">Object</span>.<span class="title function_">keys</span>(menu).<span class="property">length</span> ? <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;navbar-start&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    &#123;Object.keys(menu).map(name =&gt; &#123;</span></span><br><span class="line"><span class="language-xml">        const item = menu[name];</span></span><br><span class="line"><span class="language-xml">        return <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&#123;classname(&#123;</span> &#x27;<span class="attr">navbar-item</span>&#x27;<span class="attr">:</span> <span class="attr">true</span>, &#x27;<span class="attr">is-active</span>&#x27;<span class="attr">:</span> <span class="attr">item.active</span> &#125;)&#125; <span class="attr">href</span>=<span class="string">&#123;item.url&#125;</span>&gt;</span>&#123;item.title&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span>;</span></span><br><span class="line"><span class="language-xml">    &#125;)&#125;</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span> : <span class="literal">null</span>&#125;</span><br></pre></td></tr></table></figure><p>至此，nav国际化添加完毕。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;针对导航栏添加了一部分国际化的内容，针对后期可能添加的需要国际化的模块做一份记录&lt;/p&gt;</summary>
    
    
    
    <category term="hexo" scheme="http://example.com/categories/hexo/"/>
    
    <category term="个性化" scheme="http://example.com/categories/hexo/%E4%B8%AA%E6%80%A7%E5%8C%96/"/>
    
    
    <category term="国际化" scheme="http://example.com/tags/%E5%9B%BD%E9%99%85%E5%8C%96/"/>
    
    <category term="i18n" scheme="http://example.com/tags/i18n/"/>
    
  </entry>
  
  <entry>
    <title>函数式触发click和点击触发click在宏任务与微任务方面的区别</title>
    <link href="http://example.com/2022/12/04/%E5%87%BD%E6%95%B0%E5%BC%8F%E8%A7%A6%E5%8F%91click%E5%92%8C%E7%82%B9%E5%87%BB%E8%A7%A6%E5%8F%91click%E5%9C%A8%E5%AE%8F%E4%BB%BB%E5%8A%A1%E4%B8%8E%E5%BE%AE%E4%BB%BB%E5%8A%A1%E6%96%B9%E9%9D%A2%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <id>http://example.com/2022/12/04/%E5%87%BD%E6%95%B0%E5%BC%8F%E8%A7%A6%E5%8F%91click%E5%92%8C%E7%82%B9%E5%87%BB%E8%A7%A6%E5%8F%91click%E5%9C%A8%E5%AE%8F%E4%BB%BB%E5%8A%A1%E4%B8%8E%E5%BE%AE%E4%BB%BB%E5%8A%A1%E6%96%B9%E9%9D%A2%E7%9A%84%E5%8C%BA%E5%88%AB/</id>
    <published>2022-12-04T06:18:22.232Z</published>
    <updated>2022-12-04T06:18:22.232Z</updated>
    
    <content type="html"><![CDATA[<p>在做关于事件循环的分享时，注意到了这两种方式的调用结果在宏任务和微任务的执行方面有差别，特此学习记录一下</p><span id="more"></span><p>用例：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 先通过点击执行</span></span><br><span class="line">  <span class="keyword">var</span> btn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#btn&#x27;</span>)</span><br><span class="line">  btn.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="title class_">Promise</span>.<span class="title function_">resolve</span>().<span class="title function_">then</span>(<span class="function">()=&gt;</span><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Microtask 1&quot;</span>));</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Listener 1&quot;</span>);</span><br><span class="line">  &#125;)</span><br><span class="line">  btn.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="title class_">Promise</span>.<span class="title function_">resolve</span>().<span class="title function_">then</span>(<span class="function">()=&gt;</span><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Microtask 2&quot;</span>));</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Listener 2&quot;</span>);</span><br><span class="line">  &#125;)</span><br><span class="line"><span class="comment">// Listener 1</span></span><br><span class="line"><span class="comment">// Microtask 1</span></span><br><span class="line"><span class="comment">// Listener 2</span></span><br><span class="line"><span class="comment">// Microtask 2</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通过函数调用</span></span><br><span class="line">  <span class="keyword">var</span> btn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#btn&#x27;</span>)</span><br><span class="line">  btn.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="title class_">Promise</span>.<span class="title function_">resolve</span>().<span class="title function_">then</span>(<span class="function">()=&gt;</span><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Microtask 1&quot;</span>));</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Listener 1&quot;</span>);</span><br><span class="line">  &#125;)</span><br><span class="line">  btn.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="title class_">Promise</span>.<span class="title function_">resolve</span>().<span class="title function_">then</span>(<span class="function">()=&gt;</span><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Microtask 2&quot;</span>));</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Listener 2&quot;</span>);</span><br><span class="line">  &#125;)</span><br><span class="line">  </span><br><span class="line">  btn.<span class="title function_">click</span>();</span><br><span class="line"><span class="comment">// Listener 1</span></span><br><span class="line"><span class="comment">// Listener 2</span></span><br><span class="line"><span class="comment">// Microtask 1</span></span><br><span class="line"><span class="comment">// Microtask 2</span></span><br></pre></td></tr></table></figure><blockquote><p>说一下自己的理解，在网上找了好久，并没有一个确切的描述这种结果产生的原因。<br>上述两种结果的原因在于调用栈是否清空。也可以说是当前宏任务是否执行完毕。</p></blockquote><h1 id="点击触发"><a href="#点击触发" class="headerlink" title="点击触发"></a>点击触发</h1><p>当我们通过addEventListener向按钮去添加事件时，实际上是添加在了其<strong>事件侦听器列表</strong>中，可以通过getListeners去查看所有的事件。</p><p>在直接点击DOM时，会向调用栈依次添加Listener，当第一个Listener执行完后，调用栈清空。此时在下一个Listener的添加&#x2F;执行之前，会先处理微任务队列，从调用栈的角度看，两个Listener属于两个不同的宏任务。具体结果就是第一个例子的 Listener1、Microtask1、Listener2、Microtask2。</p><h1 id="函数调用"><a href="#函数调用" class="headerlink" title="函数调用"></a>函数调用</h1><p>在通过函数调用的时候，首先会向调用栈内添加click的调用，然后依次去执行该DOM上绑定的事件，在执行完第一个Listener中的事件后，没有return语句存在，所以click函数仍处于调用状态，调用栈并未弹出，在第二个Listener执行时仍处于同一个宏任务，所以也就有了下面的结果：Listener1、Listener2、Microtask1、、Microtask2。</p><h1 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h1><p>上述说明并没有很好的资料支持，是从<strong>输出结果</strong>和<strong>Chrome控制台调用栈的显示</strong>反推的，如果有什么问题还请及时指出。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;在做关于事件循环的分享时，注意到了这两种方式的调用结果在宏任务和微任务的执行方面有差别，特此学习记录一下&lt;/p&gt;</summary>
    
    
    
    <category term="前端" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="事件循环" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF/%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF/"/>
    
    
    <category term="前端" scheme="http://example.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="JavaScript" scheme="http://example.com/tags/JavaScript/"/>
    
    <category term="事件循环" scheme="http://example.com/tags/%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF/"/>
    
    <category term="微任务" scheme="http://example.com/tags/%E5%BE%AE%E4%BB%BB%E5%8A%A1/"/>
    
    <category term="宏任务" scheme="http://example.com/tags/%E5%AE%8F%E4%BB%BB%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>根据组件类型与条件动态添加下拉框及选项</title>
    <link href="http://example.com/2022/12/04/%E6%A0%B9%E6%8D%AE%E7%BB%84%E4%BB%B6%E7%B1%BB%E5%9E%8B%E4%B8%8E%E6%9D%A1%E4%BB%B6%E5%8A%A8%E6%80%81%E6%B7%BB%E5%8A%A0%E4%B8%8B%E6%8B%89%E6%A1%86%E5%8F%8A%E9%80%89%E9%A1%B9/"/>
    <id>http://example.com/2022/12/04/%E6%A0%B9%E6%8D%AE%E7%BB%84%E4%BB%B6%E7%B1%BB%E5%9E%8B%E4%B8%8E%E6%9D%A1%E4%BB%B6%E5%8A%A8%E6%80%81%E6%B7%BB%E5%8A%A0%E4%B8%8B%E6%8B%89%E6%A1%86%E5%8F%8A%E9%80%89%E9%A1%B9/</id>
    <published>2022-12-04T06:18:22.232Z</published>
    <updated>2022-12-04T06:18:22.232Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本次在做低代码平台时，遇见了一个稍微有些复杂的业务场景，需求描述：</p><ol><li>根据用户拖拽表单生成的JSON数据(本次采用了<code>FormGenerator</code>去生成JSON数据)，生成对应的<strong>所有组件的下拉列表</strong>，并在流程图的边（节点连接线）上添加条件判断。</li><li>当用户点击流程图的边时，生成该边上对应的<strong>所有组件的下拉列表</strong>，在点击某个组件的选项后，生成<strong>对应组件的下拉列表组件</strong>，在用户取消选择后，<strong>对应组件的下拉列表组件</strong>随之消失。</li><li><strong>针对不同组件对应的下拉列表</strong>，要求<strong>有不同的条件判断</strong>，例如：数字类型的需要有范围选择、大小判断、为空不为空，等条件；文本组件有包含不包含，等条件。</li><li>当用户选择后，自动保存到当前边对应的JSON数据，若用户的选择无效，则不保存。</li><li>要求能够回显用户选择的数据，即点击不同边时，回显该边上JSON对应的所有下拉列表组件。</li></ol><p>经过梳理后，其实逻辑看起来也不是特别复杂，不过当时确实是有点被难倒了，主要原因就是一些细节性的问题没有考虑到，然后流程图也需要去学习如何操作，时间上有些紧，同时也在思考如何写能够更便于维护。其次就是没有一个清晰的该处业务的流程思考，不过后来捋了捋也就差不多啦，所以说<strong>三思而后行</strong>啊。</p><blockquote><p><code>三思而后行</code>：多思考几遍，自己又觉得自己行了哈哈</p></blockquote><span id="more"></span><p>Logicflow和FromGenerator就不多说了，虽然也有点坑，但都是轮子，主要记录下这块业务场景如何实现的。</p><h1 id="组件展示"><a href="#组件展示" class="headerlink" title="组件展示"></a>组件展示</h1><ol><li>包含所有组件的下拉列表<br><img src="https://img-blog.csdnimg.cn/7a9025a700394755b28bb959382e0196.png" alt="在这里插入图片描述"></li><li>对应组件的下拉列表组件<br><img src="https://img-blog.csdnimg.cn/7ee6d4ce6f1e472486c5c0f81a15306a.png" alt="在这里插入图片描述"></li><li>根据条件改变输入形式<br><img src="https://img-blog.csdnimg.cn/ff0a49e51efc469da4ce89363cba8b34.png" alt="在这里插入图片描述"></li><li><img src="https://img-blog.csdnimg.cn/bdc69d46a2554f5fb897b562ac5c71d3.png" alt="在这里插入图片描述"></li></ol><h1 id="具体实现"><a href="#具体实现" class="headerlink" title="具体实现"></a>具体实现</h1><h2 id="JSON数据处理"><a href="#JSON数据处理" class="headerlink" title="JSON数据处理"></a>JSON数据处理</h2><p>处理JSON，不得不提一嘴ES6结构赋值，属实是属性提取的利器。<br>原JSON大概长这个样子，为了区别不同类型的组件，和表单那边的小伙伴约定了两个字段，<code>tag</code>用于区分组件输入框的类型，<code>typeNumber</code>用于区分下拉列表内容有哪些</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;fields&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;__config__&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;单行文本&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;labelWidth&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;showLabel&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;changeTag&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;tag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;el-input&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;tagIcon&quot;</span><span class="punctuation">:</span> <span class="string">&quot;input&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;required&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;layout&quot;</span><span class="punctuation">:</span> <span class="string">&quot;colFormItem&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;span&quot;</span><span class="punctuation">:</span> <span class="number">24</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;document&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://element.eleme.cn/#/zh-CN/component/input&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;regList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;formId&quot;</span><span class="punctuation">:</span> <span class="number">101</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;renderKey&quot;</span><span class="punctuation">:</span> <span class="number">1649927471934</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;typeNumber&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;__slot__&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;prepend&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;append&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;placeholder&quot;</span><span class="punctuation">:</span> <span class="string">&quot;请输入单行文本&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;style&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;width&quot;</span><span class="punctuation">:</span> <span class="string">&quot;100%&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;clearable&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;prefix-icon&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;suffix-icon&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;maxlength&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;show-word-limit&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;readonly&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;disabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;__vModel__&quot;</span><span class="punctuation">:</span> <span class="string">&quot;field101&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;__config__&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;多行文本&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;labelWidth&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;showLabel&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;tag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;el-input&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;tagIcon&quot;</span><span class="punctuation">:</span> <span class="string">&quot;textarea&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;required&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;layout&quot;</span><span class="punctuation">:</span> <span class="string">&quot;colFormItem&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;span&quot;</span><span class="punctuation">:</span> <span class="number">24</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;regList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;changeTag&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;document&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://element.eleme.cn/#/zh-CN/component/input&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;formId&quot;</span><span class="punctuation">:</span> <span class="number">102</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;typeNumber&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;renderKey&quot;</span><span class="punctuation">:</span> <span class="number">1649927472786</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;textarea&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;placeholder&quot;</span><span class="punctuation">:</span> <span class="string">&quot;请输入多行文本&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;autosize&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;minRows&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;maxRows&quot;</span><span class="punctuation">:</span> <span class="number">4</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;style&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;width&quot;</span><span class="punctuation">:</span> <span class="string">&quot;100%&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;maxlength&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;show-word-limit&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;readonly&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;disabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;__vModel__&quot;</span><span class="punctuation">:</span> <span class="string">&quot;field102&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;__config__&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;级联选择&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;showLabel&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;labelWidth&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;tag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;el-cascader&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;tagIcon&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cascader&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;layout&quot;</span><span class="punctuation">:</span> <span class="string">&quot;colFormItem&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;defaultValue&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">          <span class="number">2</span></span><br><span class="line">        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;dataType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;dynamic&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;span&quot;</span><span class="punctuation">:</span> <span class="number">24</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;required&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;regList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;changeTag&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;document&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://element.eleme.cn/#/zh-CN/component/cascader&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;formId&quot;</span><span class="punctuation">:</span> <span class="number">111</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;typeNumber&quot;</span><span class="punctuation">:</span> <span class="number">9</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;renderKey&quot;</span><span class="punctuation">:</span> <span class="number">1649942215947</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;选项1&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;children&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;选项1-1&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">          <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;placeholder&quot;</span><span class="punctuation">:</span> <span class="string">&quot;请选择级联选择&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;style&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;width&quot;</span><span class="punctuation">:</span> <span class="string">&quot;100%&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;props&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;props&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;multiple&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;label&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;value&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;children&quot;</span><span class="punctuation">:</span> <span class="string">&quot;children&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;show-all-levels&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;disabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;clearable&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;filterable&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;separator&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;__vModel__&quot;</span><span class="punctuation">:</span> <span class="string">&quot;field111&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;__config__&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;计数器&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;showLabel&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;changeTag&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;labelWidth&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;tag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;el-input-number&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;tagIcon&quot;</span><span class="punctuation">:</span> <span class="string">&quot;number&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;span&quot;</span><span class="punctuation">:</span> <span class="number">24</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;layout&quot;</span><span class="punctuation">:</span> <span class="string">&quot;colFormItem&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;required&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;regList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;document&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://element.eleme.cn/#/zh-CN/component/input-number&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;formId&quot;</span><span class="punctuation">:</span> <span class="number">105</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;typeNumber&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;renderKey&quot;</span><span class="punctuation">:</span> <span class="number">1649927477883</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;placeholder&quot;</span><span class="punctuation">:</span> <span class="string">&quot;计数器&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;step&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;step-strictly&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;controls-position&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;disabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;__vModel__&quot;</span><span class="punctuation">:</span> <span class="string">&quot;field105&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;__config__&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;下拉选择&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;showLabel&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;labelWidth&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;tag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;el-select&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;tagIcon&quot;</span><span class="punctuation">:</span> <span class="string">&quot;select&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;layout&quot;</span><span class="punctuation">:</span> <span class="string">&quot;colFormItem&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;span&quot;</span><span class="punctuation">:</span> <span class="number">24</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;required&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;regList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;changeTag&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;document&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://element.eleme.cn/#/zh-CN/component/select&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;formId&quot;</span><span class="punctuation">:</span> <span class="number">106</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;typeNumber&quot;</span><span class="punctuation">:</span> <span class="number">6</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;renderKey&quot;</span><span class="punctuation">:</span> <span class="number">1649927484505</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;__slot__&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;选项一&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;选项二&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">2</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;placeholder&quot;</span><span class="punctuation">:</span> <span class="string">&quot;请选择下拉选择&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;style&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;width&quot;</span><span class="punctuation">:</span> <span class="string">&quot;100%&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;clearable&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;disabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;filterable&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;multiple&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;__vModel__&quot;</span><span class="punctuation">:</span> <span class="string">&quot;field106&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;__config__&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;单选框组&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;labelWidth&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;showLabel&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;tag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;el-radio-group&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;tagIcon&quot;</span><span class="punctuation">:</span> <span class="string">&quot;radio&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;changeTag&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;layout&quot;</span><span class="punctuation">:</span> <span class="string">&quot;colFormItem&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;span&quot;</span><span class="punctuation">:</span> <span class="number">24</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;optionType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;default&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;regList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;required&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;border&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;document&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://element.eleme.cn/#/zh-CN/component/radio&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;formId&quot;</span><span class="punctuation">:</span> <span class="number">107</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;typeNumber&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;renderKey&quot;</span><span class="punctuation">:</span> <span class="number">1649927491036</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;__slot__&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;选项一&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;选项二&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">2</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;style&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;size&quot;</span><span class="punctuation">:</span> <span class="string">&quot;medium&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;disabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;__vModel__&quot;</span><span class="punctuation">:</span> <span class="string">&quot;field107&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;__config__&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;多选框组&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;tag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;el-checkbox-group&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;tagIcon&quot;</span><span class="punctuation">:</span> <span class="string">&quot;checkbox&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;defaultValue&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;span&quot;</span><span class="punctuation">:</span> <span class="number">24</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;showLabel&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;labelWidth&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;layout&quot;</span><span class="punctuation">:</span> <span class="string">&quot;colFormItem&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;optionType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;default&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;required&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;regList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;changeTag&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;border&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;document&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://element.eleme.cn/#/zh-CN/component/checkbox&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;formId&quot;</span><span class="punctuation">:</span> <span class="number">108</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;typeNumber&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;renderKey&quot;</span><span class="punctuation">:</span> <span class="number">1649927491380</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;__slot__&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;选项一&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;选项二&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">2</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;style&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;size&quot;</span><span class="punctuation">:</span> <span class="string">&quot;medium&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;disabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;__vModel__&quot;</span><span class="punctuation">:</span> <span class="string">&quot;field108&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;__config__&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;日期选择&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;tag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;el-date-picker&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;tagIcon&quot;</span><span class="punctuation">:</span> <span class="string">&quot;date&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;defaultValue&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;showLabel&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;labelWidth&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;span&quot;</span><span class="punctuation">:</span> <span class="number">24</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;layout&quot;</span><span class="punctuation">:</span> <span class="string">&quot;colFormItem&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;required&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;regList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;changeTag&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;document&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://element.eleme.cn/#/zh-CN/component/date-picker&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;formId&quot;</span><span class="punctuation">:</span> <span class="number">110</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;typeNumber&quot;</span><span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;renderKey&quot;</span><span class="punctuation">:</span> <span class="number">1649927506700</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;placeholder&quot;</span><span class="punctuation">:</span> <span class="string">&quot;请选择日期选择&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;date&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;style&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;width&quot;</span><span class="punctuation">:</span> <span class="string">&quot;100%&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;disabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;clearable&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;format&quot;</span><span class="punctuation">:</span> <span class="string">&quot;yyyy-MM-dd&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;value-format&quot;</span><span class="punctuation">:</span> <span class="string">&quot;yyyy-MM-dd&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;readonly&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;__vModel__&quot;</span><span class="punctuation">:</span> <span class="string">&quot;field110&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;formRef&quot;</span><span class="punctuation">:</span> <span class="string">&quot;elForm&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;formModel&quot;</span><span class="punctuation">:</span> <span class="string">&quot;formData&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;size&quot;</span><span class="punctuation">:</span> <span class="string">&quot;medium&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;labelPosition&quot;</span><span class="punctuation">:</span> <span class="string">&quot;right&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;labelWidth&quot;</span><span class="punctuation">:</span> <span class="number">100</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;formRules&quot;</span><span class="punctuation">:</span> <span class="string">&quot;rules&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;gutter&quot;</span><span class="punctuation">:</span> <span class="number">15</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;disabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;span&quot;</span><span class="punctuation">:</span> <span class="number">24</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;formBtns&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;unFocusedComponentBorder&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="解构工具类"><a href="#解构工具类" class="headerlink" title="解构工具类"></a>解构工具类</h2><p>解构赋值 过滤数据：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// utils/adpterForForm.js</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 依照tag判断组件输入框的类型(FormGenerator采用的elementui，所以会有el-xxx的tag)</span></span><br><span class="line"><span class="keyword">const</span> contentTypeMap = &#123;</span><br><span class="line">  <span class="string">&#x27;el-input&#x27;</span>: <span class="string">&#x27;input&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;el-textarea&#x27;</span>: <span class="string">&#x27;input&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;el-input-number&#x27;</span>: <span class="string">&#x27;input&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;el-date-picker&#x27;</span>: <span class="string">&#x27;date&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;el-radio-group&#x27;</span>: <span class="string">&#x27;select&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;el-checkbox-group&#x27;</span>: <span class="string">&#x27;select&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;el-select&#x27;</span>: <span class="string">&#x27;select&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;el-cascader&#x27;</span>: <span class="string">&#x27;tree&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;el-upload&#x27;</span>: <span class="string">&#x27;none&#x27;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// &#123; label: &#x27;等于&#x27;, value: 0 &#125;,</span></span><br><span class="line"><span class="comment">// &#123; label: &#x27;不等于&#x27;, value: 1 &#125;,</span></span><br><span class="line"><span class="comment">// &#123; label: &#x27;包含&#x27;, value: 2 &#125;,</span></span><br><span class="line"><span class="comment">// &#123; label: &#x27;不包含&#x27;, value: 3 &#125;,</span></span><br><span class="line"><span class="comment">// &#123; label: &#x27;为空&#x27;, value: 4 &#125;,</span></span><br><span class="line"><span class="comment">// &#123; label: &#x27;不为空&#x27;, value: 5 &#125;</span></span><br><span class="line"><span class="comment">// &#123; label: &#x27;大于&#x27;, value: 6 &#125;,</span></span><br><span class="line"><span class="comment">// &#123; label: &#x27;大于等于&#x27;, value: 7 &#125;,</span></span><br><span class="line"><span class="comment">// &#123; label: &#x27;小于&#x27;, value: 8 &#125;,</span></span><br><span class="line"><span class="comment">// &#123; label: &#x27;小于等于&#x27;, value: 9 &#125;,</span></span><br><span class="line"><span class="comment">// &#123; label: &#x27;选择范围&#x27;, value: 10 &#125;,</span></span><br><span class="line"><span class="comment">// &#123; label: &#x27;等于任意一个&#x27;, value: 11 &#125;,</span></span><br><span class="line"><span class="comment">// &#123; label: &#x27;不等于任意一个&#x27;, value: 12 &#125;,</span></span><br><span class="line"><span class="comment">// &#123; label: &#x27;包含任意一个&#x27;, value: 13 &#125;,</span></span><br><span class="line"><span class="comment">// &#123; label: &#x27;同时包含&#x27;, value: 14 &#125;,</span></span><br><span class="line"><span class="comment">// &#123; label: &#x27;属于&#x27;, value: 15 &#125;,</span></span><br><span class="line"><span class="comment">// &#123; label: &#x27;不属于&#x27;, value: 16 &#125;,</span></span><br><span class="line"><span class="comment">// &#123; label: &#x27;已验证&#x27;, value: 17 &#125;,</span></span><br><span class="line"><span class="comment">// &#123; label: &#x27;未验证&#x27;, value: 18 &#125;,</span></span><br><span class="line"><span class="comment">// 依照type判断组件所对应的下拉列表</span></span><br><span class="line"><span class="keyword">const</span> judgeListMap = &#123;</span><br><span class="line">  <span class="comment">// 单行文本</span></span><br><span class="line">  <span class="string">&#x27;0&#x27;</span>: [</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;等于&#x27;</span>, <span class="attr">value</span>: <span class="number">0</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;不等于&#x27;</span>, <span class="attr">value</span>: <span class="number">1</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;包含&#x27;</span>, <span class="attr">value</span>: <span class="number">2</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;不包含&#x27;</span>, <span class="attr">value</span>: <span class="number">3</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;为空&#x27;</span>, <span class="attr">value</span>: <span class="number">4</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;不为空&#x27;</span>, <span class="attr">value</span>: <span class="number">5</span> &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="comment">// 多行文本</span></span><br><span class="line">  <span class="string">&#x27;1&#x27;</span>: [</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;包含&#x27;</span>, <span class="attr">value</span>: <span class="number">2</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;不包含&#x27;</span>, <span class="attr">value</span>: <span class="number">3</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;为空&#x27;</span>, <span class="attr">value</span>: <span class="number">4</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;不为空&#x27;</span>, <span class="attr">value</span>: <span class="number">5</span> &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="comment">// 数字</span></span><br><span class="line">  <span class="string">&#x27;2&#x27;</span>: [</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;等于&#x27;</span>, <span class="attr">value</span>: <span class="number">0</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;不等于&#x27;</span>, <span class="attr">value</span>: <span class="number">1</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;大于&#x27;</span>, <span class="attr">value</span>: <span class="number">6</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;大于等于&#x27;</span>, <span class="attr">value</span>: <span class="number">7</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;小于&#x27;</span>, <span class="attr">value</span>: <span class="number">8</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;小于等于&#x27;</span>, <span class="attr">value</span>: <span class="number">9</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;选择范围&#x27;</span>, <span class="attr">value</span>: <span class="number">10</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;为空&#x27;</span>, <span class="attr">value</span>: <span class="number">4</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;不为空&#x27;</span>, <span class="attr">value</span>: <span class="number">5</span> &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="comment">// 日期时间</span></span><br><span class="line">  <span class="string">&#x27;3&#x27;</span>: [</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;等于&#x27;</span>, <span class="attr">value</span>: <span class="number">0</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;不等于&#x27;</span>, <span class="attr">value</span>: <span class="number">1</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;大于等于&#x27;</span>, <span class="attr">value</span>: <span class="number">7</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;小于等于&#x27;</span>, <span class="attr">value</span>: <span class="number">9</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;选择范围&#x27;</span>, <span class="attr">value</span>: <span class="number">10</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;为空&#x27;</span>, <span class="attr">value</span>: <span class="number">4</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;不为空&#x27;</span>, <span class="attr">value</span>: <span class="number">5</span> &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="comment">// 单选按钮组</span></span><br><span class="line">  <span class="string">&#x27;4&#x27;</span>: [</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;等于&#x27;</span>, <span class="attr">value</span>: <span class="number">0</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;不等于&#x27;</span>, <span class="attr">value</span>: <span class="number">1</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;等于任意一个&#x27;</span>, <span class="attr">value</span>: <span class="number">11</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;不等于任意一个&#x27;</span>, <span class="attr">value</span>: <span class="number">12</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;包含&#x27;</span>, <span class="attr">value</span>: <span class="number">2</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;不包含&#x27;</span>, <span class="attr">value</span>: <span class="number">3</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;为空&#x27;</span>, <span class="attr">value</span>: <span class="number">4</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;不为空&#x27;</span>, <span class="attr">value</span>: <span class="number">5</span> &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="comment">// 复选框组</span></span><br><span class="line">  <span class="string">&#x27;5&#x27;</span>: [</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;等于&#x27;</span>, <span class="attr">value</span>: <span class="number">0</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;包含任意一个&#x27;</span>, <span class="attr">value</span>: <span class="number">13</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;同时包含&#x27;</span>, <span class="attr">value</span>: <span class="number">14</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;为空&#x27;</span>, <span class="attr">value</span>: <span class="number">4</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;不为空&#x27;</span>, <span class="attr">value</span>: <span class="number">5</span> &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="comment">// 单选列表</span></span><br><span class="line">  <span class="string">&#x27;6&#x27;</span>: [</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;等于&#x27;</span>, <span class="attr">value</span>: <span class="number">0</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;不等于&#x27;</span>, <span class="attr">value</span>: <span class="number">1</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;等于任意一个&#x27;</span>, <span class="attr">value</span>: <span class="number">11</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;不等于任意一个&#x27;</span>, <span class="attr">value</span>: <span class="number">12</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;包含&#x27;</span>, <span class="attr">value</span>: <span class="number">2</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;不包含&#x27;</span>, <span class="attr">value</span>: <span class="number">3</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;为空&#x27;</span>, <span class="attr">value</span>: <span class="number">4</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;不为空&#x27;</span>, <span class="attr">value</span>: <span class="number">5</span> &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="comment">// 复选列表</span></span><br><span class="line">  <span class="string">&#x27;7&#x27;</span>: [</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;等于&#x27;</span>, <span class="attr">value</span>: <span class="number">0</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;包含任意一个&#x27;</span>, <span class="attr">value</span>: <span class="number">13</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;同时包含&#x27;</span>, <span class="attr">value</span>: <span class="number">14</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;为空&#x27;</span>, <span class="attr">value</span>: <span class="number">4</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;不为空&#x27;</span>, <span class="attr">value</span>: <span class="number">5</span> &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="comment">// 地址</span></span><br><span class="line">  <span class="string">&#x27;9&#x27;</span>: [</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;属于&#x27;</span>, <span class="attr">value</span>: <span class="number">15</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;不属于&#x27;</span>, <span class="attr">value</span>: <span class="number">16</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;为空&#x27;</span>, <span class="attr">value</span>: <span class="number">4</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;不为空&#x27;</span>, <span class="attr">value</span>: <span class="number">5</span> &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="comment">// 图片</span></span><br><span class="line">  <span class="string">&#x27;10&#x27;</span>: [</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;为空&#x27;</span>, <span class="attr">value</span>: <span class="number">4</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;不为空&#x27;</span>, <span class="attr">value</span>: <span class="number">5</span> &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="comment">// 附件</span></span><br><span class="line">  <span class="string">&#x27;11&#x27;</span>: [</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;为空&#x27;</span>, <span class="attr">value</span>: <span class="number">4</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;不为空&#x27;</span>, <span class="attr">value</span>: <span class="number">5</span> &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="comment">// 手机</span></span><br><span class="line">  <span class="string">&#x27;12&#x27;</span>: [</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;包含&#x27;</span>, <span class="attr">value</span>: <span class="number">2</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;已验证&#x27;</span>, <span class="attr">value</span>: <span class="number">17</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;未验证&#x27;</span>, <span class="attr">value</span>: <span class="number">18</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;为空&#x27;</span>, <span class="attr">value</span>: <span class="number">4</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;不为空&#x27;</span>, <span class="attr">value</span>: <span class="number">5</span> &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="comment">// 成员单选</span></span><br><span class="line">  <span class="string">&#x27;13&#x27;</span>: [</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;等于&#x27;</span>, <span class="attr">value</span>: <span class="number">0</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;不等于&#x27;</span>, <span class="attr">value</span>: <span class="number">1</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;等于任意一个&#x27;</span>, <span class="attr">value</span>: <span class="number">11</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;不等于任意一个&#x27;</span>, <span class="attr">value</span>: <span class="number">12</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;为空&#x27;</span>, <span class="attr">value</span>: <span class="number">4</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;不为空&#x27;</span>, <span class="attr">value</span>: <span class="number">5</span> &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="comment">// 成员多选</span></span><br><span class="line">  <span class="string">&#x27;14&#x27;</span>: [</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;等于&#x27;</span>, <span class="attr">value</span>: <span class="number">0</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;为空&#x27;</span>, <span class="attr">value</span>: <span class="number">4</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;不为空&#x27;</span>, <span class="attr">value</span>: <span class="number">5</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;包含任意一个&#x27;</span>, <span class="attr">value</span>: <span class="number">13</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;同时包含&#x27;</span>, <span class="attr">value</span>: <span class="number">14</span> &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="comment">// 成员单选</span></span><br><span class="line">  <span class="string">&#x27;15&#x27;</span>: [</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;等于&#x27;</span>, <span class="attr">value</span>: <span class="number">0</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;不等于&#x27;</span>, <span class="attr">value</span>: <span class="number">1</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;等于任意一个&#x27;</span>, <span class="attr">value</span>: <span class="number">11</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;不等于任意一个&#x27;</span>, <span class="attr">value</span>: <span class="number">12</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;为空&#x27;</span>, <span class="attr">value</span>: <span class="number">4</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;不为空&#x27;</span>, <span class="attr">value</span>: <span class="number">5</span> &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="comment">// 部门多选</span></span><br><span class="line">  <span class="string">&#x27;16&#x27;</span>: [</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;等于&#x27;</span>, <span class="attr">value</span>: <span class="number">0</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;为空&#x27;</span>, <span class="attr">value</span>: <span class="number">4</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;不为空&#x27;</span>, <span class="attr">value</span>: <span class="number">5</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;包含任意一个&#x27;</span>, <span class="attr">value</span>: <span class="number">13</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="string">&#x27;同时包含&#x27;</span>, <span class="attr">value</span>: <span class="number">14</span> &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取表单JSON数据中所有组件的必要信息，并存放在map中去，便于查询和管理</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">getComponentMap</span> (data) &#123;</span><br><span class="line">  <span class="comment">// 声明一个map集合</span></span><br><span class="line">  <span class="keyword">const</span> map = <span class="keyword">new</span> <span class="title class_">Map</span>();</span><br><span class="line">  <span class="comment">// 遍历解构赋值每一项</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">const</span> item <span class="keyword">of</span> data) &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123;</span><br><span class="line">      <span class="string">&#x27;__config__&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;label&#x27;</span>: label = <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;renderKey&#x27;</span>: renderKey = <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;tag&#x27;</span>: tag = <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;typeNumber&#x27;</span>: type = <span class="string">&#x27;&#x27;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">&#x27;__slot__&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;options&#x27;</span>: options = []</span><br><span class="line">      &#125; = &#123;&#125;</span><br><span class="line">    &#125; = item;</span><br><span class="line">    <span class="comment">// 构造所需要的数据对象</span></span><br><span class="line">    <span class="keyword">const</span> obj = &#123;</span><br><span class="line">      <span class="attr">label</span>: label,</span><br><span class="line">      <span class="attr">renderKey</span>: renderKey, <span class="comment">// 唯一标识</span></span><br><span class="line">      <span class="attr">tag</span>: tag, <span class="comment">// 决定条件组件卡片的内容选择形式，因为文本输入框和数字、日期的展示形式不同</span></span><br><span class="line">      <span class="attr">type</span>: type, <span class="comment">// 决定条件卡片的条件选项有哪些</span></span><br><span class="line">      <span class="attr">options</span>: options <span class="comment">// 如果内容选项为下拉列表时，通过options展示</span></span><br><span class="line">    &#125;;</span><br><span class="line">    obj.<span class="property">judgeList</span> = judgeListMap[obj.<span class="property">type</span>]; <span class="comment">// 依照type添加条件列表</span></span><br><span class="line">    obj.<span class="property">componentFormat</span> = contentTypeMap[obj.<span class="property">tag</span>]; <span class="comment">// 依照tag添加内容展示形式</span></span><br><span class="line">    map.<span class="title function_">set</span>(obj.<span class="property">renderKey</span>, obj); <span class="comment">// 依据组件的唯一标识去存放进map</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> map;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解构结果"><a href="#解构结果" class="headerlink" title="解构结果"></a>解构结果</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1011655792483713&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;单行文本&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;renderKey&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1011655792483713&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;tag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;el-input&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;judgeList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;等于&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;不等于&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;包含&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">2</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;不包含&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">3</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;为空&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">4</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;不为空&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">5</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;componentFormat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;input&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1021655792484018&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;多行文本&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;renderKey&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1021655792484018&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;tag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;el-input&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;judgeList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;包含&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">2</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;不包含&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">3</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;为空&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">4</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;不为空&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">5</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;componentFormat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;input&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1031655792484335&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;数字&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;renderKey&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1031655792484335&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;tag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;el-input&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;judgeList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;等于&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;不等于&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;大于&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">6</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;大于等于&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">7</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;小于&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">8</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;小于等于&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">9</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;选择范围&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">10</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;为空&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">4</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;不为空&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">5</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;componentFormat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;input&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1041655792484586&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;日期时间&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;renderKey&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1041655792484586&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;tag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;el-date-picker&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;judgeList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;等于&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;不等于&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;大于等于&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">7</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;小于等于&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">9</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;选择范围&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">10</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;为空&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">4</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;不为空&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">5</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;componentFormat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;date&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1051655792484934&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;单选按钮组&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;renderKey&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1051655792484934&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;tag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;el-radio-group&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;选项一&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;选项二&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">2</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;judgeList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;等于&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;不等于&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;等于任意一个&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">11</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;不等于任意一个&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">12</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;包含&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">2</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;不包含&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">3</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;为空&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">4</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;不为空&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">5</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;componentFormat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;select&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1061655792485183&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;复选框组&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;renderKey&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1061655792485183&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;tag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;el-checkbox-group&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;选项一&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;选项二&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">2</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;judgeList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;等于&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;包含任意一个&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">13</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;同时包含&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">14</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;为空&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">4</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;不为空&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">5</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;componentFormat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;select&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1071655792485471&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;下拉框&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;renderKey&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1071655792485471&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;tag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;el-select&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="number">6</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;选项一&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;选项二&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">2</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;judgeList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;等于&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;不等于&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;等于任意一个&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">11</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;不等于任意一个&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">12</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;包含&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">2</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;不包含&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">3</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;为空&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">4</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;不为空&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">5</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;componentFormat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;select&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1081655792485723&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;下拉复选框&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;renderKey&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1081655792485723&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;tag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;el-select&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="number">7</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;选项一&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;选项二&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">2</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;judgeList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;等于&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;包含任意一个&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">13</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;同时包含&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">14</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;为空&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">4</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;不为空&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">5</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;componentFormat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;select&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1091655792486011&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;分割线&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;renderKey&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1091655792486011&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;tag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;el-divider&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="number">8</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;judgeList&quot;</span><span class="punctuation">:</span> <span class="string">&quot;__vue_devtool_undefined__&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;componentFormat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;__vue_devtool_undefined__&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1101655792486384&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;地址&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;renderKey&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1101655792486384&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;tag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;el-cascader&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="number">9</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;judgeList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;属于&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">15</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;不属于&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">16</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;为空&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">4</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;不为空&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">5</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;componentFormat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tree&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1111655792487022&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;附件&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;renderKey&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1111655792487022&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;tag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;el-upload&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="number">11</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;judgeList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;为空&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">4</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;不为空&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">5</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;componentFormat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;none&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1121655792487317&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;图片&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;renderKey&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1121655792487317&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;tag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;el-upload&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="number">10</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;judgeList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;为空&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">4</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;不为空&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">5</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;componentFormat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;none&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1131655792487550&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;手机&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;renderKey&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1131655792487550&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;tag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;el-input&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="number">12</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;judgeList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;包含&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">2</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;已验证&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">17</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;未验证&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">18</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;为空&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">4</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;不为空&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">5</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;componentFormat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;input&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1141655792487891&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;成员单选&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;renderKey&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1141655792487891&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;tag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;el-cascader&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="number">13</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;judgeList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;等于&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;不等于&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;等于任意一个&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">11</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;不等于任意一个&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">12</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;为空&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">4</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;不为空&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">5</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;componentFormat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tree&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1151655792488133&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;部门单选&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;renderKey&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1151655792488133&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;tag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;el-cascader&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="number">15</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;judgeList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;等于&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;不等于&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;等于任意一个&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">11</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;不等于任意一个&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">12</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;为空&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">4</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;不为空&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">5</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;componentFormat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tree&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1161655792488389&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;部门多选&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;renderKey&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1161655792488389&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;tag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;el-cascader&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="number">16</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;judgeList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;等于&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;为空&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">4</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;不为空&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">5</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;包含任意一个&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">13</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;同时包含&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">14</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;componentFormat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tree&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1171655792488689&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;成员多选&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;renderKey&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1171655792488689&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;tag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;el-cascader&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="number">14</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;judgeList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;等于&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;为空&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">4</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;不为空&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">5</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;包含任意一个&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">13</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;同时包含&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">14</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;componentFormat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tree&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><p>至此，我们就满足了业务流程中的第 1 点和第 3 点：</p><blockquote><p>根据用户拖拽表单生成的JSON数据(本次采用了<code>FormGenerator</code>去生成JSON数据)，生成对应的<strong>所有组件的下拉列表</strong>，并在流程图的连接线上添加条件判断。</p></blockquote><blockquote><p> <strong>针对不同组件对应的下拉列表</strong>，要求<strong>有不同的条件判断</strong>，例如：数字类型的需要有范围选择、大小判断、为空不为空，等条件；文本组件有包含不包含，等条件</p></blockquote><p>我们只需提取map中每个组件的<code>renderKey</code>和<code>label</code>作为选项的<code>value</code>和<code>label</code>即可生成所有组件的下拉列表。当然，不要忘了用<code>JSON.parse</code>解析JSON对象后再提取</p><h2 id="生成-x2F-删除单个下拉列表组件"><a href="#生成-x2F-删除单个下拉列表组件" class="headerlink" title="生成&#x2F;删除单个下拉列表组件"></a>生成&#x2F;删除单个下拉列表组件</h2><p>来让我们看看第2个流程：</p><blockquote><p>当用户点击流程图的边时，生成该边上对应的所有组件的下拉列表，<code>在点击某个组件的选项后，生成对应组件的下拉列表组件，在用户取消选择后，对应组件的下拉列表组件随之消失</code>。</p></blockquote><p>我们借鉴Vue的思想，给这个增增删删的组件一个生命周期，那么他大概分为如下几个生命周期：</p><ol><li><strong>init</strong>：点击流程图时，属于init初始化的阶段，判断是否有回显的数据，并组织各类数据去展示。<ul><li>首先初始化该边的数据，由父组件传递过来，然后判断是否有数据需要回显（<code>initEdgeData</code>）</li><li>当边的数据初始化结束后，假如没有数据需要回显，则结束init。否则，添加回显的数据item进已选项中（<code>initSelectedItems</code>）</li><li>当选中项存在时，需要初始化选中项对应的组件（<code>initSelectedComponents</code>）</li></ul></li><li><strong>update</strong>：当已选组件列表发生变化时，更新下拉列表组件<ul><li>如果是在<strong>全部组件列表里添加了新选项</strong>，那么就需要将其由<code>renderKey</code>和<code>label</code>的item添加进已选项中</li><li>如果是取消了某个选项，删除该选项<strong>renderKey</strong>对应的数据</li><li>如果是更新了已选项的数据，判断是否应该被保存</li></ul></li><li><strong>distory</strong>：当全部组件列表的某个已选项取消选择后，删除对应的下拉列表组件。触发update。所以这个阶段可以和<strong>update</strong>合二为一</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//所有组件下拉列表的vue结构</span></span><br><span class="line"> &lt;!-- 添加流转条件多选列表 --&gt;</span><br><span class="line">            <span class="language-xml"><span class="tag">&lt;<span class="name">el-select</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">v-model</span>=<span class="string">&quot;selectedComponentIds&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">size</span>=<span class="string">&quot;small&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">:popper-append-to-body</span>=<span class="string">&quot;false&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">collapse-tags</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">filterable</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">multiple</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">placeholder</span>=<span class="string">&quot;请选择&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              @<span class="attr">change</span>=<span class="string">&quot;updateSelectedComponents&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            &gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">el-option</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                <span class="attr">v-for</span>=<span class="string">&quot;item in formComponents&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                <span class="attr">:key</span>=<span class="string">&quot;item.renderKey&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                <span class="attr">:label</span>=<span class="string">&quot;item.label&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                <span class="attr">:value</span>=<span class="string">&quot;item.renderKey&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              /&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">el-select</span>&gt;</span></span></span><br><span class="line"><span class="comment">// 遍历展示下拉组件的vue结构</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;conditions-items-box&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="comment">&lt;!-- key值不同保证更新子组件的值 --&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">componentsCard</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">v-for</span>=<span class="string">&quot;item in selectedComponentsAry&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">:key</span>=<span class="string">&quot;JSON.stringify(item.condition)&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">:custom-component</span>=<span class="string">&quot;item&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">:cur-judge</span>=<span class="string">&quot;curJudge&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            @<span class="attr">changeCurJudge</span>=<span class="string">&quot;showJudge&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            @<span class="attr">saveComponent</span>=<span class="string">&quot;saveComponent&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> componentsCard <span class="keyword">from</span> <span class="string">&#x27;@/components/workflow/PropertySetting/componentsCard&#x27;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> &#123; getComponentMap &#125; <span class="keyword">from</span> <span class="string">&#x27;@/utils/adpterForForm&#x27;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="attr">components</span>: &#123; componentsCard &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">conditionOptions</span>: [&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">value</span>: <span class="number">0</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">label</span>: <span class="string">&#x27;使用自定义流转条件&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;, &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">value</span>: <span class="number">1</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">label</span>: <span class="string">&#x27;使用Else条件&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;],</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">choseType</span>: <span class="literal">false</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">isAll</span>: <span class="literal">false</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">selectedCondition</span>: <span class="number">0</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">formComponents</span>: [], <span class="comment">// 用于遍历展示所有组件的选项列表</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">componentsMap</span>: <span class="literal">null</span>, <span class="comment">// 存放所有组件的基础信息</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">selectedComponentIds</span>: [], <span class="comment">// 存放所有已选组件的renderKey（唯一id）</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">selectedComponentsAry</span>: <span class="literal">null</span>, <span class="comment">// 遍历展示每个组件下拉列表组件</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">curJudge</span>: -<span class="number">1</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">form</span>: <span class="literal">null</span>, <span class="comment">// 拷贝当前边的自定义数据</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">saveMap</span>: <span class="keyword">new</span> <span class="title class_">Map</span>() <span class="comment">// 仅保存conditions，这是后端要求的，即renderKey、Judge、content</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="comment">// 通过watch监听边的变化并获取数据</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="attr">watch</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">   <span class="comment">// 边更新后初始化数据</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">   <span class="attr">nodeData</span>: <span class="keyword">function</span>(<span class="params">val</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">     <span class="keyword">if</span> (val.<span class="property">type</span> === <span class="string">&#x27;customEdge&#x27;</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">       <span class="variable language_">this</span>.<span class="title function_">initEdgeData</span>(val);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">     &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">   &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"> &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="comment">// Vue组件初始化时</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="title function_">created</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">   <span class="comment">// 构建组件map，key为renderKey，value为组件所有的基本信息</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">   <span class="comment">// 把表单数据存在了localStorage里面防止刷新页面后表单数据丢失</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">   <span class="variable language_">this</span>.<span class="property">componentsMap</span> = <span class="title function_">getComponentMap</span>(<span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="variable language_">window</span>.<span class="property">localStorage</span>.<span class="property">drawingItems</span>));</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">   <span class="comment">// 获取表单数据并展示选择列表。这里就是v-for展示下拉选项用的</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">   <span class="variable language_">this</span>.<span class="property">formComponents</span> = [...<span class="variable language_">this</span>.<span class="property">componentsMap</span>.<span class="title function_">values</span>()];</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">   <span class="comment">// 此处可以优化，只用到了label和renderKey，存在一个数据冗余的问题 可以遍历解构label和value。</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"> &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"> <span class="attr">methods</span>:&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"> <span class="comment">// 初始化边的条件数据</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">initEdgeData</span>(<span class="params">data</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// 提取边的自定义属性properties，并拷贝一份到当前实例（不需要深拷贝）</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// 便于在保存数据时直接拿来save替换掉老数据</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// 保存的数据都存在properties.conditions里面</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">const</span> &#123; properties &#125; = data;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">if</span> (properties) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="variable language_">this</span>.<span class="property">$data</span>.<span class="property">form</span> = <span class="title class_">Object</span>.<span class="title function_">assign</span>(&#123;&#125;, <span class="variable language_">this</span>.<span class="property">$data</span>.<span class="property">form</span>, properties);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// 更新当前选中项</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.<span class="title function_">initSelectedItems</span>(data);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// 更新当前选中项对应的自定义组件</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.<span class="title function_">initSelectedComponents</span>(<span class="variable language_">this</span>.<span class="property">$data</span>.<span class="property">form</span>.<span class="property">conditions</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// 初始化选中项</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">initSelectedItems</span>(<span class="params">data</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// 初始化选中项数组。</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.<span class="property">selectedComponentIds</span> = [];</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// 将边上之前添加过的数据回显出来</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      data.<span class="property">properties</span>.<span class="property">conditions</span>.<span class="title function_">forEach</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="variable language_">this</span>.<span class="property">selectedComponentIds</span>.<span class="title function_">push</span>(item.<span class="property">renderKey</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// 初始化选中项对应的组件，此时除了初始化组件的基本信息外，还会添加已选组件的用户输入信息，即conditionList</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">initSelectedComponents</span>(<span class="params">conditionList</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">const</span> ary = [];</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// 遍历当前选中项，更新条件map和卡片数组</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">for</span> (<span class="keyword">const</span> item <span class="keyword">of</span> conditionList) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">// 此处需要深拷贝，componentsMap获取的是一份地址，直接操作会污染componentsMap</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">const</span> componentObj = <span class="title class_">Object</span>.<span class="title function_">create</span>(<span class="variable language_">this</span>.<span class="property">componentsMap</span>.<span class="title function_">get</span>(item.<span class="property">renderKey</span>));</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        componentObj.<span class="property">condition</span> = item;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        ary.<span class="title function_">push</span>(componentObj);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">// 初始化要保存的map，map保存的仅有conditions，这是后端要求的</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">/* conditions形如</span></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"><span class="language-xml">        *&#123; </span></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"><span class="language-xml">        * renderKey:唯一id</span></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"><span class="language-xml">        * Judge:条件</span></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"><span class="language-xml">        * content:内容</span></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"><span class="language-xml">        *&#125;</span></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"><span class="language-xml">        */</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="variable language_">this</span>.<span class="property">saveMap</span>.<span class="title function_">set</span>(item.<span class="property">renderKey</span>, item);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// 更新当前选中项对应的组件卡片数组</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.<span class="property">selectedComponentsAry</span> = ary;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// 更新当前选中项对应的组件</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// 此方法在触发下拉列表事@change件时传入已选项的renderKey的list</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// 使用renderKey，控制条件组件的展示</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">updateSelectedComponents</span>(<span class="params">idList</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">const</span> ary = []; <span class="comment">// 用于遍历展示用的已选项数组</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">const</span> newSaveMap = <span class="keyword">new</span> <span class="title class_">Map</span>(); <span class="comment">// 用于替换saveMap的新map，数据格式和saveMap一样，是update后的saveMap</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">let</span> saveMapItem = <span class="literal">null</span>; <span class="comment">// 判断是否已存在该数据，是延用数据还是初始化保存项</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// 遍历当前选中项，更新newSaveMap和卡片数组</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// item为renderKey（唯一id）</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">for</span> (<span class="keyword">const</span> item <span class="keyword">of</span> idList) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">// 此处需要浅拷贝，直接操作会污染componentsMap（组件的基本信息）</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">const</span> componentObj = <span class="title class_">Object</span>.<span class="title function_">create</span>(<span class="variable language_">this</span>.<span class="property">componentsMap</span>.<span class="title function_">get</span>(item)); <span class="comment">// 目标组件的基本信息</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        saveMapItem = <span class="variable language_">this</span>.<span class="property">saveMap</span>.<span class="title function_">get</span>(item);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">// 向组件添加要入库的condition信息，即用户输入的信息</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">// 同时判断该数据是否已存在，是延用数据还是初始化数据</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">// 这么做的原因是因为无法获取到最新添加/删除的id，只能获得所有的id，然后遍历替换数据，所以已存在的老数据需要保留</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        componentObj.<span class="property">condition</span> = saveMapItem  ? saveMapItem  : &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="title class_">Judge</span>: -<span class="number">1</span>, <span class="comment">// 条件默认为 请选择</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="attr">content</span>: <span class="literal">null</span>, <span class="comment">// 选择的内容默认为 null</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="attr">renderKey</span>: item <span class="comment">// 唯一id</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        ary.<span class="title function_">push</span>(componentObj); <span class="comment">// 用于遍历展示用的已选项数组</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        newSaveMap.<span class="title function_">set</span>(item, <span class="variable language_">this</span>.<span class="property">saveMap</span>.<span class="title function_">get</span>(item)); <span class="comment">// 向准备替换的map内添加数据</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// 更新要存入节点的map</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.<span class="property">saveMap</span> = newSaveMap;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.<span class="property">form</span>.<span class="property">conditions</span> = <span class="variable language_">this</span>.<span class="title function_">filterSaveData</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// 更新当前选中项对应的组件卡片数组</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.<span class="property">selectedComponentsAry</span> = ary;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.<span class="title function_">saveData</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// 新添加的下拉列表组件值被修改后触发</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">saveComponent</span>(<span class="params">conditions</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">const</span> &#123; <span class="title class_">Judge</span>: judge, renderKey &#125; = conditions;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">if</span> (judge !== -<span class="number">1</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="variable language_">this</span>.<span class="property">saveMap</span>.<span class="title function_">set</span>(renderKey, conditions);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.<span class="property">form</span>.<span class="property">conditions</span> = <span class="variable language_">this</span>.<span class="title function_">filterSaveData</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.<span class="title function_">saveData</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// 过滤可保存数据</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">filterSaveData</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.<span class="property">form</span>.<span class="property">conditions</span> = [...<span class="variable language_">this</span>.<span class="property">saveMap</span>.<span class="title function_">values</span>()].<span class="title function_">filter</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">if</span> (item &amp;&amp; item.<span class="property">judge</span> !== -<span class="number">1</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="comment">// 选择了条件</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="keyword">if</span> (item.<span class="property">judge</span> === <span class="number">4</span> || item.<span class="property">judge</span> === <span class="number">5</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="comment">// 条件是 为空 和 不为空 不需要content有值</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">return</span> item;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#125; <span class="keyword">else</span> <span class="keyword">if</span> (item.<span class="property">content</span> !== <span class="string">&#x27;&#x27;</span> &amp;&amp; item.<span class="property">content</span> !== <span class="literal">null</span> &amp;&amp; item.<span class="property">content</span> !== <span class="literal">undefined</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="comment">// 其他条件content必须有值才通过过滤</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">return</span> item;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="comment">// 保存数据到当前选中元素</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">saveData</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">const</span> &#123; id &#125; = <span class="variable language_">this</span>.<span class="property">$props</span>.<span class="property">nodeData</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// logicFlow的保存节点信息的Api</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.<span class="property">$props</span>.<span class="property">lf</span>.<span class="title function_">setProperties</span>(id, <span class="variable language_">this</span>.<span class="property">$data</span>.<span class="property">form</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"> &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"> </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>至此，我们已经完成了流程2的所有逻辑。</p><blockquote><p>当用户点击流程图的边时，生成该边上对应的所有组件的下拉列表，在点击某个组件的选项后，生成对应组件的下拉列表组件，在用户取消选择后，对应组件的下拉列表组件随之消失。</p></blockquote><p>因为流程3的逻辑在我们编写工具类时就已经搞定了，所以进入流程4</p><blockquote><p>当用户选择后，自动保存到当前边对应的JSON数据，若用户的选择无效，则不保存</p></blockquote><h2 id="子组件的编写-数据保存"><a href="#子组件的编写-数据保存" class="headerlink" title="子组件的编写+数据保存"></a>子组件的编写+数据保存</h2><p>子组件采用<strong>工厂模式</strong>写了一个工厂组件，这里起得名字叫<code>componentsCard</code>，通过组件内部的<code>componentFormat</code>属性决定该组件该如何展示。该属性在解构的时候通过<code>tag</code>属性添加。</p><p>当用户在全部组件的下拉列表选择后，该组件的renderKey就会被添加进已选项中，假如用户并没有进行任何操作，则该条数据会被<code>filterSaveData</code>过滤掉，被认为是无效数据。只有满足<code>filterSaveData</code>过滤条件的数据才会被存入当前边的JSON数据中</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 只展示了部分关键代码</span></span><br><span class="line"></span><br><span class="line">....</span><br><span class="line"></span><br><span class="line">&lt;div <span class="keyword">class</span>=<span class="string">&quot;container-title&quot;</span>&gt;</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;title-name&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;&#123; customComponent.label &#125;&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;title-conditions&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;showJudgeList(customComponent)&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;&#123; selectedItem.label &#125;&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;icon-wf-caretdown iconfont&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;+curJudge === +customComponent.renderKey&quot;</span> <span class="attr">class</span>=<span class="string">&quot;list-box&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">div</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">v-for</span>=<span class="string">&quot;(item,index) in customComponent.judgeList &quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">class</span>=<span class="string">&quot;list-item&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            @<span class="attr">click.capture.stop</span>=<span class="string">&quot;selectItem(item)&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          &gt;</span></span></span><br><span class="line"><span class="language-xml">            &#123;&#123; item.label &#125;&#125;</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    </span><br><span class="line">    ....</span><br><span class="line"></span><br><span class="line">&lt;!-- 为空或不为空作为条件时，该选项不显示 --&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-show</span>=<span class="string">&quot;showContent&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">v-if</span>=<span class="string">&quot;customComponent.componentFormat === &#x27;input&#x27;&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">class</span>=<span class="string">&quot;content&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      &gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">v-show</span>=<span class="string">&quot;selectedItem.value !== 4 &amp;&amp; selectedItem.value !== 5&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">v-model</span>=<span class="string">&quot;content&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          @<span class="attr">change</span>=<span class="string">&quot;saveData&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">v-if</span>=<span class="string">&quot;customComponent.componentFormat === &#x27;select&#x27;&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">class</span>=<span class="string">&quot;content&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      &gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="comment">&lt;!-- 单选列表 --&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-select</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">v-show</span>=<span class="string">&quot;!isMultipleSelect&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">v-model</span>=<span class="string">&quot;content&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          @<span class="attr">change</span>=<span class="string">&quot;saveData&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        &gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">el-option</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">v-for</span>=<span class="string">&quot;item in customComponent.options&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">:key</span>=<span class="string">&quot;item.value&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">:label</span>=<span class="string">&quot;item.label&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">:value</span>=<span class="string">&quot;item.value&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">el-select</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="comment">&lt;!-- 多选列表 --&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-select</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">v-show</span>=<span class="string">&quot;isMultipleSelect&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">v-model</span>=<span class="string">&quot;contentAry&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">multiple</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">placeholder</span>=<span class="string">&quot;请选择&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          @<span class="attr">change</span>=<span class="string">&quot;saveDataAry&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        &gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">el-option</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">v-for</span>=<span class="string">&quot;item in customComponent.options&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">:key</span>=<span class="string">&quot;item.value&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">:label</span>=<span class="string">&quot;item.label&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">:value</span>=<span class="string">&quot;item.value&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">el-select</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">v-if</span>=<span class="string">&quot;customComponent.componentFormat === &#x27;date&#x27;&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">class</span>=<span class="string">&quot;content&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      &gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-date-picker</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">v-show</span>=<span class="string">&quot;!isRange&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">v-model</span>=<span class="string">&quot;content&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">type</span>=<span class="string">&quot;date&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">placeholder</span>=<span class="string">&quot;选择日期&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">value-format</span>=<span class="string">&quot;timestamp&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          @<span class="attr">change</span>=<span class="string">&quot;saveData&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-date-picker</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">v-show</span>=<span class="string">&quot;isRange&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">v-model</span>=<span class="string">&quot;contentAry&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">type</span>=<span class="string">&quot;daterange&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">range-separator</span>=<span class="string">&quot;~&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">value-format</span>=<span class="string">&quot;timestamp&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          @<span class="attr">change</span>=<span class="string">&quot;saveDataAry&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">v-if</span>=<span class="string">&quot;customComponent.componentFormat === &#x27;tree&#x27;&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">class</span>=<span class="string">&quot;content&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      &gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-cascader</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">v-model</span>=<span class="string">&quot;content&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">:options</span>=<span class="string">&quot;customComponent.options&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          @<span class="attr">change</span>=<span class="string">&quot;saveData&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">v-if</span>=<span class="string">&quot;customComponent.componentFormat === &#x27;none&#x27;&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">class</span>=<span class="string">&quot;content&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    </span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">props</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">curJudge</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">type</span>: <span class="title class_">Number</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">default</span>: -<span class="number">1</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">customComponent</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">type</span>: <span class="title class_">Object</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">default</span>: <span class="function">() =&gt;</span> &#123;&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">selectedItem</span>: &#123; <span class="attr">label</span>: <span class="string">&#x27;请选择&#x27;</span>, <span class="attr">value</span>: -<span class="number">1</span> &#125;, <span class="comment">// 条件字段选择的item</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">content</span>: <span class="string">&#x27;&#x27;</span>, <span class="comment">// 内容</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">contentAry</span>: [], <span class="comment">// 内容也可能是数组（范围选择时）</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">multipleSelectVal</span>: [<span class="number">2</span>, <span class="number">3</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>], <span class="comment">// 这些值表示可以进行多选</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">rangeVal</span>: [<span class="number">10</span>] <span class="comment">// 这些值表示是范围选择,</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">computed</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// 要保存的数据</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">sendData</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">content</span>: <span class="variable language_">this</span>.<span class="property">content</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">renderKey</span>: <span class="variable language_">this</span>.<span class="property">customComponent</span>.<span class="property">renderKey</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title class_">Judge</span>: <span class="variable language_">this</span>.<span class="property">selectedItem</span>.<span class="property">value</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">sendDataAry</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">content</span>: <span class="variable language_">this</span>.<span class="property">contentAry</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">renderKey</span>: <span class="variable language_">this</span>.<span class="property">customComponent</span>.<span class="property">renderKey</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title class_">Judge</span>: <span class="variable language_">this</span>.<span class="property">selectedItem</span>.<span class="property">value</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// 是否展示输入框</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">showContent</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">selectedItem</span>.<span class="property">value</span> !== <span class="number">4</span> &amp;&amp; <span class="variable language_">this</span>.<span class="property">selectedItem</span>.<span class="property">value</span> !== <span class="number">5</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// 是否多选</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">isMultipleSelect</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">findVal</span>(<span class="variable language_">this</span>.<span class="property">multipleSelectVal</span>, <span class="variable language_">this</span>.<span class="property">selectedItem</span>.<span class="property">value</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// 是否范围选择</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">isRange</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">findVal</span>(<span class="variable language_">this</span>.<span class="property">rangeVal</span>, <span class="variable language_">this</span>.<span class="property">selectedItem</span>.<span class="property">value</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">mounted</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// 判断显示的内容是 数组 还是 字符串/数字</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title class_">Array</span>.<span class="title function_">isArray</span>(<span class="variable language_">this</span>.<span class="property">customComponent</span>.<span class="property">condition</span>.<span class="property">content</span>) ? <span class="variable language_">this</span>.<span class="property">contentAry</span> = <span class="variable language_">this</span>.<span class="property">customComponent</span>.<span class="property">condition</span>.<span class="property">content</span> : <span class="variable language_">this</span>.<span class="property">content</span> = <span class="variable language_">this</span>.<span class="property">customComponent</span>.<span class="property">condition</span>.<span class="property">content</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// 已选值传入时需要回显，找到对应的选项</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">const</span> initSelectJudge = <span class="variable language_">this</span>.<span class="property">customComponent</span>.<span class="property">judgeList</span>.<span class="title function_">find</span>(<span class="function"><span class="params">options</span> =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">return</span> options.<span class="property">value</span> === <span class="variable language_">this</span>.<span class="property">customComponent</span>.<span class="property">condition</span>.<span class="property">Judge</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// 初始化当前组件条件选项的值</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">this</span>.<span class="property">selectedItem</span> = initSelectJudge || <span class="variable language_">this</span>.<span class="property">selectedItem</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">selectItem</span>(<span class="params">item</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.<span class="property">selectedItem</span> = item;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// 选择完关闭条件列表</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.$emit(<span class="string">&#x27;changeCurJudge&#x27;</span>, -<span class="number">1</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.<span class="property">content</span> = <span class="literal">null</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.<span class="property">contentAry</span> = <span class="literal">null</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"> </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// 这里将数据是否保存的判断全部交由父组件去处理了，这里本来是只有选择 为空/不为空 才会发送</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// 原因1</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// 数据保存的条件是blur，所以当更改数据后就需要确认数据是否能够被保存（这里和流程图的设计有关）</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// 原因2</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// 但即使父组件接收到了数据，也需要额外的判断流程，不如就将所有的判断逻辑都交由了父组件处理</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// 这样子组件只管选择就行了，后期即使需要更改也只需要更改父组件的判断逻辑</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// 原因3</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// 这样在用户切换条件时，能够重置输入框</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.$emit(<span class="string">&#x27;saveComponent&#x27;</span>, <span class="variable language_">this</span>.<span class="property">sendData</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">showJudgeList</span>(<span class="params">item</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.$emit(<span class="string">&#x27;changeCurJudge&#x27;</span>, item.<span class="property">renderKey</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// 保存数据，通过计算属性包装的data直接发送</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">saveData</span>(<span class="params">val</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.<span class="property">content</span> = val;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.$emit(<span class="string">&#x27;saveComponent&#x27;</span>, <span class="variable language_">this</span>.<span class="property">sendData</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// 保存数据，通过计算属性包装的data直接发送</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">saveDataAry</span>(<span class="params">val</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.<span class="property">contentAry</span> = val;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.$emit(<span class="string">&#x27;saveComponent&#x27;</span>, <span class="variable language_">this</span>.<span class="property">sendDataAry</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// 工具方法，找数用的</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">findVal</span>(<span class="params">ary, val</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">return</span> ary.<span class="title function_">find</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">return</span> item === val;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>这样子组件就可以在数据更改后向父组件通知，并将所有的判断逻辑交由父组件处理，将子组件的功能尽量简化。避免后期在维护时还需要关注子组件的判断逻辑。</p><p>而且通过工厂组件，当需要新加组件时也只需要去维护一个componentCard组件就行了，逻辑完全可以复用。</p><p>到这，业务流程4就能跑通了。</p><blockquote><p>当用户选择后，自动保存到当前边对应的JSON数据，若用户的选择无效，则不保存。</p></blockquote><p>至于业务流程5</p><blockquote><p>要求能够回显用户选择的数据，即点击不同边时，回显该边上JSON对应的所有下拉列表组件</p></blockquote><p>因为在父组件使用了watch，当节点发生变化时，会重新执行<code>init</code>阶段的各种方法，从而做到数据回显。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>做这种组件还是需要理清楚逻辑，多多关注细节问题。同时尽量让逻辑简单起来。当然肯定存在不少更优的写法，不过目前还考虑不到，欢迎各位大佬评论指正。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;本次在做低代码平台时，遇见了一个稍微有些复杂的业务场景，需求描述：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;根据用户拖拽表单生成的JSON数据(本次采用了&lt;code&gt;FormGenerator&lt;/code&gt;去生成JSON数据)，生成对应的&lt;strong&gt;所有组件的下拉列表&lt;/strong&gt;，并在流程图的边（节点连接线）上添加条件判断。&lt;/li&gt;
&lt;li&gt;当用户点击流程图的边时，生成该边上对应的&lt;strong&gt;所有组件的下拉列表&lt;/strong&gt;，在点击某个组件的选项后，生成&lt;strong&gt;对应组件的下拉列表组件&lt;/strong&gt;，在用户取消选择后，&lt;strong&gt;对应组件的下拉列表组件&lt;/strong&gt;随之消失。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;针对不同组件对应的下拉列表&lt;/strong&gt;，要求&lt;strong&gt;有不同的条件判断&lt;/strong&gt;，例如：数字类型的需要有范围选择、大小判断、为空不为空，等条件；文本组件有包含不包含，等条件。&lt;/li&gt;
&lt;li&gt;当用户选择后，自动保存到当前边对应的JSON数据，若用户的选择无效，则不保存。&lt;/li&gt;
&lt;li&gt;要求能够回显用户选择的数据，即点击不同边时，回显该边上JSON对应的所有下拉列表组件。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;经过梳理后，其实逻辑看起来也不是特别复杂，不过当时确实是有点被难倒了，主要原因就是一些细节性的问题没有考虑到，然后流程图也需要去学习如何操作，时间上有些紧，同时也在思考如何写能够更便于维护。其次就是没有一个清晰的该处业务的流程思考，不过后来捋了捋也就差不多啦，所以说&lt;strong&gt;三思而后行&lt;/strong&gt;啊。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;三思而后行&lt;/code&gt;：多思考几遍，自己又觉得自己行了哈哈&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="业务场景" scheme="http://example.com/categories/%E4%B8%9A%E5%8A%A1%E5%9C%BA%E6%99%AF/"/>
    
    
    <category term="前端" scheme="http://example.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="JavaScript" scheme="http://example.com/tags/JavaScript/"/>
    
    <category term="业务场景" scheme="http://example.com/tags/%E4%B8%9A%E5%8A%A1%E5%9C%BA%E6%99%AF/"/>
    
  </entry>
  
  <entry>
    <title>秒杀倒计时（准确计时）</title>
    <link href="http://example.com/2022/12/04/%E7%A7%92%E6%9D%80%E5%80%92%E8%AE%A1%E6%97%B6%EF%BC%88%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E5%87%86%E7%A1%AE%E8%AE%A1%E6%97%B6%EF%BC%89/"/>
    <id>http://example.com/2022/12/04/%E7%A7%92%E6%9D%80%E5%80%92%E8%AE%A1%E6%97%B6%EF%BC%88%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E5%87%86%E7%A1%AE%E8%AE%A1%E6%97%B6%EF%BC%89/</id>
    <published>2022-12-04T06:18:22.232Z</published>
    <updated>2022-12-04T06:18:22.232Z</updated>
    
    <content type="html"><![CDATA[<p>最近在准备事件循环的分享时，对于如何实现准确的计时有了点兴趣，因为在浏览器中，setTimeout&#x2F;setInterval 并不是一个准确的计时，是存在延迟的。那么思考我们在双十一抢东西的场景，他们是如何做倒计时的呢？</p><span id="more"></span><h1 id="方案1"><a href="#方案1" class="headerlink" title="方案1"></a>方案1</h1><p><strong>确认服务端与客户端的时间差</strong></p><ol><li>首先，时间肯定是按服务器的时间 <code>serverTime</code> 为主，客户端通过通过请求接口获取服务端的时间。<br><strong>运营取设置开始时间 startTime</strong></li><li>运营需要设置<code>startTime</code>，通过<code>startTime</code>与<code>serverTime</code>相减即为活动在各个手机上的真实的剩余时间。</li><li>因为前端在进行 <code>setTimeout</code> 或 <code>setInterval</code> 时，会有时间的偏差，所以需要在该阶段消除误差。可以在执行新的 <code>setTimeout</code> 时将误差考虑进去，进行提前执行（一般都是1000ms更新一次）<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//继续线程占用</span></span><br><span class="line"><span class="built_in">setInterval</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123; </span><br><span class="line">     <span class="keyword">var</span> j = <span class="number">0</span>; </span><br><span class="line">     <span class="keyword">while</span>(j++ &lt; <span class="number">100000000</span>); </span><br><span class="line">&#125;, <span class="number">0</span>); </span><br><span class="line"> </span><br><span class="line"><span class="comment">//倒计时</span></span><br><span class="line"><span class="keyword">var</span>  interval = <span class="number">1000</span>,</span><br><span class="line">       ms = <span class="number">50000</span>,  <span class="comment">//从服务器和活动开始时间计算出的时间差，这里测试用50000ms</span></span><br><span class="line">       count = <span class="number">0</span>,</span><br><span class="line">       startTime = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>();</span><br><span class="line"><span class="keyword">if</span>( ms &gt;= <span class="number">0</span>)&#123;</span><br><span class="line">       <span class="keyword">var</span> timeCounter = <span class="built_in">setTimeout</span>(countDownStart,interval);                  </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">function</span> <span class="title function_">countDownStart</span>(<span class="params"></span>)&#123;</span><br><span class="line">       count++;</span><br><span class="line">       <span class="keyword">var</span> offset = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>() - (startTime + count * interval);</span><br><span class="line">       <span class="keyword">var</span> nextTime = interval - offset;</span><br><span class="line">       <span class="keyword">var</span> daytohour = <span class="number">0</span>; </span><br><span class="line">       <span class="keyword">if</span> (nextTime &lt; <span class="number">0</span>) &#123; nextTime = <span class="number">0</span> &#125;;</span><br><span class="line">       ms -= interval;</span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;误差：&quot;</span> + offset + <span class="string">&quot;ms，下一次执行：&quot;</span> + nextTime + <span class="string">&quot;ms后，离活动开始还有：&quot;</span> + ms + <span class="string">&quot;ms&quot;</span>);</span><br><span class="line">       <span class="keyword">if</span>(ms &lt; <span class="number">0</span>)&#123;</span><br><span class="line">              <span class="built_in">clearTimeout</span>(timeCounter);</span><br><span class="line">       &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">              timeCounter = <span class="built_in">setTimeout</span>(countDownStart,nextTime);</span><br><span class="line">       &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><blockquote><p>当阻塞过长的时候，需要另外处理。</p></blockquote></li></ol><h1 id="方案2"><a href="#方案2" class="headerlink" title="方案2"></a>方案2</h1><p><strong>使用requestAnimationFrame</strong><br>每16.7ms执行一次，但是也会存在不准确的情况<br>本质上是将函数作为requestAnimationFrame的回调去执行以实现计时效果（函数内部继续执行requestAnimationFrame，并将函数自己传入）</p><h1 id="方案3"><a href="#方案3" class="headerlink" title="方案3"></a>方案3</h1><p><strong>使用webWorker</strong><br>利用worker去处理计时，思路和方案1类似。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;最近在准备事件循环的分享时，对于如何实现准确的计时有了点兴趣，因为在浏览器中，setTimeout&amp;#x2F;setInterval 并不是一个准确的计时，是存在延迟的。那么思考我们在双十一抢东西的场景，他们是如何做倒计时的呢？&lt;/p&gt;</summary>
    
    
    
    <category term="业务场景" scheme="http://example.com/categories/%E4%B8%9A%E5%8A%A1%E5%9C%BA%E6%99%AF/"/>
    
    
    <category term="前端" scheme="http://example.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="JavaScript" scheme="http://example.com/tags/JavaScript/"/>
    
    <category term="业务场景" scheme="http://example.com/tags/%E4%B8%9A%E5%8A%A1%E5%9C%BA%E6%99%AF/"/>
    
  </entry>
  
  <entry>
    <title>设计模式：单例模式</title>
    <link href="http://example.com/2022/12/04/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F_%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/"/>
    <id>http://example.com/2022/12/04/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F_%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/</id>
    <published>2022-12-04T06:18:22.232Z</published>
    <updated>2022-12-04T06:18:22.232Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>学习了这么长的时间，设计模式却还是浅尝辄止，而且最近在回顾Vue知识的时候，发现了很多常见的设计模式：观察者啊，单例啊什么的。让我意识到，如果想要去读懂Vue底层的话，设计模式的思想是必不可少的。<br>这就从简单的单例模式开始，学习学习设计模式</p><span id="more"></span><h1 id="什么是单例模式"><a href="#什么是单例模式" class="headerlink" title="什么是单例模式"></a>什么是单例模式</h1><p>字面上来看，就是只有一个实例的模式。简单来说，单例模式就是在整个<strong>系统</strong>中，保持一个实例，不生成新实例的模式。当然并不是说仅仅只能<code>new</code>一个对象出来，而是说，<strong>针对某个特殊的对象，我们在第一次将它实例化后，以后再次访问时，访问到的一直都是之前实例化好的特殊对象</strong>。</p><h1 id="为什么需要单例模式"><a href="#为什么需要单例模式" class="headerlink" title="为什么需要单例模式"></a>为什么需要单例模式</h1><p>正如上面说的那样，单例模式针对的是某些特殊的对象，那么该对象为什么被针对呢？</p><p>需要单例模式实现的<strong>对象</strong>或<strong>系统</strong>，一般<strong>具有如下特点</strong>：</p><p><strong>对象</strong></p><ul><li>需要<strong>频繁的被创建、销毁</strong>，但在这些过程中<strong>无法优化</strong></li><li><strong>需要比较多的资源</strong>：读取配置、产生其他依赖对象</li></ul><p><strong>环境</strong></p><ul><li>希望<strong>节省内存</strong></li><li>希望<strong>节省系统性能</strong>的开销</li><li>希望某些<strong>资源不被多重占用</strong></li><li>希望有一个能够<strong>统一处理资源和优化</strong>的对象</li></ul><blockquote><p><code>Vuex</code>和<code>Spring</code>中的<code>Bean</code>对象就是如此</p></blockquote><p>通过单例模式，我们能够简单的实现<code>节省性能开销、节省内存、统一管理资源</code>等功能。因为只有一个实例对象存在，并不会新生成。</p><h1 id="如何实现单例模式"><a href="#如何实现单例模式" class="headerlink" title="如何实现单例模式"></a>如何实现单例模式</h1><p>单例模式的实现要点</p><ul><li>保证对象只有一个，不能生成新对象出来</li></ul><h2 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h2><p>实现的条件还是不变，保证对象只有一个，不能生成新对象出来。<br>在JavaScript中，如果要实现私有化，首先想到的就是闭包了，闭包还能够使该实例不消失。<br>其次结合if判断语句，如果实例存在，直接返回，不存在就执行new运算符初始化实例。</p><h3 id="闭包实现"><a href="#闭包实现" class="headerlink" title="闭包实现"></a>闭包实现</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="title class_">SingleCase</span> = (<span class="keyword">function</span> <span class="title function_">Singleton</span> ()&#123;</span><br><span class="line"><span class="keyword">let</span> instance = <span class="literal">null</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">_init</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="comment">// 此处可以定义一些初始化配置</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(instance)</span><br><span class="line"><span class="keyword">if</span>(!instance)&#123;</span><br><span class="line">instance = <span class="keyword">new</span> <span class="title function_">_init</span>()</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> instance</span><br><span class="line">&#125;</span><br><span class="line">&#125;)()</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a = <span class="title class_">SingleCase</span>()</span><br><span class="line"><span class="keyword">var</span> b = <span class="title class_">SingleCase</span>()</span><br><span class="line">a === b <span class="comment">// true</span></span><br></pre></td></tr></table></figure><blockquote><p>其实js中window顶层对象就是个单例了。</p></blockquote><h3 id="Es6-Class实现"><a href="#Es6-Class实现" class="headerlink" title="Es6 Class实现"></a>Es6 Class实现</h3><p>首先我们要明白，Class是一个语法糖，本质上也是一个构造函数。<br>回顾单例的要求，一是<strong>共享</strong>一个实例，二是不能生成新实例出来</p><h4 id="构造函数-constructor"><a href="#构造函数-constructor" class="headerlink" title="构造函数 constructor"></a>构造函数 constructor</h4><p>Class有一个特点，在我们实例化Class时，会自动执行其内的constructor函数（每一个Class都有该函数，不声明默认为空。），可以初始化一些配置。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Singleton</span>&#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title class_">Singleton</span>.<span class="property">instance</span>) &#123;</span><br><span class="line">      <span class="comment">// 进行一些初始化操作</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">name</span> = <span class="string">&#x27;张三&#x27;</span></span><br><span class="line">      <span class="title class_">Singleton</span>.<span class="property">instance</span> = <span class="variable language_">this</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Singleton</span>.<span class="property">instance</span></span><br><span class="line">  &#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> a = <span class="keyword">new</span> <span class="title class_">Singleton</span>()</span><br><span class="line"><span class="keyword">var</span> b = <span class="keyword">new</span> <span class="title class_">Singleton</span>()</span><br><span class="line">a === b <span class="comment">// true</span></span><br></pre></td></tr></table></figure><p>上面的方法能够实现单例的要点在于，只有第一个<code>new Singleton()</code>是真真的new出来的，之后的其实都是第一个new出来的实例对象。<br>通过以下输出可以证明</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Singleton</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title class_">Singleton</span>.<span class="property">instance</span>) &#123; <span class="comment">// 判断有无实例存在，若无则返回当前实例</span></span><br><span class="line">      <span class="variable language_">window</span>.<span class="property">first</span> = <span class="variable language_">this</span> <span class="comment">// 存储第一个实例</span></span><br><span class="line">      <span class="title class_">Singleton</span>.<span class="property">instance</span> = <span class="variable language_">this</span> <span class="comment">// 将第一个实例赋值给Singleton.instance</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">window</span>.<span class="property">second</span> = <span class="variable language_">this</span> <span class="comment">// 记录最新创建的实例</span></span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Singleton</span>.<span class="property">instance</span> <span class="comment">// 返回第一个实例</span></span><br><span class="line">  &#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> a = <span class="keyword">new</span> <span class="title class_">Singleton</span>()</span><br><span class="line"><span class="keyword">var</span> b = <span class="keyword">new</span> <span class="title class_">Singleton</span>()</span><br><span class="line"><span class="variable language_">window</span>.<span class="property">first</span> === <span class="variable language_">window</span>.<span class="property">second</span> <span class="comment">// false</span></span><br></pre></td></tr></table></figure><p>之所以该实例能够一直存在，是因为不仅仅后续创建的变量在引用它，而且Singleton本身的属性instance也在引用它，所以不会被销毁</p><h4 id="静态方法-x2F-属性"><a href="#静态方法-x2F-属性" class="headerlink" title="静态方法&#x2F;属性"></a>静态方法&#x2F;属性</h4><p>在Es6中，Class提供了静态方法。表示该方法为该类独有，不会被实例继承。我们可以通过静态方法来实现单例</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 静态方法</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Singleton</span>&#123;</span><br><span class="line">  <span class="keyword">static</span> <span class="title function_">getInstance</span>(<span class="params"></span>) &#123;</span><br><span class="line">     <span class="keyword">if</span> (!<span class="title class_">Singleton</span>.<span class="property">instance</span>) &#123;</span><br><span class="line">         <span class="title class_">Singleton</span>.<span class="property">instance</span> = <span class="keyword">new</span> <span class="title class_">Singleton</span>()</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">return</span> <span class="title class_">Singleton</span>.<span class="property">instance</span></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">Singleton</span>.<span class="title function_">getInstance</span>() === <span class="title class_">Singleton</span>.<span class="title function_">getInstance</span>() <span class="comment">// true</span></span><br></pre></td></tr></table></figure><p>静态属性指的是 Class 本身的属性，即<code>Class.propName</code>，而不是定义在实例对象（<code>this</code>）上的属性</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 静态属性(不是很确定这么用行不行，但是也能实现)</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Singleton</span> &#123;</span><br><span class="line">  <span class="keyword">static</span> <span class="title class_">SingleCase</span> = &#123;&#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> a = <span class="title class_">Singleton</span>.<span class="property">SingleCase</span></span><br><span class="line"><span class="keyword">var</span> b = <span class="title class_">Singleton</span>.<span class="property">SingleCase</span></span><br><span class="line">a === b <span class="comment">// true</span></span><br></pre></td></tr></table></figure><p><strong>Vuex的实现思路<br>by——<a href="https://blog.csdn.net/qq_32930863/article/details/106205123">Controllerszzy</a></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">SingleState</span> &#123;</span><br><span class="line">    <span class="comment">// 状态存储机制</span></span><br><span class="line">    data=&#123;&#125;</span><br><span class="line">    <span class="comment">// 获取对象</span></span><br><span class="line">    <span class="title function_">get</span>(<span class="params">key</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">data</span>[key]||<span class="string">&#x27;&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 存储对象</span></span><br><span class="line">    <span class="title function_">set</span>(<span class="params">key,value</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span>  <span class="variable language_">this</span>.<span class="property">data</span>[key]=value</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 外部调用此函数实例化</span></span><br><span class="line">    <span class="keyword">static</span> <span class="title function_">getInstance</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="title class_">SingleState</span>.<span class="property">instance</span>) &#123;</span><br><span class="line">            <span class="title class_">SingleState</span>.<span class="property">instance</span> = <span class="keyword">new</span> <span class="title class_">SingleState</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">SingleState</span>.<span class="property">instance</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> state_1 = <span class="title class_">SingleState</span>.<span class="title function_">getInstance</span>()</span><br><span class="line">state_1.<span class="title function_">set</span>(<span class="string">&#x27;hi&#x27;</span>,<span class="string">&#x27;hello&#x27;</span>) <span class="comment">// 设置 key = hi value = hello</span></span><br><span class="line"><span class="keyword">const</span> state_2 = <span class="title class_">SingleState</span>.<span class="title function_">getInstance</span>()</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(state_2.<span class="title function_">get</span>(<span class="string">&#x27;hi&#x27;</span>)) <span class="comment">// hello</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>使用过程中通过 Vue.use(Vuex) 安装了Vuex插件,而Vuex 插件是一个对象，它在内部实现了一个 install 方法，这个方法会在插件安装时被调用，从而把 Store 注入到Vue实例里去。也就是说每 install 一次，都会尝试给 Vue 实例注入一个 Store。</p><h1 id="单例模式的优劣总结"><a href="#单例模式的优劣总结" class="headerlink" title="单例模式的优劣总结"></a>单例模式的优劣总结</h1><h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><ul><li>减少了内存开支</li><li>减少了系统的性能开销</li><li>避免对资源的多重占用</li><li>设置全局的访问点， 优化和共享资源访问</li></ul><h2 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h2><ul><li>扩展很困难</li><li>对测试是不利的</li><li>与单一职责原则有冲突<ul><li>一个类应该只实现一个逻辑， 而不关心它是否是单例的， 是不是要单例取决于环境， 单例模式把“要单例”和业务逻辑融合在一个类中</li></ul></li></ul><h1 id="对ES6中新增类型Symbol的疑问"><a href="#对ES6中新增类型Symbol的疑问" class="headerlink" title="对ES6中新增类型Symbol的疑问"></a>对ES6中新增类型Symbol的疑问</h1><p>Symbol的实现或者用法和单例有什么联系呢？感觉上挺像的，虽然只是用于防止命名冲突。Es6一直不太会用出来，所以理解的也不是很到位。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>其实单例模式还区分<strong>饿汉</strong>和<strong>懒汉</strong>两种模式，其差别在于：<br><strong>饿汉</strong>要求直接生成实例，不管有没有调用该对象<br><strong>懒汉</strong>要求什么时候用到了，什么时候再生成这个实例对象</p><hr><h1 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h1><p>学习了js一段时间后，发现之前js实现的单例是比较局限的，自己并没有从一个前端的角度去思考设计模式如何实现。所以在阅读了《JavaScript设计模式与开发实践》后，来补充下最新的理解。</p><p><strong>上述闭包实现的单例存在着一些问题</strong></p><p>单例的判断逻辑和单例对象的创建混杂在了一起。假如想去创建其他非单例对象时，需要重新在再写一部分相同的创建逻辑，所以，我们需要把二者拆分开，以实现 <strong>单一职责原则</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 单例逻辑的控制</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getSingle</span> = (<span class="params">fn</span>)=&gt; &#123;</span><br><span class="line"><span class="keyword">let</span> result;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="keyword">return</span> result || (result = fn.<span class="title function_">call</span>(result,<span class="variable language_">arguments</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 可复用的创建各种各样东西的方法</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">createObj</span> = (<span class="params"></span>)=&gt; &#123;<span class="attr">discribe</span>:<span class="string">&#x27;创建对象的方法&#x27;</span>&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">createDiv</span> = (<span class="params"></span>)=&gt; &#123;<span class="attr">discribe</span>:<span class="string">&#x27;创建Div的方法&#x27;</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 通过高阶函数，这样就准备好了创建单例的方法</span></span><br><span class="line"><span class="keyword">const</span> createSingleObj = <span class="title function_">getSingle</span>(createObj);</span><br><span class="line"><span class="keyword">const</span> createSingleDiv = <span class="title function_">getSingle</span>(createDiv );</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> a = <span class="title function_">createSingleObj</span>();</span><br><span class="line"><span class="keyword">const</span> b = <span class="title function_">createSingleObj</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a === b) <span class="comment">// true</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;学习了这么长的时间，设计模式却还是浅尝辄止，而且最近在回顾Vue知识的时候，发现了很多常见的设计模式：观察者啊，单例啊什么的。让我意识到，如果想要去读懂Vue底层的话，设计模式的思想是必不可少的。&lt;br&gt;这就从简单的单例模式开始，学习学习设计模式&lt;/p&gt;</summary>
    
    
    
    <category term="设计模式" scheme="http://example.com/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
    <category term="常用的设计模式" scheme="http://example.com/tags/%E5%B8%B8%E7%94%A8%E7%9A%84%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>跨域常见的解决方法</title>
    <link href="http://example.com/2022/12/04/%E8%B7%A8%E5%9F%9F/"/>
    <id>http://example.com/2022/12/04/%E8%B7%A8%E5%9F%9F/</id>
    <published>2022-12-04T06:18:22.232Z</published>
    <updated>2022-12-04T06:18:22.232Z</updated>
    
    <content type="html"><![CDATA[<p>之前有被人问到过跨域这块的东西，当时答得有点模糊，再回顾一下</p><span id="more"></span>><h1 id="跨域概念"><a href="#跨域概念" class="headerlink" title="跨域概念"></a>跨域概念</h1><p>浏览器中有一个安全策略叫同源策略，意思是<strong>协议、主机、端口</strong>必须相同，如果其一不同，则称之为跨域，对于跨域的请求，出于安全考虑，浏览器会对其访问进行一些限制</p><h1 id="Ajax"><a href="#Ajax" class="headerlink" title="Ajax"></a>Ajax</h1><p>对于传统ajax，浏览器默认不允许其发送跨域请求，但是有三种方案可以解决</p><ol><li><strong>代理</strong></li></ol><p><strong>代理适用的场景是：生产环境不发生跨域，但开发环境发生跨域</strong><br>比较常见的是通过webpack集成的 devServer 实现代理去解决跨域问题</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// vue 的开发服务器代理配置</span></span><br><span class="line"><span class="comment">// vue.config.js</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">devServer</span>: &#123; <span class="comment">// 配置开发服务器</span></span><br><span class="line">    <span class="attr">proxy</span>: &#123; <span class="comment">// 配置代理</span></span><br><span class="line">      <span class="string">&quot;/api&quot;</span>: &#123; <span class="comment">// 若请求路径以 /api 开头</span></span><br><span class="line">        <span class="attr">target</span>: <span class="string">&quot;http://dev.taobao.com&quot;</span>, <span class="comment">// 将其转发到 http://dev.taobao.com</span></span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ol start="2"><li><strong>JSONP</strong></li></ol><p>通过前后端配合，利用 script 标签不受同源策略限制去令服务端响应一段JS代码，将需要返回的数据作为参数传入该代码中，客户端再负责调用，类似ajax的回调函数。</p><blockquote><p>但JSONP有一个明显的问题就是只能发送Get请求</p></blockquote><ol start="3"><li><strong>CORS</strong></li></ol><p><code>CORS</code>是基于<code>http1.1</code>的一种跨域解决方案。全称叫跨域资源共享<br>总体思路是：<strong>如果浏览器要跨域访问服务器的资源，需要获得服务器的允许</strong><br>针对不同的请求，CORS 规定了三种不同的交互模式，分别是：<strong>简单请求</strong>、<strong>需要预检的请求</strong>、<strong>附带身份凭证的请求</strong>。</p><p>当请求方法属于get、post、head；请求头仅包含安全的字段；请求头如果包含Content-Type，仅限 <code>text/plain</code>、<code>multipart/form-data</code>、<code>application/x-www-form-urlencoded</code>；<strong>同时满足</strong>上面三个条件后则判断为简单请求。</p><blockquote><p>常见的安全字段如下：</p><ul><li><code>Accept</code></li><li><code>Accept-Language</code></li><li><code>Content-Language</code></li><li><code>Content-Type</code></li><li><code>DPR</code></li><li><code>Downlink</code></li><li><code>Save-Data</code></li><li><code>Viewport-Width</code></li><li><code>Width</code></li></ul></blockquote><p>当浏览器判断某个请求为简单请求后，会<strong>在请求头中自动添加 Origin 字段</strong>，用以告诉服务器，是哪个源地址在跨域请求，服务器在收到请求后，需要添加 <code>Access-Control-Allow-Origin</code> 用以表示开放的权限（* 表示允许所有，也可以写具体的地址表示只允许该源下的请求访问）</p><p>对于需要预检的请求（不符合上述条件），浏览器会先发送预检请求，如果服务器允许访问，则浏览器发送真实请求，最后服务器完成真实请求的响应</p><p>预检请求有以下特征：</p><ul><li>请求方法为<code>OPTIONS</code></li><li>没有请求体</li><li>请求头中包含<ul><li><code>Origin</code>：请求的源，和简单请求的含义一致</li><li><code>Access-Control-Request-Method</code>：后续的真实请求将使用的请求方法</li><li><code>Access-Control-Request-Headers</code>：后续的真实请求会改动的请求头</li></ul></li></ul><p>对于预检请求的响应，不需要请求体，只需要在响应头中添加</p><ul><li><code>Access-Control-Allow-Origin</code>：和简单请求一样，表示允许的源</li><li><code>Access-Control-Allow-Methods</code>：表示允许的后续真实的请求方法</li><li><code>Access-Control-Allow-Headers</code>：表示允许改动的请求头</li><li><code>Access-Control-Max-Age</code>：告诉浏览器，多少秒内，对于同样的请求源、方法、头，都不需要再发送预检请求了</li></ul><p>默认情况下，ajax 的跨域请求并不会附带 cookie，这样一来，某些需要权限的操作就无法进行，不过可以通过简单的配置就可以实现附带 cookie，xhr通过 <code>withCredentials = true</code> 配置，fetch 通过 init 参数对象中的 <code>credentials</code>配置。这样一来该请求就是一个附带身份凭证的请求，会在请求头中添加 <code>cookie</code> 字段。服务器需要在响应头中添加 <code>Access-Control-Allow-Credentials: true</code>即可</p><p>**对于附带身份凭证的请求，服务器不得设置 <code>Access-Control-Allow-Origin 的值为*</code>**。</p><p>参考文章：<br><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CORS#%E8%A7%84%E8%8C%83">Http跨域资源共享 MDN</a><br><a href="https://juejin.cn/post/7094162429310926855">前端面试必会网络之跨域问题解决</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;之前有被人问到过跨域这块的东西，当时答得有点模糊，再回顾一下&lt;/p&gt;</summary>
    
    
    
    <category term="问题解决方案" scheme="http://example.com/categories/%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    
    
    <category term="前端" scheme="http://example.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="跨域" scheme="http://example.com/tags/%E8%B7%A8%E5%9F%9F/"/>
    
  </entry>
  
  <entry>
    <title>Echarts动态获取数据颜色丢失的问题</title>
    <link href="http://example.com/2022/12/04/Echarts%E5%8A%A8%E6%80%81%E8%8E%B7%E5%8F%96%E6%95%B0%E6%8D%AE%E9%A2%9C%E8%89%B2%E4%B8%A2%E5%A4%B1%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://example.com/2022/12/04/Echarts%E5%8A%A8%E6%80%81%E8%8E%B7%E5%8F%96%E6%95%B0%E6%8D%AE%E9%A2%9C%E8%89%B2%E4%B8%A2%E5%A4%B1%E7%9A%84%E9%97%AE%E9%A2%98/</id>
    <published>2022-12-04T06:18:22.228Z</published>
    <updated>2020-03-31T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>解决图表颜色丢失的问题</p><span id="more"></span><h1 id="问题描述："><a href="#问题描述：" class="headerlink" title="问题描述："></a>问题描述：</h1><p>使用Echarts饼图从后台请求数据时，请求成功后图表颜色丢失，变成纯黑色了。</p><h1 id="问题原因："><a href="#问题原因：" class="headerlink" title="问题原因："></a>问题原因：</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">visualMap</span>: &#123;</span><br><span class="line">          <span class="attr">show</span>: <span class="literal">false</span>,</span><br><span class="line">          <span class="attr">min</span>: <span class="number">0</span>,<span class="comment">// 数据最小值的颜色明暗度</span></span><br><span class="line">          <span class="attr">max</span>: <span class="number">600</span>,<span class="comment">// 数据最大值的颜色明暗度</span></span><br><span class="line">          <span class="attr">inRange</span>: &#123;</span><br><span class="line">            <span class="attr">colorLightness</span>: [<span class="number">0</span>,<span class="number">1</span>] <span class="comment">// 表示颜色的明暗程度</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br></pre></td></tr></table></figure><p>出现纯黑的情况是因为数据太小了，而max中设置的又太高，导致了只能以最暗的情况展示所有数据。</p><h1 id="解决思路："><a href="#解决思路：" class="headerlink" title="解决思路："></a>解决思路：</h1><h2 id="一-、将max调小点。"><a href="#一-、将max调小点。" class="headerlink" title="一 、将max调小点。"></a>一 、将max调小点。</h2><h2 id="二、将数据做处理"><a href="#二、将数据做处理" class="headerlink" title="二、将数据做处理"></a>二、将数据做处理</h2><p>计算出各组数据的值在总量的比重后作为数组放在data内部，min和max设为0,1。<br>这样就能根据比重显示明暗度了。</p><p>当然，也可以在后端返回数据的时候将value直接返回为比重也行。或者说多返回一个总量，前端自行处理也阔以。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;解决图表颜色丢失的问题&lt;/p&gt;</summary>
    
    
    
    <category term="问题解决方案" scheme="http://example.com/categories/%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    
    
    <category term="Echarts" scheme="http://example.com/tags/Echarts/"/>
    
  </entry>
  
  <entry>
    <title>Echarts常见问题整理</title>
    <link href="http://example.com/2022/12/04/Echarts%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E6%95%B4%E7%90%86/"/>
    <id>http://example.com/2022/12/04/Echarts%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E6%95%B4%E7%90%86/</id>
    <published>2022-12-04T06:18:22.228Z</published>
    <updated>2020-03-31T16:00:01.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本次项目中负责了一个使用Echarts做的页面，涉及的图表类型有<br> <strong>柱状图(横竖两种)、折线图、气泡图、漏斗图、饼图</strong><br>期间也遇到了不少问题，但是大部分的问题都是可以通过Echarts官方文档上找到解决办法的。下面记录一下问题及解决办法和Echarts的一些学习、码字心得。</p><span id="more"></span><h1 id="一、常见问题记录"><a href="#一、常见问题记录" class="headerlink" title="一、常见问题记录"></a>一、常见问题记录</h1><h2 id="1-如何创建一个自适应的Echarts图表（动态给Echarts图表当前高度初始化-窗口缩放Echarts图表自适应）"><a href="#1-如何创建一个自适应的Echarts图表（动态给Echarts图表当前高度初始化-窗口缩放Echarts图表自适应）" class="headerlink" title="1.如何创建一个自适应的Echarts图表（动态给Echarts图表当前高度初始化+窗口缩放Echarts图表自适应）"></a>1.如何创建一个自适应的Echarts图表（动态给Echarts图表当前高度初始化+窗口缩放Echarts图表自适应）</h2><p>讲道理这个问题一开始着实困扰我了大半天，因为页面需要自适应，根本不知道图表一开始具体的 Height 是多少。而且<code>此次布局使用的是Flex布局，分左中右三块，每块上下各有一个图表，加一起是六个</code>。这里有两种解决思路，各有优缺点吧，这次用的第二个。</p><blockquote><p>提供的思路并非最优解，只是在解决本次项目的过程中效果比较好，如果有什么更好的想法欢迎指出</p></blockquote><h3 id="动态高度初始化"><a href="#动态高度初始化" class="headerlink" title="动态高度初始化"></a>动态高度初始化</h3><h4 id="思路一：通过css样式aspect-ratio（宽高比）解决"><a href="#思路一：通过css样式aspect-ratio（宽高比）解决" class="headerlink" title="思路一：通过css样式aspect-ratio（宽高比）解决"></a>思路一：通过css样式aspect-ratio（宽高比）解决</h4><p>因为采用的是<code>Flex布局</code>，而且是左中右三块，左右25%，中间50%，<code>因此宽度是一定有的</code></p><p>此时，给图表的容器加上一个<code>宽高比aspect-ratio，高度设置为100%</code>，图表在初始化的时候就能根据宽高比初始化出来。</p><p><strong>优点：</strong></p><ol><li>操作简单，<code>css直接加</code>就ok</li><li>对于<code>宽高比确定</code>的图表完美契合</li><li>图表<code>不会变形</code></li></ol><p><strong>缺点</strong></p><ol><li>分配的宽度过大的话会<code>影响整体布局</code>（超出盒子范围）</li><li><code>不适合</code>难以确定宽高比 或 图表不要求定型 的情况没办法使用</li></ol><h4 id="思路二：通过在父组件dom操作获取当前高度clientHeight（只读），作为参数调用子组件方法，在子组件获取到当前高度后初始化。"><a href="#思路二：通过在父组件dom操作获取当前高度clientHeight（只读），作为参数调用子组件方法，在子组件获取到当前高度后初始化。" class="headerlink" title="思路二：通过在父组件dom操作获取当前高度clientHeight（只读），作为参数调用子组件方法，在子组件获取到当前高度后初始化。"></a>思路二：通过在父组件dom操作获取当前高度clientHeight（只读），作为参数调用子组件方法，在子组件获取到当前高度后初始化。</h4><p><strong>优点</strong></p><ol><li><code>布局不会乱</code></li><li><code>适合</code>难以确定宽高比 或 图表不要求定型 的情况</li></ol><p><strong>缺点</strong></p><ol><li>这样写的<code>高度是定死的</code>，<code>除非再次传参初始化</code>，否则在不同大小的显示器上就只有<code>刷新</code>后才能正常<code>自适应</code>。</li></ol><p><strong>代码实现</strong><br>父组件：关键代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="title class_">Histogram</span> ref=<span class="string">&quot;echarts1&quot;</span> /&gt;</span><br><span class="line"><span class="comment">// 有五个类似的组件</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;= <span class="number">5</span>; i++) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">$refs</span>[<span class="string">&#x27;echarts&#x27;</span>+i].<span class="title function_">setHeight</span>(<span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&#x27;side-echarts-container&#x27;</span>)[<span class="number">0</span>].<span class="property">clientHeight</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>子组件：关键代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;hstogram&quot;</span> <span class="attr">class</span>=<span class="string">&quot;charts&quot;</span> <span class="attr">:style</span>=<span class="string">&quot;&#123;&#x27;height&#x27;:sideEchartsContainerHeight+&#x27;px&#x27;,&#x27;width&#x27;:&#x27; 100%&#x27;&#125;&quot;</span>  /&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> * <span class="keyword">as</span> echarts <span class="keyword">from</span> <span class="string">&#x27;echarts&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> &#123; getBarGraphData &#125; <span class="keyword">from</span> <span class="string">&#x27;../../api/dataStatistics.js&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">var</span> option = &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="comment">// color: [&#x27;rgb(245,33,45)&#x27;, &#x27;rgb(255,229,143)&#x27;, &#x27;rgb(11,115,255)&#x27;],</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">color</span>: [<span class="keyword">new</span> echarts.<span class="property">graphic</span>.<span class="title class_">LinearGradient</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, [&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              <span class="attr">offset</span>: <span class="number">1</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              <span class="attr">color</span>: <span class="string">&#x27;#f00&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#125;, &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              <span class="attr">offset</span>: <span class="number">0</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              <span class="attr">color</span>: <span class="string">&#x27;#f99&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#125;]), </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="keyword">new</span> echarts.<span class="property">graphic</span>.<span class="title class_">LinearGradient</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, [&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              <span class="attr">offset</span>: <span class="number">1</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              <span class="attr">color</span>: <span class="string">&#x27;rgb(249, 173, 21)&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#125;, &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              <span class="attr">offset</span>: <span class="number">0</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              <span class="attr">color</span>: <span class="string">&#x27;rgb(255,255,153)&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#125;]), </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="keyword">new</span> echarts.<span class="property">graphic</span>.<span class="title class_">LinearGradient</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, [&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              <span class="attr">offset</span>: <span class="number">1</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              <span class="attr">color</span>: <span class="string">&#x27;rgb(11,115,255)&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#125;, &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              <span class="attr">offset</span>: <span class="number">0</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              <span class="attr">color</span>: <span class="string">&#x27;rgba(0,255,255)&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#125;])</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        ],</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">legend</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">textStyle</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">color</span>: <span class="string">&#x27;white&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">top</span>: <span class="number">25</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">grid</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">show</span>: <span class="literal">true</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">borderColor</span>: <span class="string">&#x27;rgba(255, 255, 255,0.5)&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">tooltip</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">trigger</span>: <span class="string">&#x27;axis&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">axisPointer</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">type</span>: <span class="string">&#x27;shadow&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">xAxis</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">type</span>: <span class="string">&#x27;category&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">axisLabel</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">interval</span>: <span class="number">0</span>, <span class="comment">// 显示全部x坐标</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">//   rotate: 35,</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">color</span>: <span class="string">&#x27;rgba(255, 255, 255,1)&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">nameTextStyle</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">align</span>: <span class="string">&#x27;center&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">splitLine</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">show</span>: <span class="literal">true</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">lineStyle</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">color</span>: <span class="string">&#x27;rgba(255, 255, 255,0.5)&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">width</span>: <span class="number">1</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">type</span>: <span class="string">&#x27;dashed&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">yAxis</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">axisLabel</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">color</span>: <span class="string">&#x27;rgba(255, 255, 255,1)&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">splitLine</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">lineStyle</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">color</span>: <span class="string">&#x27;rgba(255, 255, 255,0.5)&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">width</span>: <span class="number">1</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">type</span>: <span class="string">&#x27;dashed&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">series</span>: [</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#123; </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">type</span>: <span class="string">&#x27;bar&#x27;</span>, </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">barWidth</span>: <span class="number">10</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">itemStyle</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">//柱形图圆角，鼠标移上去效果，如果只是一个数字则说明四个参数全部设置为那么多</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">normal</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="comment">//柱形图圆角，初始化效果</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">barBorderRadius</span>:[<span class="number">15</span>, <span class="number">15</span>, <span class="number">0</span>, <span class="number">0</span>]</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125; </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#123; </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">type</span>: <span class="string">&#x27;bar&#x27;</span>, </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">barWidth</span>: <span class="number">10</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">itemStyle</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">//柱形图圆角，鼠标移上去效果，如果只是一个数字则说明四个参数全部设置为那么多</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">normal</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="comment">//柱形图圆角，初始化效果</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">barBorderRadius</span>:[<span class="number">15</span>, <span class="number">15</span>, <span class="number">0</span>, <span class="number">0</span>]</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125; </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#123; </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">type</span>: <span class="string">&#x27;bar&#x27;</span>, </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">barWidth</span>: <span class="number">10</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">itemStyle</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">//柱形图圆角，鼠标移上去效果，如果只是一个数字则说明四个参数全部设置为那么多</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">normal</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="comment">//柱形图圆角，初始化效果</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">barBorderRadius</span>:[<span class="number">15</span>, <span class="number">15</span>, <span class="number">0</span>, <span class="number">0</span>]</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125; </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  ]</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">name</span>: <span class="string">&#x27;Histogram&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">charsData</span>: [], <span class="comment">// 之后通过请求放数据，需要效果的可以先加进去看看</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">sideEchartsContainerHeight</span>: <span class="number">0</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">setHeight</span>(<span class="params">height</span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.<span class="property">sideEchartsContainerHeight</span> = height</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.<span class="title function_">getData</span>() <span class="comment">// 请求默认数据(无参数)</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.$nextTick(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="variable language_">this</span>.<span class="title function_">echartsInit</span>() <span class="comment">// 初始化echarts</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">echartsInit</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      myEcharts = echarts.<span class="title function_">init</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;hstogram&#x27;</span>)) <span class="comment">// 获取图表节点</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      myEcharts.<span class="title function_">setOption</span>(option)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="窗口缩放时图表内容自适应"><a href="#窗口缩放时图表内容自适应" class="headerlink" title="窗口缩放时图表内容自适应"></a>窗口缩放时图表内容自适应</h3><p>其实图表本身是通过canvas这个容器画出来的，canvas在画完后想要让内容自适应只有重绘了。好在Echarts官方提供了这个函数<code>resize()</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 监听实现</span></span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;resize&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// bubbleChart 是图表的实例 echartsInstance（调用过init函数后）</span></span><br><span class="line">  bubbleChart.<span class="title function_">resize</span>()</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 手动调用</span></span><br><span class="line"><span class="title function_">chartsResize</span>(<span class="params"></span>)&#123;</span><br><span class="line">  bubbleChart.<span class="title function_">resize</span>()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过全局设置监听，实现在窗口缩放时图表的重绘，当然这个监听对象加给谁都行，但是要<code>记得销毁</code>。</p><blockquote><p>本次项目中将每个图表都搞成了一个组件（维护起来比较方便），然后在组件里面写的监听。<br>其实感觉正确的写法应该是在父组件加监听，调6个子组件的<code>resize()</code>方法的，但是项目比较急，就没维护这块。</p></blockquote><h2 id="2-调整Echarts图表大小、位置、显示网格线"><a href="#2-调整Echarts图表大小、位置、显示网格线" class="headerlink" title="2.调整Echarts图表大小、位置、显示网格线"></a>2.调整Echarts图表大小、位置、显示网格线</h2><p>通过在<code>option</code>中设置<code>grid</code>的四个值即可：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">option = &#123;</span><br><span class="line">  <span class="attr">grid</span>: &#123;</span><br><span class="line">  <span class="attr">show</span>:<span class="literal">true</span>, <span class="comment">// 显示网格线</span></span><br><span class="line">    <span class="attr">top</span>:<span class="number">10</span>,</span><br><span class="line">    <span class="attr">left</span>:<span class="number">10</span>，</span><br><span class="line">    <span class="comment">// bottom:10,</span></span><br><span class="line">    <span class="comment">// right:10</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>grid</code>设置两个值即可确定图表的大小和位置。值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比，也可以是 <code>&#39;left&#39;, &#39;center&#39;, &#39;right&#39;</code>。如果 left 的值为<code>&#39;left&#39;, &#39;center&#39;, &#39;right&#39;</code>，组件会根据相应的位置<code>自动对齐</code>。</p><p>值得一提的是，<code>grid</code>中<code>containLabel</code>如果为<code>true</code>的话，<code>grid</code>决定的是包括了坐标轴标签在内的所有内容所形成的矩形的位置,常用于<code>防止标签溢出</code>的场景。为<code>false</code>，则只算由图标形成的区域。</p><blockquote><p>网格的背景只有在设置show:true时才会起作用，默认为透明</p></blockquote><h2 id="3-柱状图根据x坐标数量动态判断柱状图柱条的宽度、防止x坐标过多导致重叠"><a href="#3-柱状图根据x坐标数量动态判断柱状图柱条的宽度、防止x坐标过多导致重叠" class="headerlink" title="3.柱状图根据x坐标数量动态判断柱状图柱条的宽度、防止x坐标过多导致重叠"></a>3.柱状图根据x坐标数量动态判断柱状图柱条的宽度、防止x坐标过多导致重叠</h2><p>本次在写项目时，由于存在检索范围这一条件，导致x坐标的个数有时候很密集，有时候有很稀疏，所以就有了要根据x坐标的个数来动态改变柱状图柱子的宽度，来保证图表不会引起误解（1月份的柱子太宽占到了2月份的坐标）。</p><h3 id="宽度问题"><a href="#宽度问题" class="headerlink" title="宽度问题"></a>宽度问题</h3><p>图表的样式修改一般在<code>series</code>内的<code>itemStyle</code>里面，我们可以通过<code>barwidth</code>来修改柱状图柱条的宽度。</p><p>动态改变宽度的前提条件是我们需要知道数据量，也就是请求成功后的返回值。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// getBarGraphData 发出请求，.then表示请求成功后的回调函数，res为请求的返回值</span></span><br><span class="line"><span class="title function_">getBarGraphData</span>().<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">   <span class="keyword">let</span> baseLength = <span class="number">10</span></span><br><span class="line">   <span class="keyword">let</span> resLength = <span class="number">40</span> / res.<span class="property">data</span>.<span class="property">length</span> <span class="comment">// 此处应该是 (图表宽度 / &#123;请求返回的数据条数 * 每个x坐标展示的柱条个数&#125;)。结果可以稍微小点，便于更好的去展示。这里只是演示用，先写死了。</span></span><br><span class="line">   myEcharts.<span class="title function_">setOption</span>(&#123;</span><br><span class="line">     <span class="attr">series</span>: [</span><br><span class="line">       &#123; <span class="attr">type</span>: <span class="string">&#x27;bar&#x27;</span>, <span class="attr">barWidth</span>: <span class="title class_">Math</span>.<span class="title function_">min</span>(baseLength, resLength) &#125;,</span><br><span class="line">       &#123; <span class="attr">type</span>: <span class="string">&#x27;bar&#x27;</span>, <span class="attr">barWidth</span>: <span class="title class_">Math</span>.<span class="title function_">min</span>(baseLength, resLength) &#125;,</span><br><span class="line">       &#123; <span class="attr">type</span>: <span class="string">&#x27;bar&#x27;</span>, <span class="attr">barWidth</span>: <span class="title class_">Math</span>.<span class="title function_">min</span>(baseLength, resLength) &#125;</span><br><span class="line">     ],</span><br><span class="line">     <span class="attr">dataset</span>: &#123;</span><br><span class="line">       <span class="attr">dimensions</span>: [<span class="string">&#x27;product&#x27;</span>, <span class="string">&#x27;红&#x27;</span>, <span class="string">&#x27;黄&#x27;</span>, <span class="string">&#x27;蓝&#x27;</span>],</span><br><span class="line">       <span class="attr">source</span>: that.<span class="property">charsData</span></span><br><span class="line">     &#125;</span><br><span class="line">   &#125;)</span><br><span class="line"> &#125;)</span><br></pre></td></tr></table></figure><blockquote><p>初始化时可以不给数据，只写配置。在请求成功后通过<code>setOption</code>更新配置即可。</p></blockquote><h3 id="防止x坐标过多导致重叠"><a href="#防止x坐标过多导致重叠" class="headerlink" title="防止x坐标过多导致重叠"></a>防止x坐标过多导致重叠</h3><p>两种解决办法</p><ol><li>通过旋转一定的x坐标角度实现不重叠 <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">option = &#123;</span><br><span class="line"> <span class="attr">xAxis</span>: &#123;</span><br><span class="line"> <span class="attr">axisLabel</span>: &#123;</span><br><span class="line">      <span class="comment">//interval: 0, // 显示全部x坐标</span></span><br><span class="line">      <span class="attr">rotate</span>: <span class="number">35</span>,</span><br><span class="line">      <span class="attr">color</span>: <span class="string">&#x27;rgba(255, 255, 255,1)&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>显示部分x坐标，隔几个个x坐标显示一个（间隔的x坐标数目固定） <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">option = &#123;</span><br><span class="line"> <span class="attr">xAxis</span>: &#123;</span><br><span class="line"> <span class="attr">axisLabel</span>: &#123;</span><br><span class="line">      <span class="attr">interval</span>: <span class="number">1</span>, <span class="comment">// 是否显示全部x坐标</span></span><br><span class="line">      <span class="comment">// rotate: 35,</span></span><br><span class="line">      <span class="attr">color</span>: <span class="string">&#x27;rgba(255, 255, 255,1)&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="4-Echarts实现渐变色及更新数据后渐变消失的问题"><a href="#4-Echarts实现渐变色及更新数据后渐变消失的问题" class="headerlink" title="4.Echarts实现渐变色及更新数据后渐变消失的问题"></a>4.Echarts实现渐变色及更新数据后渐变消失的问题</h2><p>如果我们不给图表设置颜色，图表会默认从<code>[&#39;#5470c6&#39;, &#39;#91cc75&#39;, &#39;#fac858&#39;, &#39;#ee6666&#39;, &#39;#73c0de&#39;, &#39;#3ba272&#39;, &#39;#fc8452&#39;, &#39;#9a60b4&#39;, &#39;#ea7ccc&#39;]</code>中挑选颜色。但是单纯设置颜色有时候丑的一批，所以加上渐变效果会好很多</p><h3 id="线性渐变"><a href="#线性渐变" class="headerlink" title="线性渐变"></a>线性渐变</h3><p>不知道为什么官方文档上没搜到，Echarts内部是带有一个渐变色生成器的</p><blockquote><p><a href="https://ecomfe.github.io/zrender-doc/public/api.html#zrenderpath">更多关于echarts.graphic的细节请参阅</a></p></blockquote><p>就是不知道为啥，官方文档上没给出来这个东西。但其实是可以直接使用的，比如我希望柱状图的填充为渐变填充，我就可以这么写</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">option = &#123;</span><br><span class="line"></span><br><span class="line"><span class="attr">color</span>: [</span><br><span class="line"><span class="comment">// 第一个柱状图的颜色填充，参数依次对应 右/下/左/上 四个位置，1表示渐变色从正上方开始</span></span><br><span class="line"><span class="comment">// 第5个参数则是一个数组 用于配置颜色的渐变过程. 包含offset和color两个参数. offset的范围是0 ~ 1, 用于表示位置, color表示颜色</span></span><br><span class="line"><span class="keyword">new</span> echarts.<span class="property">graphic</span>.<span class="title class_">LinearGradient</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, [&#123;</span><br><span class="line">            <span class="attr">offset</span>: <span class="number">1</span>, <span class="comment">// 100%处的颜色</span></span><br><span class="line">            <span class="attr">color</span>: <span class="string">&#x27;#f00&#x27;</span></span><br><span class="line">        &#125;, &#123;</span><br><span class="line">            <span class="attr">offset</span>: <span class="number">0</span>, <span class="comment">// 0%处的颜色</span></span><br><span class="line">            <span class="attr">color</span>: <span class="string">&#x27;#f99&#x27;</span></span><br><span class="line">        &#125;]), </span><br><span class="line">        <span class="comment">// 第二个柱状图的颜色填充</span></span><br><span class="line">        <span class="keyword">new</span> echarts.<span class="property">graphic</span>.<span class="title class_">LinearGradient</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, [&#123;</span><br><span class="line">            <span class="attr">offset</span>: <span class="number">1</span>, <span class="comment">// 100%处的颜色</span></span><br><span class="line">            <span class="attr">color</span>: <span class="string">&#x27;rgb(249, 173, 21)&#x27;</span></span><br><span class="line">        &#125;, &#123;</span><br><span class="line">            <span class="attr">offset</span>: <span class="number">0</span>, <span class="comment">// 0%处的颜色</span></span><br><span class="line">            <span class="attr">color</span>: <span class="string">&#x27;rgb(255,255,153)&#x27;</span> </span><br><span class="line">        &#125;])</span><br><span class="line">        <span class="comment">// ... 以此类推</span></span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后官方上貌似是直接把这个new出来的对象搞成配置项了，下面是官方的写法：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">option = &#123;</span><br><span class="line"><span class="attr">series</span>:[&#123;</span><br><span class="line"><span class="attr">color</span>: &#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="string">&#x27;linear&#x27;</span>,</span><br><span class="line">    <span class="attr">x</span>: <span class="number">0</span>, <span class="comment">// 渐变起始位置横坐标。</span></span><br><span class="line">    <span class="attr">y</span>: <span class="number">0</span>, <span class="comment">// 渐变起始位置纵坐标。</span></span><br><span class="line">    <span class="attr">x2</span>: <span class="number">0</span>, <span class="comment">// 渐变终止位置横坐标。</span></span><br><span class="line">    <span class="attr">y2</span>: <span class="number">1</span>, <span class="comment">// 渐变终止位置纵坐标。</span></span><br><span class="line">    <span class="comment">// 组成渐变色的颜色。每个颜色包括 offset 与 color 属性，</span></span><br><span class="line">    <span class="comment">// 前者表示渐变位置（类型：number），后者表示具体的颜色（类型：string）</span></span><br><span class="line">    <span class="attr">colorStops</span>: [&#123; </span><br><span class="line">        <span class="attr">offset</span>: <span class="number">0</span>, <span class="attr">color</span>: <span class="string">&#x27;red&#x27;</span> <span class="comment">// 0% 处的颜色</span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line">        <span class="attr">offset</span>: <span class="number">1</span>, <span class="attr">color</span>: <span class="string">&#x27;blue&#x27;</span> <span class="comment">// 100% 处的颜色</span></span><br><span class="line">    &#125;],</span><br><span class="line">    <span class="comment">// 如果为 false，则 colorStops 取值范围是 0 到 1；</span></span><br><span class="line">    <span class="comment">// 如果为 true，则 x、 y、 x2、 y2、 colorStops 的坐标和元素是一致的</span></span><br><span class="line">    <span class="comment">// （也就是说，原先用 1 表示物体最右侧，这时需要用元素实际宽度表示最右侧）。</span></span><br><span class="line">    <span class="attr">global</span>: <span class="literal">false</span> <span class="comment">// 缺省为 false</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="不是很清楚哪个好点，但是感觉上应该是直接配置会好点，而不是-new-调用。-径向渐变new渐变色官方文档写法-重置数据渐变消失的问题本次项目中因为需要隔一段时间执行一遍动画（科技感，要动态），所以就写了个计时器清空数据再放进去。"><a href="#不是很清楚哪个好点，但是感觉上应该是直接配置会好点，而不是-new-调用。-径向渐变new渐变色官方文档写法-重置数据渐变消失的问题本次项目中因为需要隔一段时间执行一遍动画（科技感，要动态），所以就写了个计时器清空数据再放进去。" class="headerlink" title="不是很清楚哪个好点，但是感觉上应该是直接配置会好点，而不是 new 调用。### 径向渐变new渐变色官方文档写法### 重置数据渐变消失的问题本次项目中因为需要隔一段时间执行一遍动画（科技感，要动态），所以就写了个计时器清空数据再放进去。"></a>不是很清楚哪个好点，但是感觉上应该是直接配置会好点，而不是 new 调用。<br>### 径向渐变<br><strong>new渐变色</strong><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">option = &#123;</span><br><span class="line"><span class="attr">color</span>: [</span><br><span class="line"><span class="comment">// 第一个柱状图的颜色填充，参数依次对应 渐变中心位置横坐标/渐变中心位置纵坐标/渐变半径，默认值为0.5</span></span><br><span class="line"><span class="comment">// 第5个参数则是一个数组 用于配置颜色的渐变过程. 包含offset和color两个参数. offset的范围是0 ~ 1, 用于表示位置, color表示颜色</span></span><br><span class="line"><span class="keyword">new</span> echarts.<span class="property">graphic</span>.<span class="title class_">RadialGradient</span>(<span class="number">0.5</span>, <span class="number">0.5</span>, <span class="number">0.5</span>, [&#123; <span class="comment">// ！！！！ 此处是RadialGradient 而不是 LinearGradient</span></span><br><span class="line">            <span class="attr">offset</span>: <span class="number">1</span>, <span class="comment">// 100%处的颜色</span></span><br><span class="line">            <span class="attr">color</span>: <span class="string">&#x27;#f00&#x27;</span></span><br><span class="line">        &#125;, &#123;</span><br><span class="line">            <span class="attr">offset</span>: <span class="number">0</span>, <span class="comment">// 0%处的颜色</span></span><br><span class="line">            <span class="attr">color</span>: <span class="string">&#x27;#f99&#x27;</span></span><br><span class="line">        &#125;]), </span><br><span class="line">        <span class="comment">// 第二个柱状图的颜色填充</span></span><br><span class="line">        <span class="keyword">new</span> echarts.<span class="property">graphic</span>.<span class="title class_">LinearGradient</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, [&#123;</span><br><span class="line">            <span class="attr">offset</span>: <span class="number">1</span>, <span class="comment">// 100%处的颜色</span></span><br><span class="line">            <span class="attr">color</span>: <span class="string">&#x27;rgb(249, 173, 21)&#x27;</span></span><br><span class="line">        &#125;, &#123;</span><br><span class="line">            <span class="attr">offset</span>: <span class="number">0</span>, <span class="comment">// 0%处的颜色</span></span><br><span class="line">            <span class="attr">color</span>: <span class="string">&#x27;rgb(255,255,153)&#x27;</span> </span><br><span class="line">        &#125;])</span><br><span class="line">        <span class="comment">// ... 以此类推</span></span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><strong>官方文档写法</strong><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">option = &#123;</span><br><span class="line"><span class="attr">series</span>:[&#123;</span><br><span class="line"><span class="attr">color</span>: &#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="string">&#x27;radial&#x27;</span>, <span class="comment">// ！！！！！ 变成了radial</span></span><br><span class="line"><span class="attr">x</span>: <span class="number">0.5</span>,</span><br><span class="line"><span class="attr">y</span>: <span class="number">0.5</span>,</span><br><span class="line"><span class="attr">r</span>: <span class="number">0.5</span>,</span><br><span class="line">    <span class="comment">// 组成渐变色的颜色。每个颜色包括 offset 与 color 属性，</span></span><br><span class="line">    <span class="comment">// 前者表示渐变位置（类型：number），后者表示具体的颜色（类型：string）</span></span><br><span class="line">    <span class="attr">colorStops</span>: [&#123; </span><br><span class="line">        <span class="attr">offset</span>: <span class="number">0</span>, <span class="attr">color</span>: <span class="string">&#x27;red&#x27;</span> <span class="comment">// 0% 处的颜色</span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line">        <span class="attr">offset</span>: <span class="number">1</span>, <span class="attr">color</span>: <span class="string">&#x27;blue&#x27;</span> <span class="comment">// 100% 处的颜色</span></span><br><span class="line">    &#125;],</span><br><span class="line">    <span class="comment">// 如果为 false，则 colorStops 取值范围是 0 到 1；</span></span><br><span class="line">    <span class="comment">// 如果为 true，则 x、 y、 x2、 y2、 colorStops 的坐标和元素是一致的</span></span><br><span class="line">    <span class="comment">// （也就是说，原先用 1 表示物体最右侧，这时需要用元素实际宽度表示最右侧）。</span></span><br><span class="line">    <span class="attr">global</span>: <span class="literal">false</span> <span class="comment">// 缺省为 false</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>### 重置数据渐变消失的问题<br>本次项目中因为需要隔一段时间执行一遍动画（科技感，要动态），所以就写了个计时器清空数据再放进去。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">timer2 =  <span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    myEcharts.<span class="title function_">setOption</span>(&#123; <span class="comment">// 展示/更新 数据</span></span><br><span class="line">      <span class="attr">series</span>:[</span><br><span class="line">        &#123; <span class="attr">data</span>: [] &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;)</span><br><span class="line">    myEcharts.<span class="title function_">setOption</span>(&#123; <span class="comment">// 展示/更新 数据</span></span><br><span class="line">     <span class="attr">series</span>:[</span><br><span class="line">        &#123; <span class="attr">data</span>: that.<span class="property">charsData</span> &#125;</span><br><span class="line">     ]</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;, <span class="number">6000</span>)</span><br></pre></td></tr></table></figure></h2><p>上面这样写在其他图（柱状、饼、漏斗、气泡）里面都是可以正常出来重新加载的过度动画的。但是到了<code>折线图里却没了反应</code>。<br>折线图只有在<code>第一次执行setOption时才有过度动画</code>，之后就没有了，思来想去没想出来啥问题。就避开了这个问题</p><p>这里使用了<code>myEcharts.clear()</code>方法清除了当前实例里面的内容(<code>不是销毁</code>)，之后通过重新<code>setOption</code>来放入配置和数据实现动画加载。</p><p>然后问题来了，<code>重新加载的图表走的是默认颜色！即使在新的配置里面写渐变色也还是没有起作用</code>人直接傻了，想不通为啥。</p><p><strong>解决办法</strong><br>看了看官方文档，发现<code>setOption</code>接收的不止一个参数，他有一个<code>notMerge</code>这个参数，表示了<code>是否不跟之前设置的 option 进行合并。默认为 false。</code>改成<code>true</code>后解决了这个问题。</p><blockquote><p>具体原因还是没搞明白。按理说默认合并也会和数据一样覆盖之前的数据啊，猜测是因为没有用官方写的渐变而是用了new实现，有待测试。</p></blockquote><h2 id="5-Echarts中data和dataset的含义、Echarts数据返回格式"><a href="#5-Echarts中data和dataset的含义、Echarts数据返回格式" class="headerlink" title="5.Echarts中data和dataset的含义、Echarts数据返回格式"></a>5.Echarts中data和dataset的含义、Echarts数据返回格式</h2><h3 id="Echarts中data和dataset的含义"><a href="#Echarts中data和dataset的含义" class="headerlink" title="Echarts中data和dataset的含义"></a>Echarts中data和dataset的含义</h3><p>乍一看下data和dataSet好像没什么区别，只是一个需要切割数据到每个series里，一个可以统一使用。但其实在一些特殊情况下，是不支持使用dataSet的。</p><p>举个例子：<code>使用 dataset 同时使用 appendData</code>，只支持系列使用自己的 series.data 时使用 appendData。</p><h4 id="Data"><a href="#Data" class="headerlink" title="Data"></a>Data</h4><p>没什么好说的，给那个系列哪个系列就用这组数据。</p><p><strong>优点是</strong></p><ul><li><code>直观易理解</code></li><li><code>适于对一些特殊图表类型进行一定的数据类型定制</code>。</li></ul><p><strong>缺点是</strong></p><ul><li>为匹配这种数据输入形式，<code>常需要有数据处理的过程,分割到不同系列</code></li><li>此外，<code>不利于多个系列共享一份数据</code>，也<code>不利于基于原始数据进行图表类型、系列的映射安排</code>。</li></ul><h4 id="dataset"><a href="#dataset" class="headerlink" title="dataset"></a>dataset</h4><p>相对于data来说，最直观的就是我们不需要做分割数据的处理。</p><p><strong>优点是</strong></p><ul><li><code>能够贴近这样的数据可视化常见思维方式</code>：(I) 提供数据，(II) 指定数据到视觉的映射，从而形成图表。</li><li><code>数据和其他配置可以被分离开来</code>。数据常变，其他配置常不变。分开易于分别管理。</li><li><code>数据可以被多个系列或者组件复用</code>，对于大数据量的场景，不必为每个系列创建一份数据。</li><li><code>支持更多的数据的常用格式</code>，例如二维数组、对象数组等，一定程度上避免使用者为了数据格式而进行转换。</li></ul><p><strong>缺点是</strong></p><ul><li><code>可能需要对dataset进行映射</code>，要理解<code>维度和映射</code>的意思。</li><li><code>在部分场景下不适用，比如上面的例子。</code></li></ul><blockquote><p>根据之前的学习来看，应该是在数据量特别大的时候会用到一些特定的方法，在使用这些方法时不支持与dataset一起使用。假如我们数据量不是很大的情况下，还是dataset会方便好用一点</p></blockquote><h3 id="Echarts数据返回格式"><a href="#Echarts数据返回格式" class="headerlink" title="Echarts数据返回格式"></a>Echarts数据返回格式</h3><p>data就不用说了吧，主要说下dataset</p><p>dataset常见的数据格式有下面两种</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">dataset</span>: &#123;</span><br><span class="line"><span class="comment">// 提供一份数据。</span></span><br><span class="line"><span class="attr">source</span>: [</span><br><span class="line">     [<span class="string">&#x27;product&#x27;</span>, <span class="string">&#x27;2015&#x27;</span>, <span class="string">&#x27;2016&#x27;</span>, <span class="string">&#x27;2017&#x27;</span>],</span><br><span class="line">     [<span class="string">&#x27;Matcha Latte&#x27;</span>, <span class="number">43.3</span>, <span class="number">85.8</span>, <span class="number">93.7</span>],</span><br><span class="line">     [<span class="string">&#x27;Milk Tea&#x27;</span>, <span class="number">83.1</span>, <span class="number">73.4</span>, <span class="number">55.1</span>],</span><br><span class="line">     [<span class="string">&#x27;Cheese Cocoa&#x27;</span>, <span class="number">86.4</span>, <span class="number">65.2</span>, <span class="number">82.5</span>],</span><br><span class="line">     [<span class="string">&#x27;Walnut Brownie&#x27;</span>, <span class="number">72.4</span>, <span class="number">53.9</span>, <span class="number">39.1</span>]</span><br><span class="line"> ]</span><br><span class="line">&#125;</span><br><span class="line"><span class="attr">dataset</span>: &#123;</span><br><span class="line">     <span class="comment">// 用 dimensions 指定了维度的顺序。直角坐标系中，</span></span><br><span class="line">     <span class="comment">// 默认把第一个维度映射到 X 轴上，第二个维度映射到 Y 轴上。</span></span><br><span class="line">     <span class="comment">// 如果不指定 dimensions，也可以通过指定 series.encode完成映射</span></span><br><span class="line">     <span class="attr">dimensions</span>: [<span class="string">&#x27;product&#x27;</span>, <span class="string">&#x27;2015&#x27;</span>, <span class="string">&#x27;2016&#x27;</span>, <span class="string">&#x27;2017&#x27;</span>],</span><br><span class="line">     <span class="attr">source</span>: [</span><br><span class="line">         &#123;<span class="attr">product</span>: <span class="string">&#x27;Matcha Latte&#x27;</span>, <span class="string">&#x27;2015&#x27;</span>: <span class="number">43.3</span>, <span class="string">&#x27;2016&#x27;</span>: <span class="number">85.8</span>, <span class="string">&#x27;2017&#x27;</span>: <span class="number">93.7</span>&#125;,</span><br><span class="line">         &#123;<span class="attr">product</span>: <span class="string">&#x27;Milk Tea&#x27;</span>, <span class="string">&#x27;2015&#x27;</span>: <span class="number">83.1</span>, <span class="string">&#x27;2016&#x27;</span>: <span class="number">73.4</span>, <span class="string">&#x27;2017&#x27;</span>: <span class="number">55.1</span>&#125;,</span><br><span class="line">         &#123;<span class="attr">product</span>: <span class="string">&#x27;Cheese Cocoa&#x27;</span>, <span class="string">&#x27;2015&#x27;</span>: <span class="number">86.4</span>, <span class="string">&#x27;2016&#x27;</span>: <span class="number">65.2</span>, <span class="string">&#x27;2017&#x27;</span>: <span class="number">82.5</span>&#125;,</span><br><span class="line">         &#123;<span class="attr">product</span>: <span class="string">&#x27;Walnut Brownie&#x27;</span>, <span class="string">&#x27;2015&#x27;</span>: <span class="number">72.4</span>, <span class="string">&#x27;2016&#x27;</span>: <span class="number">53.9</span>, <span class="string">&#x27;2017&#x27;</span>: <span class="number">39.1</span>&#125;</span><br><span class="line">     ]</span><br><span class="line"> &#125;,</span><br></pre></td></tr></table></figure><h4 id="维度和映射"><a href="#维度和映射" class="headerlink" title="维度和映射"></a>维度和映射</h4><h5 id="维度"><a href="#维度" class="headerlink" title="维度"></a>维度</h5><p>显然，相对于第一种来说，<code>第二种可读性更高一点</code>。但是<code>第一种的灵活性更高</code>。</p><p>我们可以<code>把维度理解为横纵两个方向</code>（不考虑3d图，这个没了解呢哈哈）。</p><p>通过一定的配置，我们能够</p><ul><li>将横向维度的数据映射到x轴上，纵向的数据叫做横向维度的数据项</li><li>将纵向维度的数据映射到x轴上，横向的数据叫做纵向维度的数据项</li></ul><p>用第一个例子来帮助理解下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">dataset</span>: &#123;</span><br><span class="line"><span class="comment">// 提供一份数据。</span></span><br><span class="line"><span class="comment">// 横向维度就是每一行，纵向维度就是每一列。</span></span><br><span class="line"><span class="comment">// 在此种数据格式下，我们可以轻松地理解维度的含义。</span></span><br><span class="line"><span class="comment">// 我们可以将这份数据看做一个坐标系，第一列和第一行可以是xy轴(任意)</span></span><br><span class="line"><span class="comment">// 后面的数据对应的是x轴和y轴所对应的值</span></span><br><span class="line"><span class="comment">// 比如我把Matcha Latte当为x轴，那么43.3的意义是Matcha Latte在2015年的值</span></span><br><span class="line"><span class="comment">// 或者我把2015当为x轴，那么43.3的意义是在2015年Matcha Latte的值</span></span><br><span class="line"><span class="attr">source</span>: [</span><br><span class="line">     [<span class="string">&#x27;product&#x27;</span>, <span class="string">&#x27;2015&#x27;</span>, <span class="string">&#x27;2016&#x27;</span>, <span class="string">&#x27;2017&#x27;</span>],</span><br><span class="line">     [<span class="string">&#x27;Matcha Latte&#x27;</span>, <span class="number">43.3</span>, <span class="number">85.8</span>, <span class="number">93.7</span>],</span><br><span class="line">     [<span class="string">&#x27;Milk Tea&#x27;</span>, <span class="number">83.1</span>, <span class="number">73.4</span>, <span class="number">55.1</span>],</span><br><span class="line">     [<span class="string">&#x27;Cheese Cocoa&#x27;</span>, <span class="number">86.4</span>, <span class="number">65.2</span>, <span class="number">82.5</span>],</span><br><span class="line">     [<span class="string">&#x27;Walnut Brownie&#x27;</span>, <span class="number">72.4</span>, <span class="number">53.9</span>, <span class="number">39.1</span>]</span><br><span class="line"> ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>要实现上述更改xy轴的效果，可以使用 <code>seriesLayoutBy</code> 配置项，改变图表对于行列的理解。<code>seriesLayoutBy</code> 可取值：</p><ul><li><code>&#39;column&#39;</code>: 默认值。系列被安放到 dataset 的列上面。</li><li><code>&#39;row&#39;</code>: 系列被安放到 dataset 的行上面。<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">option = &#123;</span><br><span class="line"><span class="attr">dataset</span>:[</span><br><span class="line"><span class="attr">source</span>: [</span><br><span class="line">     [<span class="string">&#x27;product&#x27;</span>, <span class="string">&#x27;2015&#x27;</span>, <span class="string">&#x27;2016&#x27;</span>, <span class="string">&#x27;2017&#x27;</span>],</span><br><span class="line">     [<span class="string">&#x27;Matcha Latte&#x27;</span>, <span class="number">43.3</span>, <span class="number">85.8</span>, <span class="number">93.7</span>],</span><br><span class="line">     [<span class="string">&#x27;Milk Tea&#x27;</span>, <span class="number">83.1</span>, <span class="number">73.4</span>, <span class="number">55.1</span>],</span><br><span class="line">     [<span class="string">&#x27;Cheese Cocoa&#x27;</span>, <span class="number">86.4</span>, <span class="number">65.2</span>, <span class="number">82.5</span>],</span><br><span class="line">     [<span class="string">&#x27;Walnut Brownie&#x27;</span>, <span class="number">72.4</span>, <span class="number">53.9</span>, <span class="number">39.1</span>]</span><br><span class="line"> ]</span><br><span class="line">],</span><br><span class="line"><span class="attr">xAxis</span>: [</span><br><span class="line">        &#123;<span class="attr">type</span>: <span class="string">&#x27;category&#x27;</span>, <span class="attr">gridIndex</span>: <span class="number">0</span>&#125;,</span><br><span class="line">        &#123;<span class="attr">type</span>: <span class="string">&#x27;category&#x27;</span>, <span class="attr">gridIndex</span>: <span class="number">1</span>&#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">yAxis</span>: [</span><br><span class="line">        &#123;<span class="attr">gridIndex</span>: <span class="number">0</span>&#125;,</span><br><span class="line">        &#123;<span class="attr">gridIndex</span>: <span class="number">1</span>&#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">grid</span>: [</span><br><span class="line">        &#123;<span class="attr">bottom</span>: <span class="string">&#x27;55%&#x27;</span>&#125;,</span><br><span class="line">        &#123;<span class="attr">top</span>: <span class="string">&#x27;55%&#x27;</span>&#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">series</span>: [</span><br><span class="line">        <span class="comment">// 这几个系列会在第一个直角坐标系中，每个系列对应到 dataset 的每一行。</span></span><br><span class="line">        &#123;<span class="attr">type</span>: <span class="string">&#x27;bar&#x27;</span>, <span class="attr">seriesLayoutBy</span>: <span class="string">&#x27;row&#x27;</span>&#125;,</span><br><span class="line">        &#123;<span class="attr">type</span>: <span class="string">&#x27;bar&#x27;</span>, <span class="attr">seriesLayoutBy</span>: <span class="string">&#x27;row&#x27;</span>&#125;,</span><br><span class="line">        &#123;<span class="attr">type</span>: <span class="string">&#x27;bar&#x27;</span>, <span class="attr">seriesLayoutBy</span>: <span class="string">&#x27;row&#x27;</span>&#125;,</span><br><span class="line">        <span class="comment">// 这几个系列会在第二个直角坐标系中，每个系列对应到 dataset 的每一列。</span></span><br><span class="line">        &#123;<span class="attr">type</span>: <span class="string">&#x27;bar&#x27;</span>, <span class="attr">xAxisIndex</span>: <span class="number">1</span>, <span class="attr">yAxisIndex</span>: <span class="number">1</span>&#125;,</span><br><span class="line">        &#123;<span class="attr">type</span>: <span class="string">&#x27;bar&#x27;</span>, <span class="attr">xAxisIndex</span>: <span class="number">1</span>, <span class="attr">yAxisIndex</span>: <span class="number">1</span>&#125;,</span><br><span class="line">        &#123;<span class="attr">type</span>: <span class="string">&#x27;bar&#x27;</span>, <span class="attr">xAxisIndex</span>: <span class="number">1</span>, <span class="attr">yAxisIndex</span>: <span class="number">1</span>&#125;,</span><br><span class="line">        &#123;<span class="attr">type</span>: <span class="string">&#x27;bar&#x27;</span>, <span class="attr">xAxisIndex</span>: <span class="number">1</span>, <span class="attr">yAxisIndex</span>: <span class="number">1</span>&#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h5 id="映射"><a href="#映射" class="headerlink" title="映射"></a>映射</h5><p>一般通过<code>series.encode</code>来配置映射，效果和上面说的差不多，但是<code>能够指定某列去映射</code>，写个例子大家去官网上瞅瞅吧</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> option = &#123;</span><br><span class="line">    <span class="attr">dataset</span>: &#123;</span><br><span class="line">        <span class="attr">source</span>: [</span><br><span class="line">            [<span class="string">&#x27;score&#x27;</span>, <span class="string">&#x27;amount&#x27;</span>, <span class="string">&#x27;product&#x27;</span>],</span><br><span class="line">            [<span class="number">89.3</span>, <span class="number">58212</span>, <span class="string">&#x27;Matcha Latte&#x27;</span>],</span><br><span class="line">            [<span class="number">57.1</span>, <span class="number">78254</span>, <span class="string">&#x27;Milk Tea&#x27;</span>],</span><br><span class="line">            [<span class="number">74.4</span>, <span class="number">41032</span>, <span class="string">&#x27;Cheese Cocoa&#x27;</span>],</span><br><span class="line">            [<span class="number">50.1</span>, <span class="number">12755</span>, <span class="string">&#x27;Cheese Brownie&#x27;</span>],</span><br><span class="line">            [<span class="number">89.7</span>, <span class="number">20145</span>, <span class="string">&#x27;Matcha Cocoa&#x27;</span>],</span><br><span class="line">            [<span class="number">68.1</span>, <span class="number">79146</span>, <span class="string">&#x27;Tea&#x27;</span>],</span><br><span class="line">            [<span class="number">19.6</span>, <span class="number">91852</span>, <span class="string">&#x27;Orange Juice&#x27;</span>],</span><br><span class="line">            [<span class="number">10.6</span>, <span class="number">101852</span>, <span class="string">&#x27;Lemon Juice&#x27;</span>],</span><br><span class="line">            [<span class="number">32.7</span>, <span class="number">20112</span>, <span class="string">&#x27;Walnut Brownie&#x27;</span>]</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">xAxis</span>: &#123;&#125;,</span><br><span class="line">    <span class="attr">yAxis</span>: &#123;<span class="attr">type</span>: <span class="string">&#x27;category&#x27;</span>&#125;,</span><br><span class="line">    <span class="attr">series</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;bar&#x27;</span>,</span><br><span class="line">            <span class="attr">encode</span>: &#123;</span><br><span class="line">                <span class="comment">// 将 &quot;amount&quot; 列映射到 X 轴。</span></span><br><span class="line">                <span class="attr">x</span>: <span class="string">&#x27;amount&#x27;</span>,</span><br><span class="line">                <span class="comment">// 将 &quot;product&quot; 列映射到 Y 轴。</span></span><br><span class="line">                <span class="attr">y</span>: <span class="string">&#x27;product&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;本次项目中负责了一个使用Echarts做的页面，涉及的图表类型有&lt;br&gt; &lt;strong&gt;柱状图(横竖两种)、折线图、气泡图、漏斗图、饼图&lt;/strong&gt;&lt;br&gt;期间也遇到了不少问题，但是大部分的问题都是可以通过Echarts官方文档上找到解决办法的。下面记录一下问题及解决办法和Echarts的一些学习、码字心得。&lt;/p&gt;</summary>
    
    
    
    <category term="问题解决方案" scheme="http://example.com/categories/%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    
    
    <category term="Echarts" scheme="http://example.com/tags/Echarts/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2022/12/04/GitHubActions%E5%AE%89%E8%A3%85%E4%BE%9D%E8%B5%96%E5%87%BA%E9%94%99/"/>
    <id>http://example.com/2022/12/04/GitHubActions%E5%AE%89%E8%A3%85%E4%BE%9D%E8%B5%96%E5%87%BA%E9%94%99/</id>
    <published>2022-12-04T06:18:22.228Z</published>
    <updated>2022-12-04T06:18:22.228Z</updated>
    
    <content type="html"><![CDATA[<h1 id="GitHubActions安装依赖失败：code-EBADPLATFORM"><a href="#GitHubActions安装依赖失败：code-EBADPLATFORM" class="headerlink" title="GitHubActions安装依赖失败：code EBADPLATFORM"></a>GitHubActions安装依赖失败：code EBADPLATFORM</h1><p>解决：删除package-lock.json</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;GitHubActions安装依赖失败：code-EBADPLATFORM&quot;&gt;&lt;a href=&quot;#GitHubActions安装依赖失败：code-EBADPLATFORM&quot; class=&quot;headerlink&quot; title=&quot;GitHubActions安装依赖失</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Api IntersectionObserver</title>
    <link href="http://example.com/2022/12/04/IntersectionObserverApi/"/>
    <id>http://example.com/2022/12/04/IntersectionObserverApi/</id>
    <published>2022-12-04T06:18:22.228Z</published>
    <updated>2022-12-04T06:18:22.228Z</updated>
    
    <content type="html"><![CDATA[<p>针对滚动监听的一个小有意思的api</p><span id="more"></span><h1 id="IntersectionObserver"><a href="#IntersectionObserver" class="headerlink" title="IntersectionObserver"></a>IntersectionObserver</h1><p>IntersectionObserver API 是用来监视某个元素是否滚动进了浏览器窗口的可视区域（视口）或者滚动进了它的某个祖先元素的可视区域内。它的主要功能是用来实现延迟加载和展现量统计。</p><p>![img](02 IntersectionObserver.assets&#x2F;116671-20160605131111086-768036414.png)</p><p>它提供了一种异步观察目标元素与其祖先元素或顶级文档视窗(<a href="https://developer.mozilla.org/zh-CN/docs/Glossary/Viewport">viewport</a>)交叉状态的方法。祖先元素与视窗(<a href="https://developer.mozilla.org/zh-CN/docs/Glossary/Viewport">viewport</a>)被称为<strong>根(root)</strong></p><h1 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="title class_">IntersectionObserver</span>(callback, options)</span><br></pre></td></tr></table></figure><p>callback 是个必选参数，当有相交发生时，浏览器便会调用它，后面会详细介绍；</p><p>options 整个参数对象以及它的三个属性都是可选的：</p><p><strong>root</strong></p><p>根元素，它有很多后代元素，想要做的就是判断它的某个后代元素是否滚动进了自己的可视区域范围。这个 root 参数就是用来指定根元素的，默认值是 null。即浏览器窗口。</p><p>需要注意的一点是，如果 root 不是 null，那么相交区域就不一定在视口内了，因为 root 和 target 的相交也可能发生在视口下方</p><p><strong>threshold</strong></p><p>当目标元素和根元素相交时，用相交的面积除以目标元素的面积会得到一个 0 到 1（0% 到 100%）的数值</p><p>![img](02 IntersectionObserver.assets&#x2F;116671-20160608175232261-11872166.png)</p><p>IntersectionObserver API 的基本工作原理就是：<strong>当目标元素和根元素相交的面积占目标元素面积的百分比到达或跨过某些指定的临界值时就会触发回调函数</strong>。<strong>threshold</strong> 参数就是用来指定那个临界值的，默认值是 0，表示俩元素刚刚挨上就触发回调。有效的临界值可以是在 0 到 1 闭区间内的任意数值，比如 0.5 表示当相交面积占目标元素面积的一半时触发回调。而且可以指定多个临界值，用数组形式，比如 [0, 0.5, 1]，表示在两个矩形开始相交，相交一半，完全相交这三个时刻都要触发一次回调函数。如果你传了个空数组，它会给你自动插入 0，变成 [0]，也等效于默认值 0。</p><p><strong>rootMagin</strong></p><p>可以给根元素添加一个假想的 margin，从而对真实的根元素区域进行缩放。比如当 root 为 null 时设置 rootMargin: “100px”，实际的根元素矩形四条边都会被放大 100px</p><p>![img](02 IntersectionObserver.assets&#x2F;116671-20160606131900605-2121804167.png)</p><h2 id="实例方法"><a href="#实例方法" class="headerlink" title="实例方法"></a>实例方法</h2><h4 id="observe"><a href="#observe" class="headerlink" title="observe()"></a>observe()</h4><p>观察某个目标元素，一个观察者实例可以观察任意多个目标元素。注意，这不是事件，没有冒泡。</p><h4 id="unobserve"><a href="#unobserve" class="headerlink" title="unobserve()"></a>unobserve()</h4><p>取消对某个目标元素的观察，延迟加载通常都是一次性的，observe 的回调里应该直接调用 unobserve() 那个元素.</p><h4 id="disconnect"><a href="#disconnect" class="headerlink" title="disconnect()"></a>disconnect()</h4><p>取消观察所有已观察的目标元素</p><h4 id="takeRecords"><a href="#takeRecords" class="headerlink" title="takeRecords()"></a>takeRecords()</h4><blockquote><p>使用案例很少，不过多说明</p></blockquote><blockquote><p>理解这个方法需要讲点底层的东西：在浏览器内部，当一个观察者实例在某一时刻观察到了若干个相交动作时，它不会立即执行回调，它会调用 window.requestIdleCallback() （目前只有 Chrome 支持）来异步的执行我们指定的回调函数，而且还规定了最大的延迟时间是 100 毫秒，相当于浏览器会执行</p></blockquote><h1 id="回调函数"><a href="#回调函数" class="headerlink" title="回调函数"></a>回调函数</h1><p>回调函数共有两个参数，第二个参数就是观察者实例本身，一般没用，因为实例通常我们已经赋值给一个变量了，而且回调函数里的 this 也是那个实例。</p><p>第一个参数是个包含有若干个 IntersectionObserverEntry 对象的数组。每个 IntersectionObserverEntry 对象都代表一次相交，它的属性们就包含了那次相交的各种信息。entries 数组中 IntersectionObserverEntry 对象的排列顺序是按照它所属的目标元素当初被 observe() 的顺序排列的。</p><p>entries 数组中的实例有如下属性</p><p><strong>time</strong></p><p>相交发生时距离页面打开时的毫秒数（有小数），也就是相交发生时 performance.now() 的返回值，比如 60000.560000000005，表示是在页面打开后大概 1 分钟发生的相交。在回调函数里用 performance.now() 减去这个值，就能算出回调函数被 requestIdleCallback 延迟了多少毫秒：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> observer = <span class="keyword">new</span> <span class="title class_">IntersectionObserver</span>(<span class="function">(<span class="params">[entry]</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">textContent</span> += <span class="string">`相交发生在 <span class="subst">$&#123;performance.now() - entry.time&#125;</span> 毫秒前`</span></span></span><br><span class="line"><span class="language-javascript">  &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  observer.<span class="title function_">observe</span>(<span class="variable language_">document</span>.<span class="property">documentElement</span>)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>target</strong></p><p>相交发生时的目标元素，因为一个根元素可以观察多个目标元素，所以这个 target 不一定是哪个元素</p><p><strong>rootBounds</strong></p><p>一个对象值，表示发生相交时根元素可见区域的矩形信息，像这样</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;top&quot;</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="string">&quot;bottom&quot;</span>: <span class="number">600</span>,</span><br><span class="line">  <span class="string">&quot;left&quot;</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="string">&quot;right&quot;</span>: <span class="number">1280</span>,</span><br><span class="line">  <span class="string">&quot;width&quot;</span>: <span class="number">1280</span>,</span><br><span class="line">  <span class="string">&quot;height&quot;</span>: <span class="number">600</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>boundingClientRect</strong></p><p>发生相交时目标元素的矩形信息，等价于 target.getBoundingClientRect()</p><p><strong>intersectionRect</strong></p><p>根元素和目标元素相交区域的矩形信息。</p><p><strong>intersectionRatio</strong></p><p>0 到 1 的数值，表示相交区域占目标元素区域的百分比，也就是 intersectionRect 的面积除以 boundingClientRect 的面积得到的值</p><h1 id="实用场景"><a href="#实用场景" class="headerlink" title="实用场景"></a>实用场景</h1><h2 id="惰性加载（lazy-load）"><a href="#惰性加载（lazy-load）" class="headerlink" title="惰性加载（lazy load）"></a>惰性加载（lazy load）</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">query</span>(<span class="params">selector</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">Array</span>.<span class="title function_">from</span>(<span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(selector));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> observer = <span class="keyword">new</span> <span class="title class_">IntersectionObserver</span>(</span><br><span class="line">  <span class="keyword">function</span>(<span class="params">changes</span>) &#123;</span><br><span class="line">    changes.<span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params">change</span>) &#123;</span><br><span class="line">      <span class="keyword">var</span> container = change.<span class="property">target</span>;</span><br><span class="line">      <span class="keyword">var</span> content = container.<span class="title function_">querySelector</span>(<span class="string">&#x27;template&#x27;</span>).<span class="property">content</span>;</span><br><span class="line">      container.<span class="title function_">appendChild</span>(content);</span><br><span class="line">      observer.<span class="title function_">unobserve</span>(container);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="title function_">query</span>(<span class="string">&#x27;.lazy-loaded&#x27;</span>).<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">item</span>) &#123;</span><br><span class="line">  observer.<span class="title function_">observe</span>(item);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="无限滚动（infinite-scroll）"><a href="#无限滚动（infinite-scroll）" class="headerlink" title="无限滚动（infinite scroll）"></a>无限滚动（infinite scroll）</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> intersectionObserver = <span class="keyword">new</span> <span class="title class_">IntersectionObserver</span>(</span><br><span class="line">  <span class="keyword">function</span> (<span class="params">entries</span>) &#123;</span><br><span class="line">    <span class="comment">// 如果不可见，就返回</span></span><br><span class="line">    <span class="keyword">if</span> (entries[<span class="number">0</span>].<span class="property">intersectionRatio</span> &lt;= <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">    <span class="title function_">loadItems</span>(<span class="number">10</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Loaded new items&#x27;</span>);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 开始观察</span></span><br><span class="line">intersectionObserver.<span class="title function_">observe</span>(</span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.scrollerFooter&#x27;</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;针对滚动监听的一个小有意思的api&lt;/p&gt;</summary>
    
    
    
    <category term="前端" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="JavaScript" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF/JavaScript/"/>
    
    
    <category term="Api" scheme="http://example.com/tags/Api/"/>
    
    <category term="懒加载" scheme="http://example.com/tags/%E6%87%92%E5%8A%A0%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title>Vue2底层执行逻辑</title>
    <link href="http://example.com/2022/11/22/Vue2%E5%BA%95%E5%B1%82%E6%89%A7%E8%A1%8C%E9%80%BB%E8%BE%91/"/>
    <id>http://example.com/2022/11/22/Vue2%E5%BA%95%E5%B1%82%E6%89%A7%E8%A1%8C%E9%80%BB%E8%BE%91/</id>
    <published>2022-11-22T13:15:38.000Z</published>
    <updated>2022-12-04T06:18:22.232Z</updated>
    
    <content type="html"><![CDATA[<p>梳理Vue2底层执行流程</p><span id="more"></span><p>Vue里面有几个比较核心的部分：全局Api的实现，MVVM、双向绑定的实现，控制视图渲染的Watcher和异步更新队列（nexTick）<br>（TODO：虚拟DOM是在什么时候加入的，生命周期函数何时执行）</p><h1 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h1><p>Vue在初始化的时候，会进行一系列的混入，包括</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Vue原型绑定_init方法</span></span><br><span class="line"><span class="title function_">initMixin</span>(<span class="title class_">Vue</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 处理和数据相关的api和属性</span></span><br><span class="line"><span class="comment">*  原型绑定$data、对数据做代理，指向_data</span></span><br><span class="line"><span class="comment">*  原型绑定$props、对数据代理，指向_props</span></span><br><span class="line"><span class="comment">*  原型绑定$set、$watch、$delete</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title function_">stateMixin</span>(<span class="title class_">Vue</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 处理事件相关的api</span></span><br><span class="line"><span class="comment">*  原型绑定$on、$off、$once、$emit</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title function_">eventsMixin</span>(<span class="title class_">Vue</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 原型绑定生命周期相关的api</span></span><br><span class="line"><span class="comment">*  原型绑定$forceUpdate</span></span><br><span class="line"><span class="comment">*  原型绑定_update</span></span><br><span class="line"><span class="comment">*  原型绑定$destroy</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title function_">lifecycleMixin</span>(<span class="title class_">Vue</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 原型绑定渲染相关的api</span></span><br><span class="line"><span class="comment">*  原型绑定$nextTic</span></span><br><span class="line"><span class="comment">*  原型绑定_render</span></span><br><span class="line"><span class="comment">*  原型绑定编译执行所需的简化方法</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title function_">renderMixin</span>(<span class="title class_">Vue</span>)</span><br></pre></td></tr></table></figure><p>Vue底层通过<code>this._init(options)</code>进行初始化，该方法通过<code>initMixin</code>方法挂载到Vue原型上。在<code>initMixin</code>中，Vue会对传入的options通过<code>mergeOptions</code>方法做合并操作，此处也是为什么不能将子组件的data声明为对象的原型。</p><h1 id="流程概述"><a href="#流程概述" class="headerlink" title="流程概述"></a>流程概述</h1><p>Vue会通过Observe来递归的对数据进行劫持，通过<code>Object.defineProperty</code>来对每一项属性进行劫持。在劫持完毕后，会对<code>_data</code>进行数据代理，将<code>vm._data.a</code>代理成<code>vm.a</code>，也是通过<code>Object.defineProperty</code>实现的。</p><p>初始化的同时会通过对_data设置get方法对watcher进行收集，存入Dep数组。通过设置set方法，当数据变化时，调用<code>dep.notify</code>通知收集的watcher更新视图。</p><p>在Vue更新视图时，是以异步的方式更新的，watcher被通知更新后，会执行queryWatcher方法，将自身推入更新队列中，如果同一个 watcher 被多次触发，只会被推入到队列中一次。之后判断是否同步更新，若同步执行，则直接调用<code>flushSchedulerQueue</code>。否则通过<code>nextTick</code>方法，将所有回调进行处理，Vue会针对当前环境进行判断，选择合适的方法将任务添加到微任务队列中（实现异步），将处理过的函数赋值给<code>timerFunc</code>，在nextTick中执行<code>timerFunc</code>。</p><p>&#x2F;&#x2F; TODO</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;梳理Vue2底层执行流程&lt;/p&gt;</summary>
    
    
    
    <category term="前端" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="Vue2" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF/Vue2/"/>
    
    
    <category term="Vue" scheme="http://example.com/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>手写 MVVM</title>
    <link href="http://example.com/2022/11/18/%E6%89%8B%E5%86%99MVVM/"/>
    <id>http://example.com/2022/11/18/%E6%89%8B%E5%86%99MVVM/</id>
    <published>2022-11-18T06:10:30.000Z</published>
    <updated>2022-12-04T06:18:22.232Z</updated>
    
    <content type="html"><![CDATA[<p>对于MVVM的实现原理之前其实就知道了，但是一直没有自己去尝试实现过，今个在这里实现一下，也加深下印象</p><span id="more"></span><p>参考文章:<a href="https://juejin.cn/post/6844903586103558158#heading-10">MVVM原理</a></p><h1 id="入口函数"><a href="#入口函数" class="headerlink" title="入口函数"></a>入口函数</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 默认配置项为空</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Mvvm</span>(<span class="params">options = &#123;&#125;</span>)&#123;</span><br><span class="line">    <span class="comment">// vm.$options Vue上是将所有属性挂在到上面</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">$options</span> = options;</span><br><span class="line">    <span class="comment">// this._data 这里也和Vue一样</span></span><br><span class="line">    <span class="keyword">let</span> data = <span class="variable language_">this</span>.<span class="property">_data</span> = <span class="variable language_">this</span>.<span class="property">$options</span>.<span class="property">data</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 对data进行数据劫持</span></span><br><span class="line">    <span class="title function_">observe</span>(data);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="数据劫持"><a href="#数据劫持" class="headerlink" title="数据劫持"></a>数据劫持</h1><ul><li>观察对象，遍历属性调用Object.defineProperty</li><li>vue 不支持对不存在的属性进行get&#x2F;set</li><li>深度响应，赋予新对象时会给这个新对象增加defineProperty</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Observe</span>(<span class="params">data</span>)&#123;</span><br><span class="line">    <span class="comment">// 遍历劫持</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> key <span class="keyword">in</span> data)&#123;</span><br><span class="line">        <span class="keyword">let</span> val = data[key];</span><br><span class="line">        <span class="title function_">observe</span>(val); <span class="comment">// 递归查找添加劫持</span></span><br><span class="line">        <span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(data, key, &#123;</span><br><span class="line">            <span class="attr">configurable</span>: <span class="literal">true</span>, <span class="comment">// 表示可删除属性</span></span><br><span class="line">            <span class="title function_">get</span>(<span class="params"></span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> val;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="title function_">set</span>(<span class="params">newVal</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(newVal === val) <span class="keyword">return</span>;</span><br><span class="line">                val = newVal;</span><br><span class="line">                <span class="title function_">observe</span>(newVal); <span class="comment">// 对新加入的数据进行劫持</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 减少new</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">observe</span>(<span class="params">data</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(!data || <span class="keyword">typeof</span> data !== <span class="string">&#x27;object&#x27;</span>) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Observe</span>(data);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="数据代理"><a href="#数据代理" class="headerlink" title="数据代理"></a>数据代理</h1><p>数据代理就是不需要我们写成<code>mvvm._data.a.b</code>这种形式，而是<code>mvvm.a.b</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 完善Mvvm入口函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Mvvm</span>(<span class="params">options = &#123;&#125;</span>)&#123;</span><br><span class="line">    <span class="comment">// 数据劫持</span></span><br><span class="line">    <span class="title function_">observe</span>(data);</span><br><span class="line">    <span class="comment">// this 代理了this._data</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> key <span class="keyword">in</span> data)&#123;</span><br><span class="line">        <span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(<span class="variable language_">this</span>, key, &#123;</span><br><span class="line">            <span class="attr">configurable</span>:<span class="literal">true</span>,</span><br><span class="line">            <span class="title function_">get</span>(<span class="params"></span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">_data</span>[key];</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="title function_">set</span>(<span class="params">newVal</span>)&#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">_data</span> = newVal;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="数据编译"><a href="#数据编译" class="headerlink" title="数据编译"></a>数据编译</h1><p>在数据劫持和数据代理都实现后，还需要将<code>&#123;&#123;&#125;&#125;</code>里面的内容解析出来</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Mvvm</span>(<span class="params">options = &#123;&#125;</span>)&#123;</span><br><span class="line">    <span class="title function_">observe</span>(data);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">Compile</span>(options.<span class="property">el</span>, <span class="variable language_">this</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建Compile构造函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Compile</span>(<span class="params">el, vm</span>)&#123;</span><br><span class="line">    <span class="comment">// 挂载el到实例上</span></span><br><span class="line">    vm.<span class="property">$el</span> = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(el);</span><br><span class="line">    <span class="comment">// 在el范围里将内容都拿到，可以移到内存中去然后放入文档碎片中，节省开销</span></span><br><span class="line">    <span class="keyword">let</span> fragment = <span class="variable language_">document</span>.<span class="title function_">createDocumentFragment</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(child = vm.<span class="property">$el</span>.<span class="property">firstChild</span>)&#123;</span><br><span class="line">        fragment.<span class="title function_">appendChild</span>(child);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 对el里面的内容进行替换</span></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">replace</span>(<span class="params">frag</span>)&#123;</span><br><span class="line">        <span class="title class_">Array</span>.<span class="title function_">from</span>(frag.<span class="property">childNodes</span>).<span class="title function_">forEach</span>(<span class="function"><span class="params">node</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> txt = node.<span class="property">textContent</span>;</span><br><span class="line">            <span class="keyword">let</span> reg = <span class="regexp">/\&#123;\&#123;(.*?)\&#125;\&#125;/g</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(node.<span class="property">nodeType</span> === <span class="number">3</span> &amp;&amp; reg.<span class="title function_">test</span>(txt))&#123; <span class="comment">// 即是文本节点又有大括号的情况&#123;&#123;&#125;&#125;</span></span><br><span class="line">                <span class="keyword">let</span> arr = <span class="title class_">RegExp</span>.<span class="property">$1</span>.<span class="title function_">split</span>(<span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">                <span class="keyword">let</span> val = vm;</span><br><span class="line">                arr.<span class="title function_">forEach</span>(<span class="function"><span class="params">key</span> =&gt;</span> &#123;</span><br><span class="line">                    val = val[key]; <span class="comment">// this.a.b</span></span><br><span class="line">                &#125;);</span><br><span class="line">                <span class="comment">// 用trim方法去除首位空格</span></span><br><span class="line">                node.<span class="property">textContent</span> = txt.<span class="title function_">replace</span>(reg, val).<span class="title function_">trim</span>();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 如果还有子节点，继续递归replace</span></span><br><span class="line">            <span class="keyword">if</span> (node.<span class="property">childNodes</span> &amp;&amp; node.<span class="property">childNodes</span>.<span class="property">length</span>) &#123;</span><br><span class="line">                <span class="title function_">replace</span>(node);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">replace</span>(fragment);  <span class="comment">// 替换内容</span></span><br><span class="line">    </span><br><span class="line">    vm.<span class="property">$el</span>.<span class="title function_">appendChild</span>(fragment);   <span class="comment">// 再将文档碎片放入el中</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="发布订阅"><a href="#发布订阅" class="headerlink" title="发布订阅"></a>发布订阅</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 发布订阅模式  订阅和发布 如[fn1, fn2, fn3]</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Dep</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 一个数组(存放函数的事件池)</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">subs</span> = [];</span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">Dep</span>.<span class="property"><span class="keyword">prototype</span></span> = &#123;</span><br><span class="line">    <span class="title function_">addSub</span>(<span class="params">sub</span>) &#123;   </span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">subs</span>.<span class="title function_">push</span>(sub);    </span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">notify</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// 绑定的方法，都有一个update方法，通过update方法调用queryWatcher，去异步更新</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">subs</span>.<span class="title function_">forEach</span>(<span class="function"><span class="params">sub</span> =&gt;</span> sub.<span class="title function_">update</span>());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 监听函数</span></span><br><span class="line"><span class="comment">// 通过Watcher这个类创建的实例，都拥有update方法</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Watcher</span>(<span class="params">fn</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">fn</span> = fn;   <span class="comment">// 将fn放到实例上</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">Watcher</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">update</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">fn</span>();  </span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> watcher = <span class="keyword">new</span> <span class="title class_">Watcher</span>(<span class="function">() =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">111</span>));  <span class="comment">// </span></span><br><span class="line"><span class="keyword">let</span> dep = <span class="keyword">new</span> <span class="title class_">Dep</span>();</span><br><span class="line">dep.<span class="title function_">addSub</span>(watcher);    <span class="comment">// 将watcher放到数组中,watcher自带update方法， =&gt; [watcher]</span></span><br><span class="line">dep.<span class="title function_">addSub</span>(watcher);</span><br><span class="line">dep.<span class="title function_">notify</span>();   <span class="comment">//  111, 111</span></span><br></pre></td></tr></table></figure><h1 id="数据更新视图"><a href="#数据更新视图" class="headerlink" title="数据更新视图"></a>数据更新视图</h1><ul><li>订阅一个事件，当数据改变需要重新刷新视图，这就需要在replace替换的逻辑里来处理</li><li>通过new Watcher把数据订阅一下，数据一变就执行改变内容的操作</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">replace</span>(<span class="params">frag</span>)&#123;</span><br><span class="line">    <span class="comment">// 省略...</span></span><br><span class="line">    <span class="comment">// 替换的逻辑</span></span><br><span class="line">    node.<span class="property">text</span>.<span class="property">Content</span> = txt.<span class="title function_">replace</span>(reg, val).<span class="title function_">trim</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 监听变化</span></span><br><span class="line">    <span class="comment">// 给Watcher再添加两个参数，用来取新的值（newVal）给回调函数传参</span></span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">Watcher</span>(vm, <span class="title class_">RegExp</span>, $1, <span class="function"><span class="params">newVal</span> =&gt;</span> &#123;</span><br><span class="line">        node.<span class="property">textContent</span> = txt.<span class="title function_">replace</span>(reg, newVal).<span class="title function_">trim</span>();</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Watcher</span>(<span class="params">vm, exp, fn</span>)&#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">fn</span> = fn;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">vm</span> = vm;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">exp</span> = exp;</span><br><span class="line">    <span class="comment">// 添加一个事件</span></span><br><span class="line">    <span class="comment">// 这里我们先定义一个属性</span></span><br><span class="line">    <span class="title class_">Dep</span>.<span class="property">target</span> = <span class="variable language_">this</span>;</span><br><span class="line">    <span class="keyword">let</span> arr = exp.<span class="title function_">split</span>(<span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">    <span class="keyword">let</span> val = vm;</span><br><span class="line">    arr.<span class="title function_">forEach</span>(<span class="function"><span class="params">key</span> =&gt;</span> &#123;    <span class="comment">// 取值</span></span><br><span class="line">       val = val[key];     <span class="comment">// 获取到this.a.b，默认就会调用get方法</span></span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="title class_">Dep</span>.<span class="property">target</span> = <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由于数据劫持的原因，当获取值的时候就会自动调用get方法</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Observe</span>(<span class="params">data</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> dep = <span class="keyword">new</span> <span class="title class_">Dep</span>();</span><br><span class="line">    <span class="comment">// 省略...</span></span><br><span class="line">    <span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(data, key, &#123;</span><br><span class="line">        <span class="title function_">get</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="title class_">Dep</span>.<span class="property">target</span> &amp;&amp; dep.<span class="title function_">addSub</span>(<span class="title class_">Dep</span>.<span class="property">target</span>);   <span class="comment">// 将watcher添加到订阅事件中 [watcher]</span></span><br><span class="line">            <span class="keyword">return</span> val;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="title function_">set</span>(<span class="params">newVal</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (val === newVal) &#123;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            val = newVal;</span><br><span class="line">            <span class="title function_">observe</span>(newVal);</span><br><span class="line">            dep.<span class="title function_">notify</span>();   <span class="comment">// 让所有watcher的update方法执行即可</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当set修改值的时候执行了dep.notify方法，这个方法是执行watcher的update方法，需要对update进行修改</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Watcher</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">update</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// notify的时候值已经更改了</span></span><br><span class="line">    <span class="comment">// 再通过vm, exp来获取新的值</span></span><br><span class="line">    <span class="keyword">let</span> arr = <span class="variable language_">this</span>.<span class="property">exp</span>.<span class="title function_">split</span>(<span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">    <span class="keyword">let</span> val = <span class="variable language_">this</span>.<span class="property">vm</span>;</span><br><span class="line">    arr.<span class="title function_">forEach</span>(<span class="function"><span class="params">key</span> =&gt;</span> &#123;    </span><br><span class="line">        val = val[key];   <span class="comment">// 通过get获取到新的值</span></span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">fn</span>(val);   <span class="comment">// 将每次拿到的新值去替换&#123;&#123;&#125;&#125;的内容即可</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="mounted函数"><a href="#mounted函数" class="headerlink" title="mounted函数"></a>mounted函数</h1><p>mounted函数实际就是在所有响应式数据处理完，即compile函数执行之后执行的</p><h1 id="computed函数"><a href="#computed函数" class="headerlink" title="computed函数"></a>computed函数</h1><p>在compile函数执行前调用，会从options属性里获取computed对象，之后遍历key值设置响应式。如果当前key对应的value是对象，则需要手动调用get方法，如果是函数则不需要手动调用</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;对于MVVM的实现原理之前其实就知道了，但是一直没有自己去尝试实现过，今个在这里实现一下，也加深下印象&lt;/p&gt;</summary>
    
    
    
    <category term="面试" scheme="http://example.com/categories/%E9%9D%A2%E8%AF%95/"/>
    
    <category term="手写" scheme="http://example.com/categories/%E9%9D%A2%E8%AF%95/%E6%89%8B%E5%86%99/"/>
    
    
    <category term="Vue" scheme="http://example.com/tags/Vue/"/>
    
    <category term="MVVM" scheme="http://example.com/tags/MVVM/"/>
    
    <category term="手写" scheme="http://example.com/tags/%E6%89%8B%E5%86%99/"/>
    
  </entry>
  
  <entry>
    <title>JS知识点总结</title>
    <link href="http://example.com/2022/11/15/JS%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/"/>
    <id>http://example.com/2022/11/15/JS%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/</id>
    <published>2022-11-15T06:35:21.000Z</published>
    <updated>2022-12-04T06:18:22.228Z</updated>
    
    <content type="html"><![CDATA[<p>关于JS知识点的总结</p><span id="more"></span><h1 id="数据类型检测的方法"><a href="#数据类型检测的方法" class="headerlink" title="数据类型检测的方法"></a>数据类型检测的方法</h1><ol><li>typeof 处理数组、对象、null时会返回object，处理NaN时会返回number<blockquote><p>因为null的机器码均为0，和对象一样，所以会出现typeof null为object的情况</p></blockquote></li><li>instanceof 用于判断一个<strong>引用类型的数据</strong>是否存在目标的原型链中</li><li>constructor 当对象的原型更改时判断可能错误</li><li>Object.prototype.toString.call() toString是Object的原型方法，Array、Function等类型重写了toString方法，所以想要获取类型时需要调用Object原型上的toString方法</li><li>isXXX的api，例如isArray，isNaN等。</li></ol><h2 id="instanceof原理"><a href="#instanceof原理" class="headerlink" title="instanceof原理"></a>instanceof原理</h2><p>instanceof 运算符用于检测构造函数的prototype属性是否出现在左侧目标对象的原型链中。在ES6中，instanceof 操作符会使用 Symbol.hasInstance函数来确定关系。</p><h2 id="instanceof-实现"><a href="#instanceof-实现" class="headerlink" title="instanceof 实现"></a>instanceof 实现</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">myInstanceof</span>(<span class="params">leftVal, rightVal</span>)&#123;</span><br><span class="line">    <span class="comment">// 必须是对象或者函数 </span></span><br><span class="line">    <span class="comment">// if (!(obj &amp;&amp; [&#x27;object&#x27;, &#x27;function&#x27;].includes(typeof leftVal))) &#123;</span></span><br><span class="line">    <span class="comment">//     return false</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="comment">// 或</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="title class_">Object</span>(leftVal) !== leftVal) <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 对于右侧参数可以认为只能为函数且不能没有Prototype属性</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> rightVal !== <span class="string">&#x27;function&#x27;</span> || !rightVal.<span class="property"><span class="keyword">prototype</span></span>) <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">TypeError</span>(<span class="string">&#x27;Right-hand side of &#x27;</span><span class="keyword">instanceof</span><span class="string">&#x27; is not an object&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 声明一个变量获取对象的__proto__</span></span><br><span class="line">    <span class="keyword">let</span> link = L.<span class="property">__proto__</span></span><br><span class="line">    <span class="comment">// 做循环（当link最终指向null，如果指向null的情况下都找不到那就返回false）</span></span><br><span class="line">    <span class="keyword">while</span> (link !== <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="comment">// 如果找到说明R.prototype在L的原型链上，即返回true</span></span><br><span class="line">        <span class="keyword">if</span>(link === R.<span class="property"><span class="keyword">prototype</span></span>) <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">        <span class="comment">// 逐级向下</span></span><br><span class="line">        link = link.<span class="property">__proto__</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="判断数组的方式"><a href="#判断数组的方式" class="headerlink" title="判断数组的方式"></a>判断数组的方式</h1><ol><li>通过object原型上的toString方法</li><li>通过隐式原型<code>__proto__</code>的指向判断</li><li>通过isArray</li><li>通过instanceof Array</li><li>通过Array.prototype.isPrototypeOf</li><li>通过Object.getPrototypeOf是否等于Array.prototype</li></ol><h1 id="null和undefined的区别"><a href="#null和undefined的区别" class="headerlink" title="null和undefined的区别"></a>null和undefined的区别</h1><ul><li>undefined是未指定特定值的变量的默认值，或未指定式返回值的函数</li><li>null是不代表任何值的值，是已经明确定义给变量了</li><li>在用&#x3D;&#x3D;比较时是true，在用&#x3D;&#x3D;&#x3D;比较时是false</li><li>undefined不是保留字</li></ul><h1 id="双精度浮点数的运算"><a href="#双精度浮点数的运算" class="headerlink" title="双精度浮点数的运算"></a>双精度浮点数的运算</h1><p>为什么 <code>0.1+0.2!==0.3</code>？<br>因为js的Number类型是双精度浮点数，0.1和0.3在二进制中是无限循环的</p><p>如何精确计算？<br>通过ES6的<code>Number.EPSILON</code>，它的值是2的-52次方</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">numberEpsilon</span>(<span class="params">arg1, arg2</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">abs</span>(arg1 - arg2) &lt; <span class="title class_">Number</span>.<span class="property">EPSILON</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">numberEpsilon</span>(<span class="number">0.1</span>+<span class="number">0.2</span>, <span class="number">0.3</span>));</span><br></pre></td></tr></table></figure><h1 id="NaN"><a href="#NaN" class="headerlink" title="NaN"></a>NaN</h1><ul><li>typeof返回number</li><li>与自身不等</li></ul><h2 id="isNaN和Number-isNaN函数的区别"><a href="#isNaN和Number-isNaN函数的区别" class="headerlink" title="isNaN和Number.isNaN函数的区别"></a>isNaN和Number.isNaN函数的区别</h2><p>isNaN会对入参进行数值转换，Number.isNaN会首先判断入参是否为数字，是则判断是否为NaN，不进行数值转换</p><h1 id="JavaScript-中如何进行隐式类型转换"><a href="#JavaScript-中如何进行隐式类型转换" class="headerlink" title="JavaScript 中如何进行隐式类型转换"></a>JavaScript 中如何进行隐式类型转换</h1><p>会通过js自带的ToPrimitive方法去转换。如果值为基本类型，则直接返回值本身，如果值为对象，其看起来大概是这样</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@obj</span> 需要转换的对象</span></span><br><span class="line"><span class="comment">* <span class="doctag">@type</span> 期望的结果类型</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title class_">ToPrimitive</span>(obj,type)</span><br></pre></td></tr></table></figure><p><code>type</code>的值为<code>number</code>或者<code>string</code>。</p><p><strong>（1）当<code>type</code>为<code>number</code>时规则如下：</strong></p><ul><li>调用<code>obj</code>的<code>valueOf</code>方法，如果为原始值，则返回，否则下一步；</li><li>调用<code>obj</code>的<code>toString</code>方法，后续同上；</li><li>抛出<code>TypeError</code> 异常。</li></ul><p><strong>（2）当<code>type</code>为<code>string</code>时规则如下：</strong></p><ul><li>调用<code>obj</code>的<code>toString</code>方法，如果为原始值，则返回，否则下一步；</li><li>调用<code>obj</code>的<code>valueOf</code>方法，后续同上；</li><li>抛出<code>TypeError</code> 异常。</li></ul><h1 id="x3D-x3D-操作符的强制类型转换规则"><a href="#x3D-x3D-操作符的强制类型转换规则" class="headerlink" title="&#x3D;&#x3D;操作符的强制类型转换规则"></a>&#x3D;&#x3D;操作符的强制类型转换规则</h1><ol><li>首先会判断两者类型是否<strong>相同</strong>,相同的话就比较两者的大小；</li><li>类型不相同的话，就会进行类型转换；</li><li>会先判断是否在对比 <code>null</code> 和 <code>undefined</code>，是的话就会返回 <code>true</code></li><li>判断两者类型是否为 <code>string</code> 和 <code>number</code>，是的话就会将字符串转换为 <code>number</code></li><li>判断其中一方是否为 <code>boolean</code>，是的话就会把 <code>boolean</code> 转为 <code>number</code> 再进行判断</li><li>判断其中一方是否为 <code>object</code> 且另一方为 <code>string</code>、<code>number</code> 或者 <code>symbol</code>，是的话就会把 <code>object</code> 转为原始类型再进行判断</li></ol><h1 id="其他值到字符串的转换规则"><a href="#其他值到字符串的转换规则" class="headerlink" title="其他值到字符串的转换规则"></a>其他值到字符串的转换规则</h1><ul><li>Null 和 Undefined 类型 ，null 转换为 “null”，undefined 转换为 “undefined”，</li><li>Boolean 类型，true 转换为 “true”，false 转换为 “false”。</li><li>Number 类型的值直接转换，不过那些极小和极大的数字会使用指数形式。</li><li>Symbol 类型的值直接转换，但是只允许显式强制类型转换，使用隐式强制类型转换会产生错误。</li><li>对普通对象来说，除非自行定义 toString() 方法，否则会调用 toString()（Object.prototype.toString()）来返回内部属性 <code>[[Class]]</code> 的值，如”<code>[object Object]</code>“。如果对象有自己的 toString() 方法，字符串化时就会调用该方法并使用其返回值。</li></ul><h1 id="其他值到数字值的转换规则"><a href="#其他值到数字值的转换规则" class="headerlink" title="其他值到数字值的转换规则"></a>其他值到数字值的转换规则</h1><ul><li>Undefined 类型的值转换为 NaN。</li><li>Null 类型的值转换为 0。</li><li>Boolean 类型的值，true 转换为 1，false 转换为 0。</li><li>String 类型的值转换如同使用 Number() 函数进行转换，如果包含非数字值则转换为 NaN，空字符串为 0，十六进制的数转为十进制的整数。</li><li>Symbol 类型的值不能转换为数字，会报错。</li><li>对象首先调用<code>valueOf</code>方法，如果转换的结果为<code>NaN</code>，再调用<code>toString</code>方法</li></ul><h1 id="假值"><a href="#假值" class="headerlink" title="假值"></a>假值</h1><p>以下这些是假值：<br>    • undefined<br>    • null<br>    • false<br>    • +0、-0 和 NaN<br>    • “”</p><h1 id="和-amp-amp-操作符的返回值"><a href="#和-amp-amp-操作符的返回值" class="headerlink" title="|| 和 &amp;&amp; 操作符的返回值"></a>|| 和 &amp;&amp; 操作符的返回值</h1><p>|| 对第一个操作数进行判断后，如果为true则直接返回，否则返回第二个操作数的值<br>&amp;&amp; 对第一个操作数进行判断后，如果为true则返回第二个操作数的值，否则返回第一个操作数的值</p><h1 id="Object-is-与比较操作符-x3D-x3D-x3D-、-x3D-x3D-的区别"><a href="#Object-is-与比较操作符-x3D-x3D-x3D-、-x3D-x3D-的区别" class="headerlink" title="Object.is() 与比较操作符  &#x3D;&#x3D;&#x3D;、 &#x3D;&#x3D;  的区别"></a>Object.is() 与比较操作符  &#x3D;&#x3D;&#x3D;、 &#x3D;&#x3D;  的区别</h1><ul><li>使用双等号（<code>==</code>）进行相等判断时，如果两边的类型不一致，则会进行强制类型转化后再进行比较。</li><li>使用三等号（<code>===</code>）进行相等判断时，如果两边的类型不一致时，不会做强制类型准换，直接返回 false。</li><li>使用 <code>Object.is</code> 来进行相等判断时，一般情况下和三等号的判断相同，它处理了一些特殊的情况，比如 -0 和 +0 不再相等，两个 NaN 是相等的。</li></ul><h1 id="JavaScript-中的包装类型"><a href="#JavaScript-中的包装类型" class="headerlink" title="JavaScript 中的包装类型"></a>JavaScript 中的包装类型</h1><p>在 JavaScript 中，基本类型是没有属性和方法的，但是为了便于操作基本类型的值，在调用基本类型的属性或方法时 JavaScript 会在后台隐式地将基本类型的值转换为对象</p><p>也可以使用<code>Object</code>函数显式地将基本类型转换为包装类型</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="string">&#x27;abc&#x27;</span></span><br><span class="line"><span class="title class_">Object</span>(a) <span class="comment">// String &#123;&quot;abc&quot;&#125;</span></span><br></pre></td></tr></table></figure><p>也可以使用<code>valueOf</code>方法将包装类型倒转成基本类型</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="string">&#x27;abc&#x27;</span></span><br><span class="line"><span class="keyword">var</span> b = <span class="title class_">Object</span>(a)</span><br><span class="line"><span class="keyword">var</span> c = b.<span class="title function_">valueOf</span>() <span class="comment">// &#x27;abc&#x27;</span></span><br></pre></td></tr></table></figure><h1 id="操作符什么时候用于字符串的拼接？"><a href="#操作符什么时候用于字符串的拼接？" class="headerlink" title="+ 操作符什么时候用于字符串的拼接？"></a><code>+</code> 操作符什么时候用于字符串的拼接？</h1><p>只要运算符两边中的一方经过转型为字符串，+运算符就是字符串拼接。</p><p>对于除了加法的运算符来说，只要其中一方是数字，那么另一方就会被转为数字</p><h1 id="为什么会有BigInt的提案？"><a href="#为什么会有BigInt的提案？" class="headerlink" title="为什么会有BigInt的提案？"></a>为什么会有BigInt的提案？</h1><p>为了解决当数值超过Number.MAX_SAFE_INTEGER时，出现精度丢失的问题。</p><h1 id="object-assign和扩展运算法是深拷贝还是浅拷贝，两者区别"><a href="#object-assign和扩展运算法是深拷贝还是浅拷贝，两者区别" class="headerlink" title="object.assign和扩展运算法是深拷贝还是浅拷贝，两者区别"></a>object.assign和扩展运算法是深拷贝还是浅拷贝，两者区别</h1><p>两者都是浅拷贝。</p><ul><li>Object.assign()方法接收的第一个参数作为目标对象，后面的所有参数作为源对象。然后把所有的源对象合并到目标对象中。它会修改了一个对象，因此会触发 ES6 setter。</li><li>扩展操作符（…）使用它时，数组或对象中的每一个值都会被拷贝到一个新的数组或对象中。它不复制继承的属性或类的属性，但是它会复制ES6的 symbols 属性</li></ul><h1 id="如何判断一个对象是空对象"><a href="#如何判断一个对象是空对象" class="headerlink" title="如何判断一个对象是空对象"></a>如何判断一个对象是空对象</h1><ul><li>通过<code>Json.stringify()</code>去判断是否 &#x3D;&#x3D; <code>&#39;&#123;&#125;&#39;</code>;</li><li>无法处理循环引用的情况</li><li>通过<code>Object.keys()</code>判断length是否 <code>&gt;</code> 0</li></ul><h1 id="箭头函数与普通函数的区别"><a href="#箭头函数与普通函数的区别" class="headerlink" title="箭头函数与普通函数的区别"></a>箭头函数与普通函数的区别</h1><ul><li>没有自己的this、prototype、arguments</li><li>写法比普通函数更简洁<ul><li>一个参数时可以省略括号</li><li>一个返回值时可以省略大括号和return</li></ul></li><li>call()、apply()、bind()等方法不能改变箭头函数中this的指向</li><li>不能作为构造函数使用</li><li>箭头函数不能用作Generator函数，不能使用yeild关键字</li></ul><blockquote><p>箭头函数没有prototype，也没有自己的this指向，更不可以使用arguments参数，所以不能New一个箭头函数</p></blockquote><h1 id="扩展运算符的作用及使用场景"><a href="#扩展运算符的作用及使用场景" class="headerlink" title="扩展运算符的作用及使用场景"></a>扩展运算符的作用及使用场景</h1><p><strong>（1）对象扩展运算符</strong><br>对象的扩展运算符(…)用于取出参数对象中的所有可遍历属性，拷贝到当前对象之中。</p><p>后扩展的同名属性会覆盖已有属性</p><p>扩展运算符对对象实例的拷贝属于浅拷贝</p><p><strong>（2）数组扩展运算符</strong><br>数组的扩展运算符可以将一个数组转为用逗号分隔的参数序列，且每次只能展开一层数组</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(...[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line"><span class="comment">// 1 2 3</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(...[<span class="number">1</span>, [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>], <span class="number">5</span>])</span><br><span class="line"><span class="comment">// 1 [2, 3, 4] 5</span></span><br></pre></td></tr></table></figure><p> <strong>任何 Iterator 接口的对象，都可以用扩展运算符转为真正的数组</strong></p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// arguments对象</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> args = [...<span class="variable language_">arguments</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Map和Object的区别"><a href="#Map和Object的区别" class="headerlink" title="Map和Object的区别"></a>Map和Object的区别</h1><table><thead><tr><th></th><th>Map</th><th>Object</th></tr></thead><tbody><tr><td>意外的键</td><td>默认不包含任何键，只包含显示插入的键</td><td>原型链上的键名有可能与对象本身键名冲突</td></tr><tr><td>键的类型</td><td>Map可以是任意值</td><td>Object只能是字符串或Symbol</td></tr><tr><td>键的顺序</td><td>Map的key是有序的</td><td>Object的键是无序的</td></tr><tr><td>Size</td><td>Map有size属性</td><td>Object的键值对个数需要手动计算</td></tr><tr><td>迭代</td><td>Map是iterable的</td><td>Object需要获取它的键才能迭代</td></tr><tr><td>插入、删除的性能</td><td>在频繁增删键值对的场景更好</td><td>在频繁添加和删除键值对的场景不如Map</td></tr><tr><td>内存占用</td><td>不同浏览器差异也不同，但在给定内存时Map更优</td><td>在给定内存时不如Map</td></tr><tr><td>查找性能</td><td>只包含少量键值对时，不如Object</td><td>只包含少量键值对时，Object更优。假如将Object的键写为连续的整数时，浏览器引擎会对其进行优化，此时的大量查找Object更优。</td></tr></tbody></table><h1 id="Map和weakMap的区别"><a href="#Map和weakMap的区别" class="headerlink" title="Map和weakMap的区别"></a>Map和weakMap的区别</h1><ol><li>key值Map可以是任意类型，weakMap只能是对象</li><li>Map对于存储的数据具有引用关系，weakMap键名指向的对象不计入垃圾回收，是弱引用</li></ol><h1 id="JavaScript脚本延迟加载的方式有哪些？"><a href="#JavaScript脚本延迟加载的方式有哪些？" class="headerlink" title="JavaScript脚本延迟加载的方式有哪些？"></a>JavaScript脚本延迟加载的方式有哪些？</h1><ul><li><strong>defer</strong></li><li><strong>async</strong></li><li><strong>动态创建DOM</strong></li><li><strong>setTimeout</strong></li><li><strong>放在文档最底部</strong></li></ul><h1 id="JavaScript-类数组对象的定义"><a href="#JavaScript-类数组对象的定义" class="headerlink" title="JavaScript 类数组对象的定义"></a>JavaScript 类数组对象的定义</h1><p>有 <strong>length</strong> 属性，并且具<strong>有若干索引属性</strong>即可成为类数组</p><h2 id="类数组转换为数组"><a href="#类数组转换为数组" class="headerlink" title="类数组转换为数组"></a>类数组转换为数组</h2><p>（1）通过 call 调用数组的 slice 方法来实现转换</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Array</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">slice</span>.<span class="title function_">call</span>(arrayLike);</span><br></pre></td></tr></table></figure><p>（2）通过 call 调用数组的 splice 方法来实现转换</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Array</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">splice</span>.<span class="title function_">call</span>(arrayLike, <span class="number">0</span>);</span><br></pre></td></tr></table></figure><p>（3）通过 apply 调用数组的 concat 方法来实现转换</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Array</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">concat</span>.<span class="title function_">apply</span>([], arrayLike);</span><br></pre></td></tr></table></figure><p>（4）通过 Array.from 方法来实现转换</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Array</span>.<span class="title function_">from</span>(arrayLike);</span><br></pre></td></tr></table></figure><p>（5）通过展开语法</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[...arrayLike]</span><br></pre></td></tr></table></figure><p>JS 中 函数的 arguments 参数就是类数组而不是数组。因为其属性是从0开始依次递增的数字，还有callee和length等属性。但没有数组常见的方法。</p><h1 id="什么是-DOM-和-BOM？"><a href="#什么是-DOM-和-BOM？" class="headerlink" title="什么是 DOM 和 BOM？"></a>什么是 DOM 和 BOM？</h1><ul><li>DOM 指的是文档对象模型，它指的是把文档当做一个对象，这个对象主要定义了处理网页内容的方法和接口。</li><li>BOM 指的是浏览器对象模型，它指的是把浏览器当做一个对象来对待，这个对象主要定义了与浏览器进行交互的法和接口。BOM的核心是 window，而 window 对象具有双重角色，它既是通过 js 访问浏览器窗口的一个接口，又是一个 Global（全局）对象。这意味着在网页中定义的任何对象，变量和函数，都作为全局对象的一个属性或者方法存在。window 对象含有 location 对象、navigator 对象、screen 对象等子对象，并且 DOM 的最根本的对象 document 对象也是 BOM 的 window 对象的子对象。</li></ul><h1 id="escape、encodeURI、encodeURIComponent-的区别"><a href="#escape、encodeURI、encodeURIComponent-的区别" class="headerlink" title="escape、encodeURI、encodeURIComponent 的区别"></a>escape、encodeURI、encodeURIComponent 的区别</h1><p>escape是对字符串进行转义<br>encodeURI方法<strong>不会</strong>对下列字符编码 <strong>ASCII字母 数字 ~!@#$&amp;*()&#x3D;:&#x2F;,;?+’</strong><br>encodeURIComponent方法<strong>不会</strong>对下列字符编码 <strong>ASCII字母 数字 ~!*()’</strong></p><h1 id="AJAX"><a href="#AJAX" class="headerlink" title="AJAX"></a>AJAX</h1><p><strong>AJAX优点</strong></p><ol><li>可以<strong>无需刷新页面</strong>而与服务器端进行通信</li><li>允许你根据用户<strong>事件</strong>来更新部分页面内容</li></ol><p><strong>AJAX缺点</strong></p><ol><li>没有浏览历史，不能回退</li><li>存在跨域问题(同源)</li><li>SEO 不友好</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原生实现</span></span><br><span class="line"><span class="keyword">const</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span><br><span class="line">xhr.<span class="title function_">open</span>(<span class="string">&quot;Get&quot;</span>, url, <span class="literal">true</span>);</span><br><span class="line">xhr.<span class="property">onreadystatechange</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">readyStatus</span> !== <span class="number">4</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">status</span> === <span class="number">200</span>)&#123;</span><br><span class="line">        <span class="title function_">handle</span>(<span class="variable language_">this</span>.<span class="property">response</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">statusText</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">xhr.<span class="property">onerror</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">statusText</span>);</span><br><span class="line">&#125;</span><br><span class="line">xhr.<span class="property">responseType</span> = <span class="string">&quot;json&quot;</span>;</span><br><span class="line">xhr.<span class="title function_">setRequestHeader</span>(<span class="string">&quot;Accept&quot;</span>, <span class="string">&quot;application/json&quot;</span>);</span><br><span class="line">xhr.<span class="title function_">send</span>(<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// promise实现</span></span><br><span class="line"><span class="keyword">const</span> p = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="keyword">function</span>(<span class="params">resolve,reject</span>)&#123;</span><br><span class="line">    <span class="keyword">const</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span><br><span class="line">    xhr.<span class="title function_">open</span>(<span class="string">&quot;Get&quot;</span>, url, <span class="literal">true</span>);</span><br><span class="line">    xhr.<span class="property">onreadyStateChange</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">readyStatus</span> !== <span class="number">4</span>)&#123;</span><br><span class="line">            <span class="title function_">reject</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">status</span> === <span class="number">200</span>)&#123;</span><br><span class="line">            <span class="title function_">resolve</span>(<span class="variable language_">this</span>.<span class="property">response</span>);</span><br><span class="line">            <span class="title function_">handle</span>(<span class="variable language_">this</span>.<span class="property">response</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="title function_">reject</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="variable language_">this</span>.<span class="property">statusText</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    xhr.<span class="property">onerror</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="title function_">reject</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&quot;error&quot;</span>))</span><br><span class="line">    &#125;;</span><br><span class="line">    xhr.<span class="property">responseType</span> = <span class="string">&quot;json&quot;</span>;</span><br><span class="line">    <span class="comment">// 设置请求头信息</span></span><br><span class="line">    xhr.<span class="title function_">setRequestHeader</span>(<span class="string">&quot;Accept&quot;</span>, <span class="string">&quot;application/json&quot;</span>);</span><br><span class="line">    <span class="comment">// 发送 http 请求</span></span><br><span class="line">    xhr.<span class="title function_">send</span>(<span class="literal">null</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h1 id="什么是尾调用，有何好处"><a href="#什么是尾调用，有何好处" class="headerlink" title="什么是尾调用，有何好处"></a>什么是尾调用，有何好处</h1><p>尾调用指的是在函数末尾通过return另一个函数执行。需要注意的是该return不能有其他计算，例如<code>return fn()+1;</code>。这么做的好处就是能够减少调用栈的栈帧存储，防止溢出。<br>但前提是需要在严格模式下进行，同时兼容性也不太好，目前只有safri浏览器支持。</p><h1 id="ajax、axios、fetch-的区别"><a href="#ajax、axios、fetch-的区别" class="headerlink" title="ajax、axios、fetch 的区别"></a>ajax、axios、fetch 的区别</h1><p>传统Ajax一般指原生XMLHttpRequest，多个请求间有联系时，会出现回调地狱。JQuery Ajax对原生的XMLHttpRequest进行了封装，添加了对JSONP的支持。但JQuery本身过大，而且与现代框架的设计不太相适应，同时也未能解决回调地狱的问题。本身支持<strong>abort</strong>操作</p><p>比较常用的请求方式是axios，axios也是基于原生XMLHttpRequest进行封装的，但axios是基于Promise的实现，并且功能较为完善，也受到了vue官方的推荐，有更好的异步书写方式（async、await）</p><p>fetch是在ES6提出的，本身不基于XHR，使用了ES6中的promise对象，所以也支持async、await。fetch提供了对<code>request</code>、<code>Response</code>对象的通用定义。fetch允许请求中止（实验性方案，通过 <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/AbortController/AbortController" title="AbortController()"><code>AbortController()</code></a> 实现），和xhr的abort类似。-   当接收到一个代表错误的 HTTP 状态码时，从 <code>fetch()</code> 返回的 Promise <strong>不会被标记为 reject</strong>，即使响应的 HTTP 状态码是 404 或 500。相反，它会将 Promise 状态标记为 resolve（如果响应的 HTTP 状态码不在 200 - 299 的范围内，则设置 resolve 返回值的 <code>ok</code>属性为 false），仅当网络故障时或请求被阻止时，才会标记为 reject。<code>fetch</code> <strong>不会发送跨域 cookie</strong>，除非你使用了 <em>credentials</em> 的初始化选项。（自 2018 年 8 月以后，默认的 credentials 政策变更为 <code>same-origin</code>。</p><h1 id="数组的遍历方法有哪些"><a href="#数组的遍历方法有哪些" class="headerlink" title="数组的遍历方法有哪些"></a>数组的遍历方法有哪些</h1><table><thead><tr><th>方法</th><th>是否改变原数组</th><th>特点</th></tr></thead><tbody><tr><td>foreach()</td><td>否</td><td>数组方法，不改变原数组，没有返回值</td></tr><tr><td>map()</td><td>否</td><td>数组方法，不改变原数组，有返回值，可链式调用</td></tr><tr><td>filter()</td><td>否</td><td>数组方法，过滤数组，返回包含符合条件的元素的数组，可链式调用</td></tr><tr><td>for…of</td><td>否</td><td>for…of遍历具有Iterator迭代器的对象的属性，返回的是数组的元素、对象的属性值，不能遍历普通的obj对象，将异步循环变成同步循环</td></tr><tr><td>every() 和 some()</td><td>否</td><td>数组方法，some()只要有一个是true，便返回true；而every()只要有一个是false，便返回false.</td></tr><tr><td>find() 和 findIndex()</td><td>否</td><td>数组方法，find()返回的是第一个符合条件的值；findIndex()返回的是第一个返回条件的值的索引值</td></tr><tr><td>reduce() 和 reduceRight()</td><td>否</td><td>数组方法，reduce()对数组正序操作；reduceRight()对数组逆序操作</td></tr></tbody></table>]]></content>
    
    
    <summary type="html">&lt;p&gt;关于JS知识点的总结&lt;/p&gt;</summary>
    
    
    
    <category term="面试" scheme="http://example.com/categories/%E9%9D%A2%E8%AF%95/"/>
    
    <category term="JS" scheme="http://example.com/categories/%E9%9D%A2%E8%AF%95/JS/"/>
    
    
    <category term="面试" scheme="http://example.com/tags/%E9%9D%A2%E8%AF%95/"/>
    
    <category term="JS" scheme="http://example.com/tags/JS/"/>
    
  </entry>
  
  <entry>
    <title>html知识总结</title>
    <link href="http://example.com/2022/11/14/html%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/"/>
    <id>http://example.com/2022/11/14/html%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/</id>
    <published>2022-11-14T11:41:45.000Z</published>
    <updated>2022-12-04T06:18:22.232Z</updated>
    
    <content type="html"><![CDATA[<p>HTML 知识总结</p><span id="more"></span><h1 id="src和href的区别"><a href="#src和href的区别" class="headerlink" title="src和href的区别"></a>src和href的区别</h1><ol><li>浏览器解析到src时会阻塞其他资源加载和处理。href可以通过设置link标签的<code>rel</code>为<code>stylesheet</code>来并行按标签顺序下载资源。</li><li>src指向的资源会嵌入文档标签。href则是建立一个连接，指向网络资源位置</li></ol><h1 id="link与-import的区别"><a href="#link与-import的区别" class="headerlink" title="link与@import的区别"></a>link与@import的区别</h1><ol><li>@import只能引入CSS。link能够引入多种资源类型。</li><li>link引入的CSS会<strong>并行下载，顺序加载</strong>。@import引入的CSS在页面加载完毕后加载</li><li>link兼容性比@import好</li><li>link支持多种资源预加载的方法<ol><li>preload 预加载</li><li>prefetch 空闲时下载</li><li>preconnect 提前查询DNS</li></ol></li></ol><h1 id="语义化"><a href="#语义化" class="headerlink" title="语义化"></a>语义化</h1><ol><li>head：头部</li><li>nav：导航栏</li><li>section：区块</li><li>main：主要区域</li><li>article：主要内容</li><li>aside：侧边栏</li><li>footer：底部</li></ol><ul><li>利于SEO</li><li>增强可读性</li></ul><h1 id="DOCTYPE（文档类型）的作用"><a href="#DOCTYPE（文档类型）的作用" class="headerlink" title="DOCTYPE（文档类型）的作用"></a>DOCTYPE（文档类型）的作用</h1><p>标识文档的类型，以供浏览器识别解析 xhtml html等</p><h1 id="script标签中defer和async的区别"><a href="#script标签中defer和async的区别" class="headerlink" title="script标签中defer和async的区别"></a>script标签中defer和async的区别</h1><ol><li>defer顺序执行，async无法保证顺序执行</li><li>async表示后续文档的加载执行与js脚本的家在执行是并行的。defer表示文档和js脚本的加载时并行的，但js需要在所有元素解析完成后才执行，即DOMContentLoaded事件触发执行之前。</li></ol><h1 id="常用的meta标签有哪些"><a href="#常用的meta标签有哪些" class="headerlink" title="常用的meta标签有哪些"></a>常用的meta标签有哪些</h1><p><strong>常用的有</strong></p><ol><li>charset，描述文档编码类型</li><li>name设置为keywords，页面关键词</li><li>name设置为description，描述页面</li><li>http-equiv设置为refresh，表示页面重定向和刷新</li><li>name设置为viewport，针对移动端适，可以控制视口的大小和比例<ul><li><code>content</code> 参数有以下几种：<ul><li><code>width viewport</code>：宽度(数值&#x2F;device-width)</li><li><code>height viewport</code>：高度(数值&#x2F;device-height)</li><li><code>initial-scale</code>：初始缩放比例</li><li><code>maximum-scale</code>：最大缩放比例</li><li><code>minimum-scale</code>：最小缩放比例</li><li><code>user-scalable</code>：是否允许用户缩放(yes&#x2F;no）</li></ul></li></ul></li><li>name设置为robots，搜索引擎索引方式 <ul><li><code>content</code> 参数有以下几种：</li><li><code>all</code>：文件将被检索，且页面上的链接可以被查询；</li><li><code>none</code>：文件将不被检索，且页面上的链接不可以被查询；</li><li><code>index</code>：文件将被检索；</li><li><code>follow</code>：页面上的链接可以被查询；</li><li><code>noindex</code>：文件将不被检索；</li><li><code>nofollow</code>：页面上的链接不可以被查询。</li></ul></li></ol><h1 id="H5新特性"><a href="#H5新特性" class="headerlink" title="H5新特性"></a>H5新特性</h1><ol><li>语义化标签</li><li>音视频标签</li><li>进度条、度量器</li><li>DOM查询操作</li><li>Web存储<br> localStorage和sessionStorage</li><li>input标签新增属性：placeholder、autocomplete、autofocus、require</li><li>其他<ul><li>drag Api</li><li>画布（canvas ）</li><li>SVG</li><li>地理定位：Geolocation</li><li>websocket</li></ul></li></ol><h1 id="img的srcset属性的作用"><a href="#img的srcset属性的作用" class="headerlink" title="img的srcset属性的作用"></a>img的srcset属性的作用</h1><p>用于控制不同屏幕密度下加载指定的图片。目前的屏幕密度有1x,2x,3x,4x四种，<code>srcset</code>可以控制不同密度下的图像及其质量</p><h1 id="行内元素有哪些？块级元素有哪些？-空-void-元素有那些？"><a href="#行内元素有哪些？块级元素有哪些？-空-void-元素有那些？" class="headerlink" title="行内元素有哪些？块级元素有哪些？ 空(void)元素有那些？"></a>行内元素有哪些？块级元素有哪些？ 空(void)元素有那些？</h1><ul><li>行内元素有：<code>a b span img input select strong</code>；</li><li>块级元素有：<code>div ul ol li dl dt dd h1 h2 h3 h4 h5 h6 p</code>；</li></ul><p>空元素，即没有内容的HTML元素。空元素是在开始标签中关闭的，也就是空元素没有闭合标签：</p><ul><li>常见的有：<code>&lt;br&gt;</code>、<code>&lt;hr&gt;</code>、<code>&lt;img&gt;</code>、<code>&lt;input&gt;</code>、<code>&lt;link&gt;</code>、<code>&lt;meta&gt;</code>；</li><li>鲜见的有：<code>&lt;area&gt;</code>、<code>&lt;base&gt;</code>、<code>&lt;col&gt;</code>、<code>&lt;colgroup&gt;</code>、<code>&lt;command&gt;</code>、<code>&lt;embed&gt;</code>、<code>&lt;keygen&gt;</code>、<code>&lt;param&gt;</code>、<code>&lt;source&gt;</code>、<code>&lt;track&gt;</code>、<code>&lt;wbr&gt;</code>。</li></ul><h1 id="HTML5离线存储，工作原理？"><a href="#HTML5离线存储，工作原理？" class="headerlink" title="HTML5离线存储，工作原理？"></a>HTML5离线存储，工作原理？</h1><p>离线存储指的是：在用户没有与因特网连接时，可以正常访问站点或应用，在用户与因特网连接时，更新用户机器上的缓存文件。<br><strong>原理:</strong> HTML5的离线存储是基于一个新建的 <code>.appcache</code> 文件的缓存机制(不是存储技术)，通过这个文件上的解析清单离线存储资源，这些资源就会像cookie一样被存储了下来。之后当网络在处于离线状态下时，浏览器会通过被离线存储的数据进行页面展示<br><strong>用法：</strong></p><ol><li>创建一个和 html 同名的 manifest 文件，然后在页面头部加入 manifest 属性<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!~~ cache.manifest --&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">manifest</span>=<span class="string">&quot;index.manifest&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>在 <code>cache.manifest</code> 文件中编写需要离线存储的资源<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">CACHE MANIFEST</span><br><span class="line">#v0.11</span><br><span class="line">CACHE:</span><br><span class="line">js/app.js</span><br><span class="line">css/style.css</span><br><span class="line">NETWORK:</span><br><span class="line">resourse/logo.png</span><br><span class="line">FALLBACK:</span><br><span class="line">/ /offline.html</span><br></pre></td></tr></table></figure></li></ol><ul><li><strong>CACHE</strong>: 表示需要离线存储的资源列表，由于包含 manifest 文件的页面将被自动离线存储，所以不需要把页面自身也列出来。</li><li><strong>NETWORK</strong>: 表示在它下面列出来的资源只有在在线的情况下才能访问，他们不会被离线存储，所以在离线情况下无法使用这些资源。不过，如果在 CACHE 和 NETWORK 中有一个相同的资源，那么这个资源还是会被离线存储，也就是说 CACHE 的优先级更高。</li><li><strong>FALLBACK</strong>: 表示如果访问第一个资源失败，那么就使用第二个资源来替换他，比如上面这个文件表示的就是如果访问根目录下任何一个资源失败了，那么就去访问 offline.html 。<br>在离线状态时，操作 <code>window.applicationCache</code> 进行离线缓存的操作<br><strong>如何更新缓存：</strong><br>（1）更新 manifest 文件<br>（2）通过 javascript 操作<br>（3）清除浏览器缓存<br><strong>注意事项：</strong><br>（1）浏览器对缓存数据的容量限制可能不太一样（某些浏览器设置的限制是每个站点 5MB）。<br>（2）如果 manifest 文件，或者内部列举的某一个文件不能正常下载，整个更新过程都将失败，浏览器继续全部使用老的缓存。<br>（3）引用 manifest 的 html 必须与 manifest 文件同源，在同一个域下。<br>（4）FALLBACK 中的资源必须和 manifest 文件同源。<br>（5）当一个资源被缓存后，该浏览器直接请求这个绝对路径也会访问缓存中的资源。<br>（6）站点中的其他页面即使没有设置 manifest 属性，请求的资源如果在缓存中也从缓存中访问。<br>（7）当 manifest 文件发生改变时，资源请求本身也会触发更新。</li></ul><h1 id="iframe-有那些优点和缺点？"><a href="#iframe-有那些优点和缺点？" class="headerlink" title="iframe 有那些优点和缺点？"></a>iframe 有那些优点和缺点？</h1><p>iframe 元素会创建包含另外一个文档的内联框架（即行内框架）。<br>优点：  </p><ul><li>用来加载速度较慢的内容（如广告）  </li><li>可以使脚本可以并行下载  </li><li>可以实现跨子域通信</li></ul><p>缺点：</p><ul><li>iframe 会阻塞主页面的 onload 事件  </li><li>无法被一些搜索引擎索识别  </li><li>会产生很多页面，不容易管理</li></ul><h1 id="SVG和Canvas的区别"><a href="#SVG和Canvas的区别" class="headerlink" title="SVG和Canvas的区别"></a>SVG和Canvas的区别</h1><ol><li>SVG不依赖分辨率，Canvas依赖分辨率</li><li>SVG支持事件处理器，Canvas不支持事件处理器</li><li>Canvas的文本渲染能力比较弱</li><li>复杂度高会减慢SVG的渲染，Canvas适合图像密集型的游戏。</li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;HTML 知识总结&lt;/p&gt;</summary>
    
    
    
    <category term="面试" scheme="http://example.com/categories/%E9%9D%A2%E8%AF%95/"/>
    
    <category term="HTML" scheme="http://example.com/categories/%E9%9D%A2%E8%AF%95/HTML/"/>
    
    
    <category term="面试" scheme="http://example.com/tags/%E9%9D%A2%E8%AF%95/"/>
    
    <category term="HTML" scheme="http://example.com/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>设计模式：发布订阅模式</title>
    <link href="http://example.com/2022/11/04/%E5%8F%91%E5%B8%83%E8%AE%A2%E9%98%85%E6%A8%A1%E5%BC%8F/"/>
    <id>http://example.com/2022/11/04/%E5%8F%91%E5%B8%83%E8%AE%A2%E9%98%85%E6%A8%A1%E5%BC%8F/</id>
    <published>2022-11-04T08:36:03.000Z</published>
    <updated>2022-12-04T06:18:22.232Z</updated>
    
    <content type="html"><![CDATA[<p>简单的来说，就是将引用数据对象的对象作为订阅者，存放在数据对象的订阅者队列中或指定的缓存位置，当数据对象发生变化时，通过遍历订阅者队列通知订阅者数据的变化。</p><p>这种模式的存在解决了一些场景：例如需要轮询是否发生变化，这对性能无疑是一种浪费（但轮询可以做到主动索取，能避免通知失败的情况）</p><span id="more"></span><p>由于是以推送的形式去通知订阅者，所以该模式可以广泛应用于异步编程中，是一种回调函数的代替方案。该模式也能解耦发布者和订阅者，彼此不需要关注对方有何更改。</p><p>DOM事件的绑定就是发布订阅的实现，发布者为DOM，订阅者为listener。</p><p>当实现发布订阅模式时，需要关注如下三点</p><ol><li>指定发布者</li><li>维护一个订阅者集合，收集、删除等操作</li><li>发布时遍历集合通知订阅者，或执行订阅者的回调</li></ol><h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> publisher = &#123;&#125;;</span><br><span class="line"></span><br><span class="line">publisher.<span class="property">subscribeList</span> = [];</span><br><span class="line"></span><br><span class="line">publisher.<span class="property">addSubscribe</span> = <span class="keyword">function</span>(<span class="params">fn</span>)&#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">subscribeList</span>.<span class="title function_">push</span>(fn);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">publisher.<span class="property">notify</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">subscribeList</span>.<span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params">fn</span>)&#123;</span><br><span class="line">        fn.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">    &#125;,<span class="variable language_">this</span>)</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">publisher.<span class="title function_">addSubscribe</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;first subscriber&#x27;</span>,<span class="variable language_">this</span>)</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">publisher.<span class="title function_">addSubscribe</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;first subscriber&#x27;</span>)</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">publisher.<span class="title function_">notify</span>();</span><br></pre></td></tr></table></figure><p>为了能够更好的区分订阅者订阅的消息种类（那部分数据发生了变化），在添加订阅者队列时可以指定key值标识</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">publisher.<span class="property">subscribeList</span> = &#123;&#125;;</span><br><span class="line">publisher.<span class="property">addSubscribe</span> = <span class="keyword">function</span>(<span class="params">key, fn</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="variable language_">this</span>.<span class="property">subscribeList</span>[key])&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">subscribeList</span>[key] = [];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">subscribeList</span>.<span class="title function_">push</span>(fn);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">publisher.<span class="property">notify</span> = <span class="keyword">function</span>(<span class="params">...args</span>)&#123;</span><br><span class="line">    <span class="keyword">const</span> [key, ...params] = [...ages];</span><br><span class="line">    <span class="keyword">const</span> fns = <span class="variable language_">this</span>.<span class="property">subscribeList</span>[key];</span><br><span class="line">    <span class="keyword">if</span>(!fns)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    fns.<span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        fn.<span class="title function_">apply</span>(<span class="variable language_">this</span>, params);</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;简单的来说，就是将引用数据对象的对象作为订阅者，存放在数据对象的订阅者队列中或指定的缓存位置，当数据对象发生变化时，通过遍历订阅者队列通知订阅者数据的变化。&lt;/p&gt;
&lt;p&gt;这种模式的存在解决了一些场景：例如需要轮询是否发生变化，这对性能无疑是一种浪费（但轮询可以做到主动索取，能避免通知失败的情况）&lt;/p&gt;</summary>
    
    
    
    <category term="设计模式" scheme="http://example.com/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
    <category term="常用的设计模式" scheme="http://example.com/tags/%E5%B8%B8%E7%94%A8%E7%9A%84%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>opacity与回流重绘</title>
    <link href="http://example.com/2022/11/01/opacity%E4%B8%8E%E5%9B%9E%E6%B5%81%E9%87%8D%E7%BB%98/"/>
    <id>http://example.com/2022/11/01/opacity%E4%B8%8E%E5%9B%9E%E6%B5%81%E9%87%8D%E7%BB%98/</id>
    <published>2022-11-01T06:32:44.000Z</published>
    <updated>2022-12-04T06:18:22.232Z</updated>
    
    <content type="html"><![CDATA[<p>直观上来说，我仍然认为opacity与回流&#x2F;重排没有半毛钱关系，但chrome控制台的性能分析报告显示确确实实出现了布局相关的渲染流程，但似乎是不确定的，存在某些契机。这太反直觉了，网上的资料也没有特别正确且直观的说明。所以下面只能根据个人推测来理解这个现象</p><p>牢记之所以使用 opacity 和 transform 等元素，最终是为了尽可能降低浏览器的计算成本，这一理论是正确的。</p><p>结论是，关于opacity的测试分为三种情况，分别是：</p><ol><li>触发回流（Layout）&#x3D;&gt;重绘（Paint）&#x3D;&gt;合成（Composite Layers）</li><li>跳过回流和重绘，直接合成处理</li><li>触发重绘&#x3D;&gt;合成</li></ol><p>案例如下</p><span id="more"></span><p><strong>回流案例</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.text</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">opacity</span>: <span class="number">1</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.opa</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">opacity</span>: <span class="number">0.3</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">window</span>.<span class="property">onload</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;text&#x27;</span>).<span class="property">classList</span>.<span class="title function_">toggle</span>(<span class="string">&#x27;opa&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;, <span class="number">1000</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span> <span class="attr">class</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span> <span class="attr">id</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;text&quot;</span>&gt;</span>CSS Trigger<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>一旦将text类的opacity设置为1，行为将涉及到回流，从而触发重绘和合成。</p><p>猜测：将opacity在1和小于1的值之间切换会迫使CSS的layers发生不断的变化（创建新的和渲染层和删除渲染层&#x2F;创建新的层叠上下文和删除层叠上下文  二者不确定是哪个原因造成的），从而触发layout阶段。</p><p><strong>跳过回流和重绘，只进行合成的案例</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.text</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">opacity</span>: <span class="number">0.99</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.app</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">opacity</span>: <span class="number">1</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.opa</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">opacity</span>: <span class="number">0.3</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">window</span>.<span class="property">onload</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;text&#x27;</span>).<span class="property">classList</span>.<span class="title function_">toggle</span>(<span class="string">&#x27;opa&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;, <span class="number">1000</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span> <span class="attr">class</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span> <span class="attr">id</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;text&quot;</span>&gt;</span>CSS Trigger<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>猜测1<br>当text类的opacity被设置为小于1的值时，会形成一个单独的绘制层<code>PaintLayer</code>。从谷歌控制台的性能报告上来看，该流程跳过了回流和重绘，直接进行了合成。推测应该h1标签是满足了提升为合成层的条件，从而跳过了layout 和 paint。</p><p>猜测2<br>浏览器为h1创建了一个单独的渲染层，在两个opacity&lt;1的值相互切换的过程中，都发生在同一个渲染层中，并不涉及层反复新建和删除，从而避免了layout阶段。（但后续为什么不触发paint阶段解释不通，所以觉得猜测1更贴切，下方的案例也贴切猜测1的描述）</p><p><strong>跳过回流，只进行重绘和合成的案例</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.app</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.text</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">z-index</span>: <span class="number">1</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">opacity</span>: <span class="number">1</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.opa</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">opacity</span>: <span class="number">0.3</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">window</span>.<span class="property">onload</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;text&#x27;</span>).<span class="property">classList</span>.<span class="title function_">toggle</span>(<span class="string">&#x27;opa&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;, <span class="number">1000</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span> <span class="attr">class</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span> <span class="attr">id</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;text&quot;</span>&gt;</span>CSS Trigger<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>上述写法通过将弹性盒子的子元素<code>z-index</code>设置非<code>auto</code>创建了新的绘制层，但由于不满足提升为合成层的条件，所以仍然需要经过paint阶段，无法跳过。</p><p>关于浏览器分层这部分知识并没有找到一个很权威的说法，网上的答案参差不齐，导致我的想法也没办法验证，后续会继续关注这部分知识，在此先记录下当前的想法</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;直观上来说，我仍然认为opacity与回流&amp;#x2F;重排没有半毛钱关系，但chrome控制台的性能分析报告显示确确实实出现了布局相关的渲染流程，但似乎是不确定的，存在某些契机。这太反直觉了，网上的资料也没有特别正确且直观的说明。所以下面只能根据个人推测来理解这个现象&lt;/p&gt;
&lt;p&gt;牢记之所以使用 opacity 和 transform 等元素，最终是为了尽可能降低浏览器的计算成本，这一理论是正确的。&lt;/p&gt;
&lt;p&gt;结论是，关于opacity的测试分为三种情况，分别是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;触发回流（Layout）&amp;#x3D;&amp;gt;重绘（Paint）&amp;#x3D;&amp;gt;合成（Composite Layers）&lt;/li&gt;
&lt;li&gt;跳过回流和重绘，直接合成处理&lt;/li&gt;
&lt;li&gt;触发重绘&amp;#x3D;&amp;gt;合成&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;案例如下&lt;/p&gt;</summary>
    
    
    
    <category term="前端" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="渲染" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF/%E6%B8%B2%E6%9F%93/"/>
    
    
    <category term="渲染" scheme="http://example.com/tags/%E6%B8%B2%E6%9F%93/"/>
    
    <category term="回流" scheme="http://example.com/tags/%E5%9B%9E%E6%B5%81/"/>
    
    <category term="重绘" scheme="http://example.com/tags/%E9%87%8D%E7%BB%98/"/>
    
  </entry>
  
</feed>
